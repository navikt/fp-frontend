name: Build app
on:
  workflow_call:
    secrets:
      READER_TOKEN:
        description: 'A token passed from the caller workflow'
        required: true
      SENTRY_AUTH_TOKEN:
        description: 'A token passed from the caller workflow'
        required: true
    inputs:
      runs-on:
        required: false
        type: string
        description: Miljø versjon som skal brukes til bygg.
        default: 'ubuntu-latest'
      node-version:
        required: false
        type: string
        description: Node version som brukes.
        default: '22'
      build-image:
        required: false
        type: boolean
        description: Skal docker image bygges?
        default: true
      run-knip:
        required: false
        type: boolean
        description: Skal knip kjøres?
        default: false
      push-image:
        required: false
        type: boolean
        description: Skal docker image pushes?
        default: false
      branch:
        required: false
        type: string
        description: Alternativ branch å bygge fra
      image_suffix:
        required: false
        type: string
        description: 'The suffix of the image to be deployed'
        default: ''
      app:
        required: false
        type: string
        description: App som skal bygges
    outputs:
      build-version:
        description: 'Build version'
        value: ${{ jobs.build-and-test.outputs.build-version }}
jobs:
  build-and-test:
    name: Build and test
    permissions:
      packages: write
      id-token: write
    runs-on: ${{ (github.event.pull_request.user.login == 'dependabot[bot]' && 'ubuntu-latest') || inputs.runs-on }}
    env:
      TZ: 'Europe/Oslo'
    outputs:
      build-version: ${{ steps.generate-build-version.outputs.build-version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # ratchet:actions/checkout@v4
        with:
          ref: ${{ (inputs.branch != '' && inputs.branch) || '' }}
          fetch-depth: 0
      - name: Sette yarn-config
        run: |
          yarn config set npmScopes.navikt.npmRegistryServer "https://npm.pkg.github.com"
          yarn config set npmScopes.navikt.npmAlwaysAuth true
          yarn config set npmScopes.navikt.npmAuthToken $NPM_AUTH_TOKEN
        env:
          NPM_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
      - name: Set up NODE med yarn
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # ratchet:actions/setup-node@v3
        with:
          node-version: ${{ inputs.node-version }}
          cache: 'yarn'
      - name: Use turbo cache
        uses: actions/cache@v4
        with:
          path: ~/work/fp-frontend/fp-frontend/.turbo
          key: turbo-${{ runner.os }}-${{ hashFiles('yarn.lock') }}-${{ inputs.app }}
          restore-keys: |
            turbo-${{ runner.os }}-
      - name: Installere dependencies
        run: yarn install --immutable
      - name: Build and linting
        run: yarn build --filter=@navikt/${{ inputs.app }}
      - name: Run tests (linting always cached from build step)
        run: yarn test --filter=@navikt/${{ inputs.app }}...
      - name: Knip it
        if: inputs.run-knip
        run: yarn knip --no-exit-code --reporter=markdown >> "$GITHUB_STEP_SUMMARY"
      - name: Opprett release med Sentry
        if: github.ref_name == 'master'
        run: yarn sentry-release
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      - name: Bygg server
        run: cd ./server && yarn install --immutable && yarn build
      - name: Generate build version
        id: generate-build-version
        run: |
          echo "build-version=$(date +%Y.%m.%d.%H%M%S)-$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_OUTPUT
      - name: Print build version
        run: echo "Generated build-version is ${{ steps.generate-build-version.outputs.build-version }}"
      - name: Bygg og push docker image
        if: inputs.build-image
        uses: navikt/fp-gha-workflows/.github/actions/build-push-docker-image@main # ratchet:exclude
        with:
          build-version: ${{ steps.generate-build-version.outputs.build-version }}
          push-image: ${{ inputs.push-image }}
          image_suffix: ${{ inputs.image_suffix }}
          build_args: |
            APP_NAME=${{ inputs.app }}
      - name: Archive code coverage results
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # ratchet:actions/upload-artifact@v4.6.2
        with:
          name: code-coverage-report
          path: coverage
