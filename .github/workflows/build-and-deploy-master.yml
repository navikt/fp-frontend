name: Build, push and deploy Fpsak-frontend

on:
  push:
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - 'CODEOWNERS'
    branches:
      - master
env:
  GITHUB_USERNAME: x-access-token
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  IMAGE_BASE: ghcr.io/${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: Sjekk ut kode
        uses: actions/checkout@v2.3.5
      - run:  git fetch --prune --unshallow

      - name: Hent tag
        run: echo "TAG=1.1_$(git log -1 --pretty='%ad' --date=format:'%Y.%m.%d.%H%M%S')-$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

      - name: Sette opp Node
        uses: actions/setup-node@v2.4.0
        with:
          node-version: 17.x

      - name: Get yarn cache
        id: yarn-cache
        run: |
          echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache node modules
        uses: actions/cache@v2.1.6
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Run yarn install
        run: yarn install --ignore-optional --no-progress --frozen-lockfile

      - name: Run linting
        run: yarn less:lint && yarn lint && yarn ts-check

      - name: Run test and coverage
        run: yarn test:coverage

      - name: Archive code coverage results
        uses: actions/upload-artifact@v2.2.4
        with:
          name: code-coverage-report
          path: coverage

      - name: Build
        run: |
          echo "IMAGE=$IMAGE_BASE:$TAG" >> $GITHUB_ENV
          yarn build

      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@31f1bb4610792058145ecedb9770b0145e118a96 # Use commit-sha1 instead of tag for security concerns
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Bygg, tag og push Docker image
        run: |
          docker build --pull --tag ${IMAGE_BASE}:${TAG} --tag ${IMAGE_BASE}:latest .
          docker push ${IMAGE_BASE} --all-tags

      - name: Lukk deployment-issues
        if: success()
        uses: actions/github-script@v4.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: ['bygg']
            }).then(response => {
              response.data.forEach(issue => {
                github.issues.update({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  state: 'closed'
                });
              });
            });

      - name: Opprett issue, trigg deploy til dev-fss
        if: success()
        uses: actions/github-script@v4.1
        with:
          github-token: ${{secrets.GH_P_TOKEN}}
          script: |
              github.issues.create( {
                owner: context.issue.owner,
                repo: context.issue.repo,
                labels: ['bygg'],
                title: 'Deploy av ${{ env.TAG }}'})
              .then(response => {
                      const issue = { owner: context.issue.owner,
                      repo: context.issue.repo,
                      issue_number: response.data.number }
                     github.issues.createComment({...issue,
                            title: 'Deploy av ${{ env.TAG }}',
                            body: '/promote dev-fss'})
               });

#  sonarCloudTrigger:
#    needs: build
#    name: SonarCloud Trigger
#    runs-on: ubuntu-latest
#    steps:
#      - name: Clone Repository
#        uses: actions/checkout@v2.3.5
#      - name: Download code coverage results
#        uses: actions/download-artifact@v2.0.10
#        with:
#          name: code-coverage-report
#          path: coverage
#      - name: Analyze with SonarCloud
#        uses: SonarSource/sonarcloud-github-action@v1.6
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
