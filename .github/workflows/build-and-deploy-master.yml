name: Build, push and deploy Fpsak-frontend

on:
  push:
    branches:
      - master
env:
  APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
  CLUSTER: dev-fss
  NAMESPACE: t4
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  IMAGE_BASE: docker.pkg.github.com/${{ github.repository }}/fpsak-frontend

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: Sjekk ut kode
        uses: actions/checkout@v2
      - run:  git fetch --prune --unshallow

      - name: Hent tag
        run: echo "::set-env name=TAG::$(git log -1 --pretty='%ad' --date=format:'%Y%m%d%H%M%S')-$(echo $GITHUB_SHA | cut -c1-7)"

      - name: Sette opp Node
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Run yarn install
        run: yarn install --ignore-optional --no-progress --frozen-lockfile

      - name: Run linting and tests
        run: yarn less:lint

      - name: Build
        run: |
          echo "::set-env name=IMAGE::$IMAGE_BASE:$TAG"
          yarn build

      - name: Bygg, tag og push Docker image
        run: |
          docker -v
          docker build . --pull -t $IMAGE
          echo  $GITHUB_TOKEN | docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} --password-stdin
          docker push $IMAGE_BASE

      - name: Opprett deployment issue
        if: success()
        uses: maxkomarychev/oction-create-issue@v0.7.1
        id: createdeployissue
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: Bygg av ${{ env.TAG }}
          body: |
            Kommenter med <b>/promote ${{ env.TAG }} cluster namespace</b>, hvor <b>cluster</b> er et gyldig clusternavn og <b>namespace</b> et eksisterende namespace i det clusteret.
            <table>
            <tr><th>Cluster</th><th>Namespace</th></tr>
            <tr><td>dev-fss</td><td>t4,q1</td></tr>
            <tr><td>prod-fss</td><td>default</td></tr>
            </table>
      - name: Trigg deploy til dev-fss t4
        if: success()
        uses: actions/github-script@0.3.0
        with:
          github-token: ${{secrets.NOTIFICATION}}
          script: |
            const issue = { owner: context.issue.owner,
                            repo: context.issue.repo,
                            issue_number: ${{ steps.createdeployissue.outputs.number }} }
            github.issues.createComment({...issue,
                                    title: 'Deploy av ${{ env.TAG }}',
                                    body: '/promote ${{ env.TAG }} ${{ env.CLUSTER }} ${{ env.NAMESPACE }}'})
