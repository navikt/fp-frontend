"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
const KeyboardActions_1 = require("./KeyboardActions");
const enterAction = (onAction) => ({
    name: 'enter',
    key: 'Enter',
    onAction,
});
const escapeAction = (onAction) => ({
    name: 'escape',
    key: 'Escape',
    onAction,
});
const arrowUpAction = (onAction) => ({
    name: 'arrowUp',
    key: 'ArrowUp',
    onAction,
});
const arrowDownAction = (onAction) => ({
    name: 'arrowUp',
    key: 'ArrowUp',
    onAction,
});
const arrowLeftAction = (onAction) => ({
    name: 'arrowLeft',
    key: 'ArrowLeft',
    onAction,
});
const arrowRightAction = (onAction) => ({
    name: 'arrowRight',
    key: 'ArrowRight',
    onAction,
});
const pageUpAction = (onAction) => ({
    name: 'pageUp',
    key: 'PageUp',
    onAction,
});
const pageDownAction = (onAction) => ({
    name: 'pageDown',
    key: 'PageDown',
    onAction,
});
const altPageUpAction = (onAction) => ({
    name: 'altPageUp',
    key: 'PageUp',
    altKey: true,
    onAction,
});
const altPageDownAction = (onAction) => ({
    name: 'altPageDown',
    key: 'PageDown',
    altKey: true,
    onAction,
});
const homeAction = (onAction) => ({
    name: 'home',
    key: 'Home',
    onAction,
});
const endAction = (onAction) => ({
    name: 'end',
    key: 'End',
    onAction,
});
const KeyboardNavigation = (props) => (react_1.default.createElement(KeyboardActions_1.KeyboardActions, { actions: [
        ...(props.onEnter ? [enterAction(props.onEnter)] : []),
        ...(props.onEscape ? [escapeAction(props.onEscape)] : []),
        ...(props.onArrowUp ? [arrowUpAction(props.onArrowUp)] : []),
        ...(props.onArrowDown ? [arrowDownAction(props.onArrowDown)] : []),
        ...(props.onArrowLeft ? [arrowLeftAction(props.onArrowLeft)] : []),
        ...(props.onArrowRight ? [arrowRightAction(props.onArrowRight)] : []),
        ...(props.onPageUp ? [pageUpAction(props.onPageUp)] : []),
        ...(props.onPageDown ? [pageDownAction(props.onPageDown)] : []),
        ...(props.onAltPageUp ? [altPageUpAction(props.onAltPageUp)] : []),
        ...(props.onAltPageDown ? [altPageDownAction(props.onAltPageDown)] : []),
        ...(props.onHome ? [homeAction(props.onHome)] : []),
        ...(props.onEnd ? [endAction(props.onEnd)] : []),
    ] }, props.children));
exports.default = KeyboardNavigation;
