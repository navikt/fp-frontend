"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const dayjs_1 = __importDefault(require("dayjs"));
const localeData_1 = __importDefault(require("dayjs/plugin/localeData"));
const utc_1 = __importDefault(require("dayjs/plugin/utc"));
const dateFormatUtils_1 = require("./dateFormatUtils");
dayjs_1.default.extend(localeData_1.default);
dayjs_1.default.extend(utc_1.default);
function formatDay(day, locale = 'nb') {
    return dayjs_1.default(day).locale(locale).format('DD.MM.YYYY, dddd');
}
function formatMonthTitle(date, locale = 'nb') {
    return dayjs_1.default(date).locale(locale).format('MMMM YYYY');
}
function formatWeekdayShort(day, locale = 'nb') {
    return dayjs_1.default().locale(locale).localeData().weekdays()[day].substr(0, 3);
}
function formatWeekdayLong(day, locale = 'nb') {
    return dayjs_1.default().locale(locale).localeData().weekdays()[day];
}
function getFirstDayOfWeek(locale = 'nb') {
    return dayjs_1.default().locale(locale).localeData().firstDayOfWeek();
}
function getMonths(locale = 'nb') {
    const months = [];
    let i = 0;
    while (i < 12) {
        months.push(dayjs_1.default().locale(locale).month(i).format('MMMM'));
        i += 1;
    }
    return months;
}
const calendarLocaleUtils = {
    formatDay,
    formatMonthTitle,
    formatWeekdayLong,
    formatWeekdayShort,
    getMonths,
    getFirstDayOfWeek,
    formatDate: (date) => dateFormatUtils_1.dateToInputDateString(date) || '',
    parseDate: (d) => dayjs_1.default.utc(d).toDate(),
};
exports.default = calendarLocaleUtils;
