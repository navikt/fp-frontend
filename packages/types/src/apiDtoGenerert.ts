// This file is auto-generated by @hey-api/openapi-ts

export type CallbackDto = {
  opprettetTidspunkt: string;
  avsenderRef: ReferanseDto;
  opprinneligGrunnlagRef?: ReferanseDto;
  oppdatertGrunnlagRef?: ReferanseDto;
};

export type ReferanseDto = {
  referanse: string;
};

export type BehandlingDto = {
  id?: number;
  uuid?: string;
  versjon?: number;
  type?: 'BT-002' | 'BT-003' | 'BT-004' | 'BT-008' | 'BT-006' | 'BT-007' | 'BT-009' | '-';
  status?: 'AVSLU' | 'FVED' | 'IVED' | 'OPPRE' | 'UTRED';
  fagsakId?: number;
  opprettet?: string;
  avsluttet?: string;
  endret?: string;
  endretAvBrukernavn?: string;
  behandlendeEnhetId?: string;
  behandlendeEnhetNavn?: string;
  erAktivPapirsoknad?: boolean;
  førsteÅrsak?: BehandlingÅrsakDto;
  behandlingsfristTid?: string;
  gjeldendeVedtak?: boolean;
  erPaaVent?: boolean;
  originalVedtaksDato?: string;
  behandlingHenlagt?: boolean;
  behandlingPaaVent?: boolean;
  behandlingPåVent?: boolean;
  fristBehandlingPåVent?: string;
  fristBehandlingPaaVent?: string;
  venteArsakKode?: string;
  venteÅrsakKode?: string;
  sprakkode?: 'NB' | 'NN' | 'EN' | '-';
  språkkode?: 'NB' | 'NN' | 'EN' | '-';
  behandlingKøet?: boolean;
  ansvarligSaksbehandler?: string;
  toTrinnsBehandling?: boolean;
  behandlingsresultat?: BehandlingsresultatDto;
  behandlingÅrsaker?: Array<BehandlingÅrsakDto>;
  vilkår?: Array<VilkårDto>;
  links?: Array<ResourceLink>;
  behandlingKoet?: boolean;
};

export type BehandlingsresultatDto = {
  id: number | null;
  type:
    | 'IKKE_FASTSATT'
    | 'INNVILGET'
    | 'AVSLÅTT'
    | 'OPPHØR'
    | 'HENLAGT_SØKNAD_TRUKKET'
    | 'HENLAGT_FEILOPPRETTET'
    | 'HENLAGT_BRUKER_DØD'
    | 'MERGET_OG_HENLAGT'
    | 'HENLAGT_SØKNAD_MANGLER'
    | 'FORELDREPENGER_ENDRET'
    | 'FORELDREPENGER_SENERE'
    | 'INGEN_ENDRING'
    | 'MANGLER_BEREGNINGSREGLER'
    | 'KLAGE_AVVIST'
    | 'KLAGE_MEDHOLD'
    | 'KLAGE_DELVIS_MEDHOLD'
    | 'KLAGE_OMGJORT_UGUNST'
    | 'KLAGE_YTELSESVEDTAK_OPPHEVET'
    | 'KLAGE_YTELSESVEDTAK_STADFESTET'
    | 'KLAGE_TILBAKEKREVING_VEDTAK_STADFESTET'
    | 'HENLAGT_KLAGE_TRUKKET'
    | 'HJEMSENDE_UTEN_OPPHEVE'
    | 'ANKE_AVVIST'
    | 'ANKE_MEDHOLD'
    | 'ANKE_DELVIS_MEDHOLD'
    | 'ANKE_OMGJORT_UGUNST'
    | 'ANKE_OPPHEVE_OG_HJEMSENDE'
    | 'ANKE_HJEMSENDE_UTEN_OPPHEV'
    | 'ANKE_YTELSESVEDTAK_STADFESTET'
    | 'HENLAGT_ANKE_TRUKKET'
    | 'INNSYN_INNVILGET'
    | 'INNSYN_DELVIS_INNVILGET'
    | 'INNSYN_AVVIST'
    | 'HENLAGT_INNSYN_TRUKKET';
  avslagsarsak:
    | '1001'
    | '1002'
    | '1003'
    | '1004'
    | '1005'
    | '1006'
    | '1007'
    | '1008'
    | '1009'
    | '1010'
    | '1011'
    | '1012'
    | '1013'
    | '1014'
    | '1015'
    | '1016'
    | '1017'
    | '1018'
    | '1019'
    | '1020'
    | '1021'
    | '1023'
    | '1024'
    | '1025'
    | '1026'
    | '1027'
    | '1028'
    | '1029'
    | '1031'
    | '1032'
    | '1033'
    | '1034'
    | '1035'
    | '1041'
    | '1051'
    | '1052'
    | '1060'
    | '1061'
    | '1062'
    | '1063'
    | '1064'
    | '1065'
    | '1066'
    | '1099'
    | '-';
  avslagsarsakFritekst: string | null;
  rettenTil: 'HAR_RETT_TIL_FP' | 'HAR_IKKE_RETT_TIL_FP' | '-';
  konsekvenserForYtelsen: Array<
    | 'FORELDREPENGER_OPPHØRER'
    | 'ENDRING_I_BEREGNING'
    | 'ENDRING_I_UTTAK'
    | 'ENDRING_I_FORDELING_AV_YTELSEN'
    | 'INGEN_ENDRING'
    | '-'
  > | null;
  vedtaksbrev: 'AUTOMATISK' | 'FRITEKST' | 'INGEN' | '-';
  vedtaksbrevStatus:
    | 'VEDTAKSBREV_PRODUSERES'
    | 'INGEN_VEDTAKSBREV'
    | 'INGEN_VEDTAKSBREV_ANKE'
    | 'INGEN_VEDTAKSBREV_KLAGEBEHANDLING'
    | 'INGEN_VEDTAKSBREV_BEHANDLING_ETTER_KLAGE'
    | 'INGEN_VEDTAKSBREV_JUSTERING_AV_FERIEPENGER'
    | 'INGEN_VEDTAKSBREV_INGEN_KONSEKVENS_FOR_YTELSE';
  overskrift: string | null;
  fritekstbrev: string | null;
  harRedigertVedtaksbrev: boolean | null;
  erRevurderingMedUendretUtfall: boolean | null;
  skjæringstidspunkt: SkjæringstidspunktDto;
  endretDekningsgrad: boolean | null;
  opphørsdato: string | null;
};

export type BehandlingÅrsakDto = {
  erAutomatiskRevurdering: boolean | null;
  behandlingArsakType:
    | 'RE-LOV'
    | 'RE-RGLF'
    | 'RE-FEFAKTA'
    | 'RE-PRSSL'
    | 'RE-ANNET'
    | 'RE-MDL'
    | 'RE-OPTJ'
    | 'RE-FRDLING'
    | 'RE-INNTK'
    | 'RE-FØDSEL'
    | 'RE-DØD'
    | 'RE-SRTB'
    | 'RE-FRIST'
    | 'RE-BER-GRUN'
    | 'RE-KLAG-U-INNTK'
    | 'RE-KLAG-M-INNTK'
    | 'ETTER_KLAGE'
    | 'RE-MF'
    | 'RE-MFIP'
    | 'RE-AVAB'
    | 'RE-END-FRA-BRUKER'
    | 'RE-END-INNTEKTSMELD'
    | 'BERØRT-BEHANDLING'
    | 'REBEREGN-FERIEPENGER'
    | 'RE-UTSATT-START'
    | 'RE-SATS-REGULERING'
    | 'ENDRE-DEKNINGSGRAD'
    | 'INFOBREV_BEHANDLING'
    | 'INFOBREV_OPPHOLD'
    | 'INFOBREV_PÅMINNELSE'
    | 'OPPHØR-NYTT-BARN'
    | 'RE-HENDELSE-FØDSEL'
    | 'RE-HENDELSE-DØD-F'
    | 'RE-HENDELSE-DØD-B'
    | 'RE-HENDELSE-DØDFØD'
    | 'RE-HENDELSE-UTFLYTTING'
    | 'RE-VEDTAK-PSB'
    | 'FEIL_PRAKSIS_UTSETTELSE'
    | 'FEIL_PRAKSIS_IVERKS_UTSET'
    | 'KLAGE_TILBAKE'
    | 'RE-YTELSE'
    | 'RE-REGISTEROPPL'
    | 'KØET-BEHANDLING'
    | 'RE-TILST-YT-INNVIL'
    | 'RE-TILST-YT-OPPH'
    | '-';
  manueltOpprettet: boolean | null;
};

export type ResourceLink = {
  href: string;
  rel: string;
  requestPayload?: {
    [key: string]: unknown;
  };
  type: 'DELETE' | 'GET' | 'PATCH' | 'POST' | 'PUT';
};

export type SkjæringstidspunktDto = {
  dato: string | null;
  utenMinsterett: boolean | null;
};

export type VilkårDto = {
  vilkarType:
    | 'FP_VK_1'
    | 'FP_VK_11'
    | 'FP_VK_16'
    | 'FP_VK_2'
    | 'FP_VK_2_F'
    | 'FP_VK_2_L'
    | 'FP_VK_3'
    | 'FP_VK_4'
    | 'FP_VK_5'
    | 'FP_VK_8'
    | 'FP_VK_33'
    | 'FP_VK_34'
    | 'FP_VK_21'
    | 'FP_VK_23'
    | 'FP_VK_41'
    | 'SVP_VK_1'
    | '-';
  vilkarStatus: 'OPPFYLT' | 'IKKE_OPPFYLT' | 'IKKE_VURDERT' | '-';
  avslagKode: string | null;
  lovReferanse: string | null;
  overstyrbar: boolean | null;
  evaluering: string | null;
  input: string | null;
};

export type UuidDto = {
  uuid?: string;
};

export type ReåpneBehandlingDto = {
  behandlingUuid: string;
  behandlingVersjon: number;
};

export type ByttBehandlendeEnhetDto = {
  behandlingUuid: string;
  enhetNavn?: string;
  enhetId?: string;
  begrunnelse?: string;
  behandlingVersjon?: number;
};

export type SettBehandlingPaVentDto = {
  behandlingUuid: string;
  behandlingVersjon: number;
  frist?: string;
  ventearsak?:
    | '-'
    | 'AVV_DOK'
    | 'AVV_FODSEL'
    | 'FOR_TIDLIG_SOKNAD'
    | 'SCANN'
    | 'UTV_FRIST'
    | 'VENT_PÅ_BRUKERTILBAKEMELDING'
    | 'VENT_UTLAND_TRYGD'
    | 'VENT_INNTEKT_RAPPORTERINGSFRIST'
    | 'VENT_MANGLENDE_SYKEMELDING'
    | 'VENT_OPDT_INNTEKTSMELDING'
    | 'VENT_OPPTJENING_OPPLYSNINGER'
    | 'VENT_PÅ_SISTE_AAP_MELDEKORT'
    | 'VENT_SØKNAD_SENDT_INFORMASJONSBREV'
    | 'VENT_ÅPEN_BEHANDLING'
    | 'VENT_KABAL'
    | 'ANKE_OVERSENDT_TIL_TRYGDERETTEN'
    | 'ANKE_VENTER_PAA_MERKNADER_FRA_BRUKER'
    | 'AVV_RESPONS_REVURDERING'
    | 'VENT_TIDLIGERE_BEHANDLING'
    | 'AAP_DP_SISTE_10_MND_SVP'
    | 'AAP_DP_ENESTE_AKTIVITET_SVP'
    | 'DELVIS_TILRETTELEGGING_OG_REFUSJON_SVP'
    | 'FLERE_ARBEIDSFORHOLD_SAMME_ORG_SVP'
    | 'FL_SN_IKKE_STOTTET_FOR_SVP'
    | 'GRADERING_FLERE_ARBEIDSFORHOLD'
    | 'OPPD_ÅPEN_BEH'
    | 'REFUSJON_3_MÅNEDER'
    | 'VENTELØNN_ELLER_MILITÆR_MED_FLERE_AKTIVITETER'
    | 'VENT_BEREGNING_TILBAKE_I_TID'
    | 'VENT_DEKGRAD_REGEL'
    | 'VENT_DØDFØDSEL_80P_DEKNINGSGRAD'
    | 'VENT_FEIL_ENDRINGSSØKNAD'
    | 'VENT_GRADERING_UTEN_BEREGNINGSGRUNNLAG'
    | 'VENT_INFOTRYGD'
    | 'VENT_MANGLENDE_ARBEIDSFORHOLD'
    | 'VENT_MILITÆR_OG_BG_UNDER_3G'
    | 'ULIKE_STARTDATOER_SVP'
    | 'VENT_LOVENDRING_8_41'
    | 'VENT_PÅ_KORRIGERT_BESTEBEREGNING'
    | 'VENT_PÅ_NY_INNTEKTSMELDING_MED_GYLDIG_ARB_ID'
    | 'VENT_REGISTERINNHENTING'
    | 'VENT_ØKONOMI';
};

export type GjenopptaBehandlingDto = {
  behandlingUuid: string;
  behandlingVersjon: number;
};

export type HenleggBehandlingDto = {
  behandlingUuid: string;
  årsakKode: string;
  begrunnelse?: string;
  behandlingVersjon?: number;
};

export type SaksnummerDto = {
  saksnummer: string;
};

export type BehandlingIdDto = {
  behandlingUuid: string;
};

export type AksjonspunktDto = {
  definisjon:
    | '5001'
    | '5027'
    | '5004'
    | '5005'
    | '5006'
    | '5007'
    | '5008'
    | '5011'
    | '5012'
    | '5013'
    | '5014'
    | '5015'
    | '5016'
    | '5017'
    | '5002'
    | '5026'
    | '5028'
    | '5030'
    | '5031'
    | '5033'
    | '5034'
    | '5003'
    | '5035'
    | '5037'
    | '5038'
    | '5039'
    | '5040'
    | '5043'
    | '5046'
    | '5047'
    | '5049'
    | '5051'
    | '5052'
    | '5054'
    | '5055'
    | '5057'
    | '5058'
    | '5059'
    | '5060'
    | '5061'
    | '5068'
    | '5064'
    | '5065'
    | '5063'
    | '5066'
    | '5071'
    | '5072'
    | '5069'
    | '5073'
    | '5076'
    | '5077'
    | '5085'
    | '5082'
    | '5084'
    | '5029'
    | '5086'
    | '5089'
    | '5041'
    | '5062'
    | '5091'
    | '5092'
    | '5095'
    | '5096'
    | '5074'
    | '5101'
    | '5102'
    | '5103'
    | '6002'
    | '6003'
    | '6004'
    | '6005'
    | '6006'
    | '6008'
    | '6009'
    | '6010'
    | '6011'
    | '6065'
    | '6014'
    | '6015'
    | '6045'
    | '6016'
    | '6018'
    | '6017'
    | '6103'
    | '7001'
    | '7002'
    | '7003'
    | '7005'
    | '7007'
    | '7008'
    | '7011'
    | '7013'
    | '7014'
    | '7020'
    | '7030'
    | '7033'
    | '7037'
    | '7039'
    | '7040'
    | "UNDEFINED('null')"
    | '5009'
    | '5019'
    | '5020'
    | '5021'
    | '5022'
    | '5023'
    | '5024'
    | '5025'
    | '5032'
    | '5036'
    | '5042'
    | '5044'
    | '5045'
    | '5048'
    | '5050'
    | '5053'
    | '5056'
    | '5067'
    | '5070'
    | '5075'
    | '5078'
    | '5079'
    | '5080'
    | '5081'
    | '5083'
    | '5087'
    | '5088'
    | '5090'
    | '5093'
    | '5094'
    | '5097'
    | '5098'
    | '5099'
    | '6007'
    | '6012'
    | '6013'
    | '6068'
    | '6070'
    | '7004'
    | '7006'
    | '7009'
    | '7015'
    | '7016'
    | '7017'
    | '7018'
    | '7019'
    | '7021'
    | '7022'
    | '7023'
    | '7024'
    | '7025'
    | '7026'
    | '7027'
    | '7028'
    | '7029'
    | '7032'
    | '7034'
    | '7035'
    | '7036'
    | '7038'
    | '7041';
  status: 'AVBR' | 'OPPR' | 'UTFO';
  begrunnelse: string | null;
  vilkarType:
    | 'FP_VK_1'
    | 'FP_VK_11'
    | 'FP_VK_16'
    | 'FP_VK_2'
    | 'FP_VK_2_F'
    | 'FP_VK_2_L'
    | 'FP_VK_3'
    | 'FP_VK_4'
    | 'FP_VK_5'
    | 'FP_VK_8'
    | 'FP_VK_33'
    | 'FP_VK_34'
    | 'FP_VK_21'
    | 'FP_VK_23'
    | 'FP_VK_41'
    | 'SVP_VK_1'
    | '-';
  toTrinnsBehandling: boolean;
  toTrinnsBehandlingGodkjent: boolean | null;
  vurderPaNyttArsaker: Array<
    'FEIL_FAKTA' | 'FEIL_LOV' | 'SKJØNN' | 'UTREDNING' | 'SAKSFLYT' | 'BEGRUNNELSE' | '-' | 'ANNET' | 'FEIL_REGEL'
  > | null;
  besluttersBegrunnelse: string | null;
  aksjonspunktType: 'AUTO' | 'MANU' | 'OVST' | 'SAOV' | '-';
  kanLoses: boolean;
  erAktivt: boolean;
  fristTid: string | null;
  endretTidspunkt: string | null;
  endretAv: string | null;
};

export type AsyncPollingStatus = {
  status: 'PENDING' | 'COMPLETE' | 'DELAYED' | 'CANCELLED' | 'HALTED';
  eta: string | null;
  message: string | null;
  pollIntervalMillis: number | null;
  location: string | null;
  cancelUri: string | null;
  readOnly: boolean | null;
  pending: boolean | null;
};

export type UtvidetBehandlingDto = {
  id: number | null;
  uuid: string | null;
  versjon: number | null;
  type: 'BT-002' | 'BT-003' | 'BT-004' | 'BT-008' | 'BT-006' | 'BT-007' | 'BT-009' | '-';
  status: 'AVSLU' | 'FVED' | 'IVED' | 'OPPRE' | 'UTRED';
  fagsakId: number | null;
  opprettet: string | null;
  avsluttet: string | null;
  endret: string | null;
  endretAvBrukernavn: string | null;
  behandlendeEnhetId: string | null;
  behandlendeEnhetNavn: string | null;
  erAktivPapirsoknad: boolean | null;
  førsteÅrsak: BehandlingÅrsakDto;
  behandlingsfristTid: string | null;
  gjeldendeVedtak: boolean | null;
  erPaaVent: boolean | null;
  originalVedtaksDato: string | null;
  behandlingHenlagt: boolean | null;
  behandlingPaaVent: boolean | null;
  behandlingPåVent: boolean | null;
  fristBehandlingPåVent: string | null;
  fristBehandlingPaaVent: string | null;
  venteArsakKode: string | null;
  venteÅrsakKode: string | null;
  sprakkode: 'NB' | 'NN' | 'EN' | '-';
  språkkode: 'NB' | 'NN' | 'EN' | '-';
  behandlingKøet: boolean | null;
  ansvarligSaksbehandler: string | null;
  toTrinnsBehandling: boolean | null;
  behandlingsresultat: BehandlingsresultatDto;
  behandlingÅrsaker: Array<BehandlingÅrsakDto> | null;
  vilkår: Array<VilkårDto> | null;
  links: Array<ResourceLink> | null;
  ansvarligBeslutter: string | null;
  aksjonspunkt: Array<AksjonspunktDto> | null;
  harSøknad: boolean | null;
  harRegisterdata: boolean | null;
  harSattEndringsdato: boolean | null;
  alleUttaksperioderAvslått: boolean | null;
  sjekkSimuleringResultat?: boolean;
  taskStatus: AsyncPollingStatus;
  behandlingKoet: boolean | null;
};

export type NyBehandlingDto = {
  saksnummer: string;
  behandlingType: 'BT-002' | 'BT-003' | 'BT-004' | 'BT-008' | 'BT-006' | 'BT-007' | 'BT-009' | '-';
  behandlingArsakType?:
    | 'RE-LOV'
    | 'RE-RGLF'
    | 'RE-FEFAKTA'
    | 'RE-PRSSL'
    | 'RE-ANNET'
    | 'RE-MDL'
    | 'RE-OPTJ'
    | 'RE-FRDLING'
    | 'RE-INNTK'
    | 'RE-FØDSEL'
    | 'RE-DØD'
    | 'RE-SRTB'
    | 'RE-FRIST'
    | 'RE-BER-GRUN'
    | 'RE-KLAG-U-INNTK'
    | 'RE-KLAG-M-INNTK'
    | 'ETTER_KLAGE'
    | 'RE-MF'
    | 'RE-MFIP'
    | 'RE-AVAB'
    | 'RE-END-FRA-BRUKER'
    | 'RE-END-INNTEKTSMELD'
    | 'BERØRT-BEHANDLING'
    | 'REBEREGN-FERIEPENGER'
    | 'RE-UTSATT-START'
    | 'RE-SATS-REGULERING'
    | 'ENDRE-DEKNINGSGRAD'
    | 'INFOBREV_BEHANDLING'
    | 'INFOBREV_OPPHOLD'
    | 'INFOBREV_PÅMINNELSE'
    | 'OPPHØR-NYTT-BARN'
    | 'RE-HENDELSE-FØDSEL'
    | 'RE-HENDELSE-DØD-F'
    | 'RE-HENDELSE-DØD-B'
    | 'RE-HENDELSE-DØDFØD'
    | 'RE-HENDELSE-UTFLYTTING'
    | 'RE-VEDTAK-PSB'
    | 'FEIL_PRAKSIS_UTSETTELSE'
    | 'FEIL_PRAKSIS_IVERKS_UTSET'
    | 'KLAGE_TILBAKE'
    | 'RE-YTELSE'
    | 'RE-REGISTEROPPL'
    | 'KØET-BEHANDLING'
    | 'RE-TILST-YT-INNVIL'
    | 'RE-TILST-YT-OPPH'
    | '-';
  nyBehandlingEtterKlage?: boolean;
};

export type ProsessTaskGruppeIdDto = {
  gruppe?: string;
};

export type AksjonspunktGodkjenningDto = {
  godkjent: boolean | null;
  begrunnelse: string | null;
  aksjonspunktKode: string | null;
  arsaker: Array<
    'FEIL_FAKTA' | 'FEIL_LOV' | 'SKJØNN' | 'UTREDNING' | 'SAKSFLYT' | 'BEGRUNNELSE' | '-' | 'ANNET' | 'FEIL_REGEL'
  >;
};

export type AktivitetskravGrunnlagArbeid = {
  orgNummer?: string;
  stillingsprosent?: number;
  permisjon?: Permisjon;
};

export type AndreYtelserDto = {
  ytelseType:
    | 'ETTERLØNN_SLUTTPAKKE'
    | 'FORENKLET_OPPGJØRSORDNING'
    | 'FRILANSER'
    | 'FRILANSER_OPPDRAGSTAKER'
    | 'LØNN_UNDER_UTDANNING'
    | 'MARITIMT_ARBEIDSFORHOLD'
    | 'MILITÆR_ELLER_SIVILTJENESTE'
    | 'ORDINÆRT_ARBEIDSFORHOLD'
    | 'PENSJON_OG_ANDRE_TYPER_YTELSER_UTEN_ANSETTELSESFORHOLD'
    | 'NÆRING'
    | 'UTENLANDSK_ARBEIDSFORHOLD'
    | 'VENTELØNN_VARTPENGER'
    | 'VANLIG'
    | '-';
  periodeFom: string | null;
  periodeTom: string | null;
};

export type AnnenForelderDto = {
  foedselsnummer: string | null;
  kanIkkeOppgiAnnenForelder: boolean | null;
  kanIkkeOppgiBegrunnelse: KanIkkeOppgiBegrunnelse;
  sokerHarAleneomsorg: boolean | null;
  denAndreForelderenHarRettPaForeldrepenger: boolean | null;
  morMottarUføretrygd: boolean | null;
  annenForelderRettEØS: boolean | null;
};

export type ArbeidsforholdDto = {
  arbeidsgiverReferanse?: string;
  arbeidType?: 'ORDINÆRT_ARBEID' | 'SELVSTENDIG_NÆRINGSDRIVENDE' | 'FRILANS' | 'ANNET';
};

export type Arbeidsgiver = {
  identifikator?: string;
  indexKey?: string;
  orgnr?: string;
  aktørId?: string;
  erVirksomhet?: boolean;
};

export type AvklarAleneomsorgVurderingDto = {
  aleneomsorg: boolean;
  annenforelderHarRett: boolean | null;
  annenForelderHarRettEØS: boolean | null;
  annenforelderMottarUføretrygd: boolean | null;
  begrunnelse: string | null;
};

export type AvklarAnnenforelderHarRettDto = {
  annenforelderHarRett: boolean;
  annenForelderHarRettEØS: boolean | null;
  annenforelderMottarUføretrygd: boolean | null;
  begrunnelse: string | null;
};

export type AvklarDekningsgradDto = {
  dekningsgrad: number | null;
  begrunnelse: string | null;
};

export type BekreftSokersOpplysningspliktManuDto = {
  begrunnelse: string | null;
  erVilkarOk: boolean | null;
  inntektsmeldingerSomIkkeKommer: Array<InntektsmeldingSomIkkeKommerDto> | null;
};

export type BekreftSvangerskapspengerDto = {
  termindato: string | null;
  fødselsdato: string | null;
  bekreftetSvpArbeidsforholdList: Array<SvpArbeidsforholdDto> | null;
  begrunnelse: string | null;
};

export type BekreftSvangerskapspengervilkårDto = {
  begrunnelse: string | null;
  avslagskode: string | null;
};

export type BekreftedeAksjonspunkterDto = {
  behandlingUuid: string;
  behandlingVersjon: number;
  bekreftedeAksjonspunktDtoer?: Array<BekreftetAksjonspunktDto>;
};

export type BekreftetAksjonspunktDto = (
  | ({
      '@type': '5016';
    } & FatterVedtakAksjonspunktDto)
  | ({
      '@type': '5002';
    } & AvklarDekningsgradDto)
  | ({
      '@type': '5037';
    } & VurderInnsynDto)
  | ({
      '@type': '5082';
    } & KlageFormkravAksjonspunktDto)
  | ({
      '@type': '5035';
    } & KlageVurderingResultatAksjonspunktDto)
  | ({
      '@type': '5102';
    } & VurderForutgåendeMedlemskapDto)
  | ({
      '@type': '5101';
    } & VurderMedlemskapDto)
  | ({
      '@type': '5055';
    } & KontrollerRevurderingsBehandlingDto)
  | ({
      '@type': '5026';
    } & VarselRevurderingManuellDto)
  | ({
      '@type': '5095';
    } & VurderFaresignalerDto)
  | ({
      '@type': '5091';
    } & BekreftSvangerskapspengerDto)
  | ({
      '@type': '5092';
    } & BekreftSvangerskapspengervilkårDto)
  | ({
      '@type': '5017';
    } & BekreftSokersOpplysningspliktManuDto)
  | ({
      '@type': '5007';
    } & SoknadsfristAksjonspunktDto)
  | ({
      '@type': '5043';
    } & VurderSøknadsfristDto)
  | ({
      '@type': '5029';
    } & KontrollerStorEtterbetalingSøkerDto)
  | ({
      '@type': '5084';
    } & VurderFeilutbetalingDto)
  | ({
      '@type': '5074';
    } & VurderUttakDokumentasjonDto)
  | ({
      '@type': '5060';
    } & AvklarAleneomsorgVurderingDto)
  | ({
      '@type': '5086';
    } & AvklarAnnenforelderHarRettDto)
  | ({
      '@type': '5069';
    } & FastsetteUttakKontrollerAnnenpartEøsDto)
  | ({
      '@type': '5076';
    } & FastsetteUttakKontrollerOpplysningerOmDødDto)
  | ({
      '@type': '5077';
    } & FastsetteUttakKontrollerOpplysningerOmSøknadsfristDto)
  | ({
      '@type': '5073';
    } & FastsetteUttakKontrollerRealitetsBehandlingEllerKlageDto)
  | ({
      '@type': '5071';
    } & FastsetteUttakPerioderDto)
  | ({
      '@type': '5072';
    } & FastsetteUttakStortingsrepresentantDto)
  | ({
      '@type': '5103';
    } & EøsUttakDto)
  | ({
      '@type': '5066';
    } & GraderingAktivitetUtenBgDto)
  | ({
      '@type': '5063';
    } & GraderingUkjentAktivitetDto)
  | ({
      '@type': '5064';
    } & IngenPerioderDto)
  | ({
      '@type': '5065';
    } & ManueltSattStartdatoDto)
  | ({
      '@type': '5028';
    } & ForeslaVedtakManueltAksjonspuntDto)
  | ({
      '@type': '5015';
    } & ForeslåVedtakAksjonspunktDto)
  | ({
      '@type': '5033';
    } & VurdereAnnenYteleseFørVedtakDto)
  | ({
      '@type': '5034';
    } & VurdereDokumentFørVedtakDto)
  | ({
      '@type': '5003';
    } & VurdereInntektsmeldingFørVedtakDto)
  | ({
      '@type': '5012';
    } & ManuellRegistreringEngangsstonadDto)
  | ({
      '@type': '5057';
    } & ManuellRegistreringEndringsøknadDto)
  | ({
      '@type': '5040';
    } & ManuellRegistreringForeldrepengerDto)
  | ({
      '@type': '5096';
    } & ManuellRegistreringSvangerskapspengerDto)
) & {
  begrunnelse?: string;
  '@type': string;
};

export type DokumentasjonVurderingBehovDto = {
  fom: string;
  tom: string;
  type: 'UTSETTELSE' | 'OVERFØRING' | 'UTTAK';
  årsak:
    | 'INNLEGGELSE_SØKER'
    | 'INNLEGGELSE_BARN'
    | 'HV_ØVELSE'
    | 'NAV_TILTAK'
    | 'SYKDOM_SØKER'
    | 'INNLEGGELSE_ANNEN_FORELDER'
    | 'SYKDOM_ANNEN_FORELDER'
    | 'BARE_SØKER_RETT'
    | 'ALENEOMSORG'
    | 'AKTIVITETSKRAV_ARBEID'
    | 'AKTIVITETSKRAV_UTDANNING'
    | 'AKTIVITETSKRAV_KVALPROG'
    | 'AKTIVITETSKRAV_INTROPROG'
    | 'AKTIVITETSKRAV_TRENGER_HJELP'
    | 'AKTIVITETSKRAV_INNLAGT'
    | 'AKTIVITETSKRAV_ARBEID_OG_UTDANNING'
    | 'AKTIVITETSKRAV_IKKE_OPPGITT'
    | 'TIDLIG_OPPSTART_FAR';
  vurdering?: 'GODKJENT' | 'GODKJENT_AUTOMATISK' | 'IKKE_GODKJENT' | 'IKKE_DOKUMENTERT';
  morsStillingsprosent?: number;
  aktivitetskravGrunnlag?: Array<AktivitetskravGrunnlagArbeid>;
};

export type EgenVirksomhetDto = {
  harArbeidetIEgenVirksomhet: boolean | null;
  virksomheter: Array<VirksomhetDto> | null;
};

export type EøsUttakDto = {
  perioder: Array<EøsUttakPeriodeDto>;
  begrunnelse: string | null;
};

export type EøsUttakPeriodeDto = {
  fom: string;
  tom: string;
  trekkdager: number;
  trekkonto: 'FELLESPERIODE' | 'MØDREKVOTE' | 'FEDREKVOTE' | 'FORELDREPENGER' | 'FORELDREPENGER_FØR_FØDSEL' | '-';
};

export type FaktaUttakPeriodeDto = {
  fom: string;
  tom: string;
  uttakPeriodeType?:
    | 'FELLESPERIODE'
    | 'MØDREKVOTE'
    | 'FEDREKVOTE'
    | 'FORELDREPENGER'
    | 'FORELDREPENGER_FØR_FØDSEL'
    | '-';
  utsettelseÅrsak?:
    | 'ARBEID'
    | 'LOVBESTEMT_FERIE'
    | 'SYKDOM'
    | 'INSTITUSJONSOPPHOLD_SØKER'
    | 'INSTITUSJONSOPPHOLD_BARNET'
    | 'HV_OVELSE'
    | 'NAV_TILTAK'
    | 'FRI'
    | '-';
  overføringÅrsak?:
    | 'INSTITUSJONSOPPHOLD_ANNEN_FORELDER'
    | 'SYKDOM_ANNEN_FORELDER'
    | 'IKKE_RETT_ANNEN_FORELDER'
    | 'ALENEOMSORG'
    | '-';
  oppholdÅrsak?:
    | '-'
    | 'UTTAK_MØDREKVOTE_ANNEN_FORELDER'
    | 'UTTAK_FEDREKVOTE_ANNEN_FORELDER'
    | 'UTTAK_FELLESP_ANNEN_FORELDER'
    | 'UTTAK_FORELDREPENGER_ANNEN_FORELDER';
  arbeidstidsprosent?: number;
  arbeidsforhold?: ArbeidsforholdDto;
  samtidigUttaksprosent?: number;
  flerbarnsdager?: boolean;
  morsAktivitet?:
    | '-'
    | 'ARBEID'
    | 'UTDANNING'
    | 'KVALPROG'
    | 'INTROPROG'
    | 'TRENGER_HJELP'
    | 'INNLAGT'
    | 'ARBEID_OG_UTDANNING'
    | 'UFØRE'
    | 'IKKE_OPPGITT';
  periodeKilde?: 'SØKNAD' | 'TIDLIGERE_VEDTAK' | 'ANDRE_NAV_VEDTAK' | 'SAKSBEHANDLER';
  begrunnelse?: string;
};

export type FastsetteUttakKontrollerAnnenpartEøsDto = {
  perioder: Array<UttakResultatPeriodeLagreDto> | null;
  begrunnelse: string | null;
};

export type FastsetteUttakKontrollerOpplysningerOmDødDto = {
  perioder: Array<UttakResultatPeriodeLagreDto> | null;
  begrunnelse: string | null;
};

export type FastsetteUttakKontrollerOpplysningerOmSøknadsfristDto = {
  perioder: Array<UttakResultatPeriodeLagreDto> | null;
  begrunnelse: string | null;
};

export type FastsetteUttakKontrollerRealitetsBehandlingEllerKlageDto = {
  perioder: Array<UttakResultatPeriodeLagreDto> | null;
  begrunnelse: string | null;
};

export type FastsetteUttakPerioderDto = {
  perioder: Array<UttakResultatPeriodeLagreDto> | null;
  begrunnelse: string | null;
};

export type FastsetteUttakStortingsrepresentantDto = {
  perioder: Array<UttakResultatPeriodeLagreDto> | null;
  begrunnelse: string | null;
};

export type FatterVedtakAksjonspunktDto = {
  aksjonspunktGodkjenningDtos: Array<AksjonspunktGodkjenningDto> | null;
  begrunnelse: string | null;
};

export type ForeslaVedtakManueltAksjonspuntDto = {
  skalBrukeOverstyrendeFritekstBrev: boolean | null;
  begrunnelse: string | null;
};

export type ForeslåVedtakAksjonspunktDto = {
  skalBrukeOverstyrendeFritekstBrev: boolean | null;
  begrunnelse: string | null;
};

export type FrilansDto = {
  harSokerPeriodeMedFrilans: boolean | null;
  perioder: Array<Frilansperiode> | null;
  erNyoppstartetFrilanser: boolean | null;
  harInntektFraFosterhjem: boolean | null;
  harHattOppdragForFamilie: boolean | null;
  oppdragPerioder: Array<Oppdragperiode> | null;
};

export type Frilansperiode = {
  periodeFom: string;
  periodeTom: string;
};

export type GraderingAktivitetUtenBgDto = {
  perioder: Array<FaktaUttakPeriodeDto> | null;
  begrunnelse: string | null;
};

export type GraderingDto = {
  periodeFom: string;
  periodeTom: string;
  arbeidsgiverIdentifikator: string | null;
  periodeForGradering:
    | 'FELLESPERIODE'
    | 'MØDREKVOTE'
    | 'FEDREKVOTE'
    | 'FORELDREPENGER'
    | 'FORELDREPENGER_FØR_FØDSEL'
    | '-';
  prosentandelArbeid: number | null;
  skalGraderes: boolean | null;
  erArbeidstaker: boolean | null;
  erFrilanser: boolean | null;
  erSelvstNæringsdrivende: boolean | null;
  harSamtidigUttak: boolean | null;
  samtidigUttaksprosent: number | null;
  flerbarnsdager: boolean | null;
};

export type GraderingUkjentAktivitetDto = {
  perioder: Array<FaktaUttakPeriodeDto> | null;
  begrunnelse: string | null;
};

export type IngenPerioderDto = {
  perioder: Array<FaktaUttakPeriodeDto> | null;
  begrunnelse: string | null;
};

export type InntektsmeldingSomIkkeKommerDto = {
  organisasjonsnummer: string | null;
  aktørId: string | null;
  brukerHarSagtAtIkkeKommer: boolean | null;
};

export type InternArbeidsforholdRef = {
  referanse?: string;
  indexKey?: string;
  uuidreferanse?: string;
};

export type KanIkkeOppgiBegrunnelse = {
  arsak: string;
  begrunnelse: string | null;
  utenlandskFoedselsnummer: string | null;
  land: string | null;
};

export type KlageFormkravAksjonspunktDto = {
  erKlagerPart: boolean | null;
  erFristOverholdt: boolean | null;
  erKonkret: boolean | null;
  erSignert: boolean | null;
  erTilbakekreving: boolean | null;
  fritekstTilBrev: string | null;
  begrunnelse: string | null;
  tilbakekrevingInfo: KlageTilbakekrevingDto;
  vedtakBehandlingUuid: string | null;
};

export type KlageTilbakekrevingDto = {
  tilbakekrevingUuid: string;
  tilbakekrevingVedtakDato?: string;
  tilbakekrevingBehandlingType?: string;
};

export type KlageVurderingResultatAksjonspunktDto = {
  klageVurdering:
    | 'OPPHEVE_YTELSESVEDTAK'
    | 'STADFESTE_YTELSESVEDTAK'
    | 'MEDHOLD_I_KLAGE'
    | 'AVVIS_KLAGE'
    | 'HJEMSENDE_UTEN_Å_OPPHEVE'
    | '-';
  fritekstTilBrev: string | null;
  klageMedholdArsak: 'NYE_OPPLYSNINGER' | 'ULIK_REGELVERKSTOLKNING' | 'ULIK_VURDERING' | 'PROSESSUELL_FEIL' | '-';
  klageVurderingOmgjoer: 'GUNST_MEDHOLD_I_KLAGE' | 'DELVIS_MEDHOLD_I_KLAGE' | 'UGUNST_MEDHOLD_I_KLAGE' | '-';
  klageHjemmel:
    | '14-02'
    | '14-04'
    | '14-05'
    | '14-06'
    | '14-07'
    | '14-09'
    | '14-10'
    | '14-11'
    | '14-12'
    | '14-13'
    | '14-14'
    | '14-15'
    | '14-16'
    | '14-17'
    | '8-2'
    | '21-3'
    | '22-13'
    | '22-15'
    | '883-5'
    | '883-6'
    | '-';
  begrunnelse: string | null;
};

export type KontrollerRevurderingsBehandlingDto = {
  begrunnelse: string | null;
};

export type KontrollerStorEtterbetalingSøkerDto = {
  begrunnelse: string | null;
};

export type ManuellRegistreringEndringsøknadDto = {
  tema: 'ADPSJN' | 'OMSRGO' | 'FODSL' | 'TERM' | '-';
  soknadstype: 'ES' | 'FP' | 'SVP' | '-';
  soker: 'MOR' | 'FAR' | 'MEDMOR' | 'ANDRE' | '-';
  rettigheter: 'ANNEN_FORELDER_DOED' | 'OVERTA_FORELDREANSVARET_ALENE' | 'MANN_ADOPTERER_ALENE';
  oppholdINorge: boolean | null;
  harTidligereOppholdUtenlands: boolean | null;
  harFremtidigeOppholdUtenlands: boolean | null;
  tidligereOppholdUtenlands: Array<UtenlandsoppholdDto> | null;
  fremtidigeOppholdUtenlands: Array<UtenlandsoppholdDto> | null;
  erBarnetFodt: boolean | null;
  termindato: string | null;
  terminbekreftelseDato: string | null;
  antallBarnFraTerminbekreftelse: number | null;
  antallBarn: number | null;
  foedselsDato: string | null;
  annenForelder: AnnenForelderDto;
  tilleggsopplysninger: string | null;
  språkkode: 'NB' | 'NN' | 'EN' | '-';
  kommentarEndring: string | null;
  registrerVerge: boolean | null;
  mottattDato: string | null;
  ufullstendigSoeknad: boolean | null;
  omsorg: OmsorgDto;
  tidsromPermisjon: TidsromPermisjonDto;
  annenForelderInformert: boolean | null;
  begrunnelse: string | null;
};

export type ManuellRegistreringEngangsstonadDto = {
  tema: 'ADPSJN' | 'OMSRGO' | 'FODSL' | 'TERM' | '-';
  soknadstype: 'ES' | 'FP' | 'SVP' | '-';
  soker: 'MOR' | 'FAR' | 'MEDMOR' | 'ANDRE' | '-';
  rettigheter: 'ANNEN_FORELDER_DOED' | 'OVERTA_FORELDREANSVARET_ALENE' | 'MANN_ADOPTERER_ALENE';
  oppholdINorge: boolean | null;
  harTidligereOppholdUtenlands: boolean | null;
  harFremtidigeOppholdUtenlands: boolean | null;
  tidligereOppholdUtenlands: Array<UtenlandsoppholdDto> | null;
  fremtidigeOppholdUtenlands: Array<UtenlandsoppholdDto> | null;
  erBarnetFodt: boolean | null;
  termindato: string | null;
  terminbekreftelseDato: string | null;
  antallBarnFraTerminbekreftelse: number | null;
  antallBarn: number | null;
  foedselsDato: string | null;
  annenForelder: AnnenForelderDto;
  tilleggsopplysninger: string | null;
  språkkode: 'NB' | 'NN' | 'EN' | '-';
  kommentarEndring: string | null;
  registrerVerge: boolean | null;
  mottattDato: string | null;
  ufullstendigSoeknad: boolean | null;
  omsorg: OmsorgDto;
  begrunnelse: string | null;
};

export type ManuellRegistreringForeldrepengerDto = {
  tema: 'ADPSJN' | 'OMSRGO' | 'FODSL' | 'TERM' | '-';
  soknadstype: 'ES' | 'FP' | 'SVP' | '-';
  soker: 'MOR' | 'FAR' | 'MEDMOR' | 'ANDRE' | '-';
  rettigheter: 'ANNEN_FORELDER_DOED' | 'OVERTA_FORELDREANSVARET_ALENE' | 'MANN_ADOPTERER_ALENE';
  oppholdINorge: boolean | null;
  harTidligereOppholdUtenlands: boolean | null;
  harFremtidigeOppholdUtenlands: boolean | null;
  tidligereOppholdUtenlands: Array<UtenlandsoppholdDto> | null;
  fremtidigeOppholdUtenlands: Array<UtenlandsoppholdDto> | null;
  erBarnetFodt: boolean | null;
  termindato: string | null;
  terminbekreftelseDato: string | null;
  antallBarnFraTerminbekreftelse: number | null;
  antallBarn: number | null;
  foedselsDato: string | null;
  annenForelder: AnnenForelderDto;
  tilleggsopplysninger: string | null;
  språkkode: 'NB' | 'NN' | 'EN' | '-';
  kommentarEndring: string | null;
  registrerVerge: boolean | null;
  mottattDato: string | null;
  ufullstendigSoeknad: boolean | null;
  omsorg: OmsorgDto;
  arbeidsforhold: Array<ArbeidsforholdDto> | null;
  andreYtelser: Array<AndreYtelserDto> | null;
  egenVirksomhet: EgenVirksomhetDto;
  frilans: FrilansDto;
  dekningsgrad: '100_PROSENT' | '80_PROSENT';
  tidsromPermisjon: TidsromPermisjonDto;
  annenForelderInformert: boolean | null;
  begrunnelse: string | null;
};

export type ManuellRegistreringSvangerskapspengerDto = {
  tema: 'ADPSJN' | 'OMSRGO' | 'FODSL' | 'TERM' | '-';
  soknadstype: 'ES' | 'FP' | 'SVP' | '-';
  soker: 'MOR' | 'FAR' | 'MEDMOR' | 'ANDRE' | '-';
  rettigheter: 'ANNEN_FORELDER_DOED' | 'OVERTA_FORELDREANSVARET_ALENE' | 'MANN_ADOPTERER_ALENE';
  oppholdINorge: boolean | null;
  harTidligereOppholdUtenlands: boolean | null;
  harFremtidigeOppholdUtenlands: boolean | null;
  tidligereOppholdUtenlands: Array<UtenlandsoppholdDto> | null;
  fremtidigeOppholdUtenlands: Array<UtenlandsoppholdDto> | null;
  erBarnetFodt: boolean | null;
  termindato: string | null;
  terminbekreftelseDato: string | null;
  antallBarnFraTerminbekreftelse: number | null;
  antallBarn: number | null;
  foedselsDato: string | null;
  annenForelder: AnnenForelderDto;
  tilleggsopplysninger: string | null;
  språkkode: 'NB' | 'NN' | 'EN' | '-';
  kommentarEndring: string | null;
  registrerVerge: boolean | null;
  mottattDato: string | null;
  ufullstendigSoeknad: boolean | null;
  omsorg: OmsorgDto;
  arbeidsforhold: Array<ArbeidsforholdDto> | null;
  andreYtelser: Array<AndreYtelserDto> | null;
  egenVirksomhet: EgenVirksomhetDto;
  frilans: FrilansDto;
  tilretteleggingArbeidsforhold: Array<SvpTilretteleggingArbeidsforholdDto> | null;
  begrunnelse: string | null;
};

export type ManueltSattStartdatoDto = {
  perioder: Array<FaktaUttakPeriodeDto> | null;
  begrunnelse: string | null;
};

export type NaringsvirksomhetTypeDto = {
  ANNEN: boolean | null;
  FISKE: boolean | null;
  DAGMAMMA: boolean | null;
  JORDBRUK_SKOGBRUK: boolean | null;
  typeFiske: string | null;
};

export type OmsorgDto = {
  antallBarn: number | null;
  foedselsDato: Array<string> | null;
  omsorgsovertakelsesdato: string | null;
  ankomstdato: string | null;
  erEktefellesBarn: boolean | null;
};

export type Oppdragperiode = {
  oppdragsgiver: string | null;
  fomDato: string | null;
  tomDato: string | null;
};

export type OppholdDto = {
  årsak:
    | '-'
    | 'UTTAK_MØDREKVOTE_ANNEN_FORELDER'
    | 'UTTAK_FEDREKVOTE_ANNEN_FORELDER'
    | 'UTTAK_FELLESP_ANNEN_FORELDER'
    | 'UTTAK_FORELDREPENGER_ANNEN_FORELDER';
  periodeFom: string;
  periodeTom: string;
};

export type OverføringsperiodeDto = {
  periodeFom: string;
  periodeTom: string;
  overforingArsak:
    | 'INSTITUSJONSOPPHOLD_ANNEN_FORELDER'
    | 'SYKDOM_ANNEN_FORELDER'
    | 'IKKE_RETT_ANNEN_FORELDER'
    | 'ALENEOMSORG'
    | '-';
};

export type Permisjon = {
  prosent?: number;
  type?: '-' | 'UTDANNING' | 'FORELDREPENGER' | 'PERMITTERING' | 'ANNEN_PERMISJON';
};

export type PermisjonPeriodeDto = {
  periodeFom: string;
  periodeTom: string;
  periodeType: 'FELLESPERIODE' | 'MØDREKVOTE' | 'FEDREKVOTE' | 'FORELDREPENGER' | 'FORELDREPENGER_FØR_FØDSEL' | '-';
  morsAktivitet:
    | '-'
    | 'ARBEID'
    | 'UTDANNING'
    | 'KVALPROG'
    | 'INTROPROG'
    | 'TRENGER_HJELP'
    | 'INNLAGT'
    | 'ARBEID_OG_UTDANNING'
    | 'UFØRE'
    | 'IKKE_OPPGITT';
  harSamtidigUttak: boolean | null;
  samtidigUttaksprosent: number | null;
  flerbarnsdager: boolean | null;
};

export type SoknadsfristAksjonspunktDto = {
  begrunnelse: string | null;
  erVilkarOk: boolean;
};

export type SvpArbeidsforholdDto = {
  tilretteleggingId?: number;
  tilretteleggingBehovFom?: string;
  tilretteleggingDatoer?: Array<SvpTilretteleggingDatoDto>;
  uttakArbeidType?: 'ORDINÆRT_ARBEID' | 'SELVSTENDIG_NÆRINGSDRIVENDE' | 'FRILANS' | 'ANNET';
  arbeidsgiverReferanse?: string;
  opplysningerOmRisiko?: string;
  opplysningerOmTilrettelegging?: string;
  kopiertFraTidligereBehandling?: boolean;
  mottattTidspunkt?: string;
  internArbeidsforholdReferanse?: string;
  eksternArbeidsforholdReferanse?: string;
  skalBrukes?: boolean;
  kanTilrettelegges?: boolean;
  stillingsprosentStartTilrettelegging?: number;
  velferdspermisjoner?: Array<VelferdspermisjonDto>;
  avklarteOppholdPerioder?: Array<SvpAvklartOppholdPeriodeDto>;
  begrunnelse?: string;
};

export type SvpAvklartOppholdPeriodeDto = {
  fom: string;
  tom: string;
  oppholdÅrsak: 'SYKEPENGER' | 'FERIE';
  oppholdKilde?: 'SØKNAD' | 'INNTEKTSMELDING' | 'REGISTRERT_AV_SAKSBEHANDLER' | 'TIDLIGERE_VEDTAK';
  forVisning?: boolean;
};

export type SvpTilretteleggingArbeidsforholdDto = (
  | ({
      '@type': 'FR';
    } & SvpTilretteleggingFrilanserDto)
  | ({
      '@type': 'PA';
    } & SvpTilretteleggingPrivatArbeidsgiverDto)
  | ({
      '@type': 'SN';
    } & SvpTilretteleggingSelvstendigNæringsdrivendeDto)
  | ({
      '@type': 'VI';
    } & SvpTilretteleggingVirksomhetDto)
) & {
  behovsdato: string | null;
  tilrettelegginger: Array<SvpTilretteleggingDto> | null;
};

export type SvpTilretteleggingDatoDto = {
  fom?: string;
  type?: 'HEL_TILRETTELEGGING' | 'DELVIS_TILRETTELEGGING' | 'INGEN_TILRETTELEGGING';
  stillingsprosent?: number;
  overstyrtUtbetalingsgrad?: number;
  kilde?: 'ENDRET_AV_SAKSBEHANDLER' | 'REGISTRERT_AV_SAKSBEHANDLER' | 'TIDLIGERE_VEDTAK' | 'SØKNAD';
  mottattDato?: string;
};

export type SvpTilretteleggingDto = {
  termindato?: string;
  fødselsdato?: string;
  arbeidsforholdListe?: Array<SvpArbeidsforholdDto>;
  saksbehandlet?: boolean;
};

export type SvpTilretteleggingFrilanserDto = {
  behovsdato: string | null;
  tilrettelegginger: Array<SvpTilretteleggingDto> | null;
};

export type SvpTilretteleggingPrivatArbeidsgiverDto = {
  behovsdato: string | null;
  tilrettelegginger: Array<SvpTilretteleggingDto> | null;
  arbeidsgiverIdentifikator: string | null;
};

export type SvpTilretteleggingSelvstendigNæringsdrivendeDto = {
  behovsdato: string | null;
  tilrettelegginger: Array<SvpTilretteleggingDto> | null;
};

export type SvpTilretteleggingVirksomhetDto = {
  behovsdato: string | null;
  tilrettelegginger: Array<SvpTilretteleggingDto> | null;
  organisasjonsnummer: string | null;
};

export type TidsromPermisjonDto = {
  overforingsperioder: Array<OverføringsperiodeDto> | null;
  permisjonsPerioder: Array<PermisjonPeriodeDto> | null;
  graderingPeriode: Array<GraderingDto> | null;
  utsettelsePeriode: Array<UtsettelseDto> | null;
  oppholdPerioder: Array<OppholdDto> | null;
};

export type Trekkdager = {
  [key: string]: unknown;
};

export type UtenlandsoppholdDto = {
  land: string;
  periodeFom: string;
  periodeTom: string;
};

export type UtsettelseDto = {
  periodeFom: string;
  periodeTom: string;
  periodeForUtsettelse:
    | 'FELLESPERIODE'
    | 'MØDREKVOTE'
    | 'FEDREKVOTE'
    | 'FORELDREPENGER'
    | 'FORELDREPENGER_FØR_FØDSEL'
    | '-';
  arsakForUtsettelse:
    | 'ARBEID'
    | 'LOVBESTEMT_FERIE'
    | 'SYKDOM'
    | 'INSTITUSJONSOPPHOLD_SØKER'
    | 'INSTITUSJONSOPPHOLD_BARNET'
    | 'HV_OVELSE'
    | 'NAV_TILTAK'
    | 'FRI'
    | '-';
  morsAktivitet:
    | '-'
    | 'ARBEID'
    | 'UTDANNING'
    | 'KVALPROG'
    | 'INTROPROG'
    | 'TRENGER_HJELP'
    | 'INNLAGT'
    | 'ARBEID_OG_UTDANNING'
    | 'UFØRE'
    | 'IKKE_OPPGITT';
};

export type UttakResultatPeriodeAktivitetLagreDto = {
  stønadskontoType?:
    | 'FELLESPERIODE'
    | 'MØDREKVOTE'
    | 'FEDREKVOTE'
    | 'FORELDREPENGER'
    | 'FORELDREPENGER_FØR_FØDSEL'
    | '-';
  trekkdagerDesimaler: Trekkdager;
  arbeidsgiver?: Arbeidsgiver;
  arbeidsgiverReferanse?: string;
  arbeidsforholdId?: InternArbeidsforholdRef;
  utbetalingsgrad?: number;
  uttakArbeidType?: 'ORDINÆRT_ARBEID' | 'SELVSTENDIG_NÆRINGSDRIVENDE' | 'FRILANS' | 'ANNET';
};

export type UttakResultatPeriodeLagreDto = {
  fom: string;
  tom: string;
  aktiviteter: Array<UttakResultatPeriodeAktivitetLagreDto>;
  begrunnelse?: string;
  periodeResultatType: 'INNVILGET' | 'AVSLÅTT' | 'MANUELL_BEHANDLING';
  periodeResultatÅrsak:
    | '-'
    | '2002'
    | '2003'
    | '2004'
    | '2005'
    | '2006'
    | '2007'
    | '2010'
    | '2011'
    | '2012'
    | '2013'
    | '2014'
    | '2015'
    | '2016'
    | '2017'
    | '2018'
    | '2019'
    | '2020'
    | '2021'
    | '2022'
    | '2023'
    | '2024'
    | '2025'
    | '2026'
    | '2027'
    | '2028'
    | '2030'
    | '2031'
    | '2032'
    | '2033'
    | '2034'
    | '2035'
    | '2036'
    | '2037'
    | '2038'
    | '2039'
    | '4002'
    | '4003'
    | '4005'
    | '4007'
    | '4008'
    | '4012'
    | '4013'
    | '4020'
    | '4022'
    | '4023'
    | '4025'
    | '4030'
    | '4031'
    | '4032'
    | '4033'
    | '4034'
    | '4035'
    | '4037'
    | '4038'
    | '4039'
    | '4040'
    | '4041'
    | '4050'
    | '4051'
    | '4052'
    | '4053'
    | '4054'
    | '4055'
    | '4056'
    | '4057'
    | '4058'
    | '4059'
    | '4060'
    | '4061'
    | '4062'
    | '4063'
    | '4064'
    | '4065'
    | '4066'
    | '4067'
    | '4068'
    | '4069'
    | '4070'
    | '4071'
    | '4072'
    | '4073'
    | '4074'
    | '4075'
    | '4076'
    | '4077'
    | '4081'
    | '4082'
    | '4084'
    | '4085'
    | '4086'
    | '4087'
    | '4088'
    | '4089'
    | '4092'
    | '4093'
    | '4095'
    | '4096'
    | '4097'
    | '4098'
    | '4099'
    | '4100'
    | '4102'
    | '4103'
    | '4104'
    | '4105'
    | '4106'
    | '4107'
    | '4108'
    | '4110'
    | '4111'
    | '4112'
    | '4115'
    | '4116'
    | '4117';
  utsettelseType:
    | 'ARBEID'
    | 'FERIE'
    | 'SYKDOM_SKADE'
    | 'SØKER_INNLAGT'
    | 'BARN_INNLAGT'
    | 'HV_OVELSE'
    | 'NAV_TILTAK'
    | 'FRI'
    | '-';
  oppholdÅrsak:
    | '-'
    | 'UTTAK_MØDREKVOTE_ANNEN_FORELDER'
    | 'UTTAK_FEDREKVOTE_ANNEN_FORELDER'
    | 'UTTAK_FELLESP_ANNEN_FORELDER'
    | 'UTTAK_FORELDREPENGER_ANNEN_FORELDER';
  flerbarnsdager?: boolean;
  samtidigUttak?: boolean;
  samtidigUttaksprosent?: number;
  graderingInnvilget?: boolean;
  graderingAvslagÅrsak: '-' | '4504' | '4501' | '4502' | '4503' | '4523';
  mottattDato?: string;
};

export type VarselRevurderingManuellDto = {
  sendVarsel: boolean | null;
  fritekst: string | null;
  frist: string | null;
  ventearsak:
    | '-'
    | 'AVV_DOK'
    | 'AVV_FODSEL'
    | 'FOR_TIDLIG_SOKNAD'
    | 'SCANN'
    | 'UTV_FRIST'
    | 'VENT_PÅ_BRUKERTILBAKEMELDING'
    | 'VENT_UTLAND_TRYGD'
    | 'VENT_INNTEKT_RAPPORTERINGSFRIST'
    | 'VENT_MANGLENDE_SYKEMELDING'
    | 'VENT_OPDT_INNTEKTSMELDING'
    | 'VENT_OPPTJENING_OPPLYSNINGER'
    | 'VENT_PÅ_SISTE_AAP_MELDEKORT'
    | 'VENT_SØKNAD_SENDT_INFORMASJONSBREV'
    | 'VENT_ÅPEN_BEHANDLING'
    | 'VENT_KABAL'
    | 'ANKE_OVERSENDT_TIL_TRYGDERETTEN'
    | 'ANKE_VENTER_PAA_MERKNADER_FRA_BRUKER'
    | 'AVV_RESPONS_REVURDERING'
    | 'VENT_TIDLIGERE_BEHANDLING'
    | 'AAP_DP_SISTE_10_MND_SVP'
    | 'AAP_DP_ENESTE_AKTIVITET_SVP'
    | 'DELVIS_TILRETTELEGGING_OG_REFUSJON_SVP'
    | 'FLERE_ARBEIDSFORHOLD_SAMME_ORG_SVP'
    | 'FL_SN_IKKE_STOTTET_FOR_SVP'
    | 'GRADERING_FLERE_ARBEIDSFORHOLD'
    | 'OPPD_ÅPEN_BEH'
    | 'REFUSJON_3_MÅNEDER'
    | 'VENTELØNN_ELLER_MILITÆR_MED_FLERE_AKTIVITETER'
    | 'VENT_BEREGNING_TILBAKE_I_TID'
    | 'VENT_DEKGRAD_REGEL'
    | 'VENT_DØDFØDSEL_80P_DEKNINGSGRAD'
    | 'VENT_FEIL_ENDRINGSSØKNAD'
    | 'VENT_GRADERING_UTEN_BEREGNINGSGRUNNLAG'
    | 'VENT_INFOTRYGD'
    | 'VENT_MANGLENDE_ARBEIDSFORHOLD'
    | 'VENT_MILITÆR_OG_BG_UNDER_3G'
    | 'ULIKE_STARTDATOER_SVP'
    | 'VENT_LOVENDRING_8_41'
    | 'VENT_PÅ_KORRIGERT_BESTEBEREGNING'
    | 'VENT_PÅ_NY_INNTEKTSMELDING_MED_GYLDIG_ARB_ID'
    | 'VENT_REGISTERINNHENTING'
    | 'VENT_ØKONOMI';
  begrunnelse: string | null;
};

export type VelferdspermisjonDto = {
  permisjonFom?: string;
  permisjonTom?: string;
  permisjonsprosent?: number;
  type?:
    | '-'
    | 'PERMISJON'
    | 'UTDANNINGSPERMISJON'
    | 'UTDANNINGSPERMISJON_IKKE_LOVFESTET'
    | 'UTDANNINGSPERMISJON_LOVFESTET'
    | 'VELFERDSPERMISJON'
    | 'ANNEN_PERMISJON_IKKE_LOVFESTET'
    | 'ANNEN_PERMISJON_LOVFESTET'
    | 'PERMISJON_MED_FORELDREPENGER'
    | 'PERMITTERING'
    | 'PERMISJON_VED_MILITÆRTJENESTE';
  erGyldig?: boolean;
};

export type VirksomhetDto = {
  navn: string;
  virksomhetRegistrertINorge: boolean | null;
  organisasjonsnummer: string | null;
  landJobberFra: string | null;
  typeVirksomhet: NaringsvirksomhetTypeDto;
  varigEndretEllerStartetSisteFireAr: boolean | null;
  harVarigEndring: boolean | null;
  erNyoppstartet: boolean | null;
  varigEndringGjeldendeFom: string | null;
  inntekt: number | null;
  beskrivelseAvEndring: string | null;
  harRegnskapsforer: boolean | null;
  navnRegnskapsforer: string | null;
  tlfRegnskapsforer: string | null;
  familieEllerVennerTilknyttetNaringen: boolean | null;
  erNyIArbeidslivet: boolean | null;
  oppstartsdato: string | null;
  fom: string | null;
  tom: string | null;
};

export type VurderFaresignalerDto = {
  faresignalVurdering:
    | 'INNVIRKNING'
    | 'INNVILGET_REDUSERT'
    | 'INNVILGET_UENDRET'
    | 'AVSLAG_FARESIGNAL'
    | 'AVSLAG_ANNET'
    | 'INGEN_INNVIRKNING'
    | '-';
  begrunnelse: string | null;
};

export type VurderFeilutbetalingDto = {
  videreBehandling: '-' | 'TILBAKEKR_OPPRETT' | 'TILBAKEKR_IGNORER' | 'TILBAKEKR_INNTREKK' | 'TILBAKEKR_OPPDATER';
  varseltekst: string | null;
  begrunnelse: string | null;
};

export type VurderForutgåendeMedlemskapDto = {
  avslagskode:
    | '1001'
    | '1002'
    | '1003'
    | '1004'
    | '1005'
    | '1006'
    | '1007'
    | '1008'
    | '1009'
    | '1010'
    | '1011'
    | '1012'
    | '1013'
    | '1014'
    | '1015'
    | '1016'
    | '1017'
    | '1018'
    | '1019'
    | '1020'
    | '1021'
    | '1023'
    | '1024'
    | '1025'
    | '1026'
    | '1027'
    | '1028'
    | '1029'
    | '1031'
    | '1032'
    | '1033'
    | '1034'
    | '1035'
    | '1041'
    | '1051'
    | '1052'
    | '1060'
    | '1061'
    | '1062'
    | '1063'
    | '1064'
    | '1065'
    | '1066'
    | '1099'
    | '-';
  medlemFom: string | null;
  begrunnelse: string | null;
};

export type VurderInnsynDokumentDto = {
  fikkInnsyn: boolean | null;
  journalpostId: string | null;
  dokumentId: string | null;
};

export type VurderInnsynDto = {
  begrunnelse: string | null;
  innsynResultatType: 'INNV' | 'DELV' | 'AVVIST' | '-';
  mottattDato: string;
  innsynDokumenter: Array<VurderInnsynDokumentDto>;
  sattPaVent: boolean | null;
  fristDato: string | null;
};

export type VurderMedlemskapDto = {
  avslagskode:
    | '1001'
    | '1002'
    | '1003'
    | '1004'
    | '1005'
    | '1006'
    | '1007'
    | '1008'
    | '1009'
    | '1010'
    | '1011'
    | '1012'
    | '1013'
    | '1014'
    | '1015'
    | '1016'
    | '1017'
    | '1018'
    | '1019'
    | '1020'
    | '1021'
    | '1023'
    | '1024'
    | '1025'
    | '1026'
    | '1027'
    | '1028'
    | '1029'
    | '1031'
    | '1032'
    | '1033'
    | '1034'
    | '1035'
    | '1041'
    | '1051'
    | '1052'
    | '1060'
    | '1061'
    | '1062'
    | '1063'
    | '1064'
    | '1065'
    | '1066'
    | '1099'
    | '-';
  opphørFom: string | null;
  begrunnelse: string | null;
};

export type VurderSøknadsfristDto = {
  ansesMottattDato: string | null;
  harGyldigGrunn: boolean | null;
  begrunnelse: string | null;
};

export type VurderUttakDokumentasjonDto = {
  vurderingBehov: Array<DokumentasjonVurderingBehovDto>;
  begrunnelse: string | null;
};

export type VurdereAnnenYteleseFørVedtakDto = {
  begrunnelse: string | null;
};

export type VurdereDokumentFørVedtakDto = {
  begrunnelse: string | null;
};

export type VurdereInntektsmeldingFørVedtakDto = {
  begrunnelse: string | null;
};

export type AvklarDekningsgradOverstyringDto = {
  dekningsgrad: number | null;
  begrunnelse: string | null;
};

export type OverstyrOmsorgOgRettDto = {
  rettighetstype:
    | 'ALENEOMSORG'
    | 'BEGGE_RETT'
    | 'BEGGE_RETT_EØS'
    | 'BARE_MOR_RETT'
    | 'BARE_FAR_RETT'
    | 'BARE_FAR_RETT_MOR_UFØR';
  begrunnelse: string | null;
};

export type OverstyringAdopsjonsvilkåretDto = {
  begrunnelse: string | null;
  avslagskode: string | null;
  erVilkarOk: boolean | null;
};

export type OverstyringAksjonspunktDto = (
  | ({
      '@type': '6016';
    } & AvklarDekningsgradOverstyringDto)
  | ({
      '@type': '6018';
    } & OverstyrOmsorgOgRettDto)
  | ({
      '@type': '6008';
    } & OverstyringUttakDto)
  | ({
      '@type': '6103';
    } & OverstyringEøsUttakDto)
  | ({
      '@type': '6065';
    } & OverstyringFaktaUttakDto)
  | ({
      '@type': '6017';
    } & OverstyringForutgåendeMedlemskapsvilkårDto)
  | ({
      '@type': '6003';
    } & OverstyringFødselsvilkåretDto)
  | ({
      '@type': '6009';
    } & OverstyringFødselvilkåretFarMedmorDto)
  | ({
      '@type': '6005';
    } & OverstyringMedlemskapsvilkåretDto)
  | ({
      '@type': '6011';
    } & OverstyringOpptjeningsvilkåretDto)
  | ({
      '@type': '6002';
    } & OverstyringSokersOpplysingspliktDto)
  | ({
      '@type': '6006';
    } & OverstyringSøknadsfristvilkåretDto)
  | ({
      '@type': '6010';
    } & OverstyringAdopsjonsvilkåretDto)
  | ({
      '@type': '6010';
    } & OverstyringAdopsjonsvilkåretDto)
  | ({
      '@type': '6045';
    } & OverstyringAvklarStartdatoForPeriodenDto)
) & {
  begrunnelse?: string;
};

export type OverstyringAvklarStartdatoForPeriodenDto = {
  begrunnelse: string | null;
  startdatoFraSoknad: string | null;
  opprinneligDato: string | null;
};

export type OverstyringEøsUttakDto = {
  perioder: Array<EøsUttakPeriodeDto>;
  begrunnelse: string | null;
};

export type OverstyringFaktaUttakDto = {
  perioder: Array<FaktaUttakPeriodeDto>;
  begrunnelse: string | null;
};

export type OverstyringForutgåendeMedlemskapsvilkårDto = {
  begrunnelse: string | null;
  avslagskode: string | null;
  erVilkarOk: boolean | null;
  medlemFom: string | null;
};

export type OverstyringFødselsvilkåretDto = {
  begrunnelse: string | null;
  avslagskode: string | null;
  erVilkarOk: boolean | null;
};

export type OverstyringFødselvilkåretFarMedmorDto = {
  begrunnelse: string | null;
  avslagskode: string | null;
  erVilkarOk: boolean | null;
};

export type OverstyringMedlemskapsvilkåretDto = {
  begrunnelse: string | null;
  avslagskode: string | null;
  erVilkarOk: boolean | null;
  opphørFom: string | null;
};

export type OverstyringOpptjeningsvilkåretDto = {
  begrunnelse: string | null;
  avslagskode: string | null;
  erVilkarOk: boolean | null;
};

export type OverstyringSokersOpplysingspliktDto = {
  begrunnelse: string | null;
  erVilkarOk: boolean | null;
};

export type OverstyringSøknadsfristvilkåretDto = {
  begrunnelse: string | null;
  erVilkarOk: boolean | null;
};

export type OverstyringUttakDto = {
  begrunnelse: string | null;
  perioder: Array<UttakResultatPeriodeLagreDto>;
};

export type OverstyrteAksjonspunkterDto = {
  behandlingUuid: string;
  behandlingVersjon: number;
  overstyrteAksjonspunktDtoer?: Array<OverstyringAksjonspunktDto>;
};

export type AnkeVurderingResultatDto = {
  ankeVurdering:
    | 'ANKE_STADFESTE_YTELSESVEDTAK'
    | 'ANKE_HJEMSENDE_UTEN_OPPHEV'
    | 'ANKE_OPPHEVE_OG_HJEMSENDE'
    | 'ANKE_OMGJOER'
    | 'ANKE_AVVIS'
    | '-';
  begrunnelse: string | null;
  fritekstTilBrev: string | null;
  ankeOmgjoerArsak: 'NYE_OPPLYSNINGER' | 'ULIK_REGELVERKSTOLKNING' | 'ULIK_VURDERING' | 'PROSESSUELL_FEIL' | '-';
  ankeVurderingOmgjoer: 'ANKE_TIL_GUNST' | 'ANKE_DELVIS_OMGJOERING_TIL_GUNST' | 'ANKE_TIL_UGUNST' | '-';
  erAnkerIkkePart: boolean | null;
  erFristIkkeOverholdt: boolean | null;
  erIkkeKonkret: boolean | null;
  erIkkeSignert: boolean | null;
  erSubsidiartRealitetsbehandles: boolean | null;
  erMerknaderMottatt: boolean | null;
  merknadKommentar: string | null;
  påAnketKlageBehandlingUuid: string | null;
  trygderettVurdering:
    | 'ANKE_STADFESTE_YTELSESVEDTAK'
    | 'ANKE_HJEMSENDE_UTEN_OPPHEV'
    | 'ANKE_OPPHEVE_OG_HJEMSENDE'
    | 'ANKE_OMGJOER'
    | 'ANKE_AVVIS'
    | '-';
  trygderettOmgjoerArsak: 'NYE_OPPLYSNINGER' | 'ULIK_REGELVERKSTOLKNING' | 'ULIK_VURDERING' | 'PROSESSUELL_FEIL' | '-';
  trygderettVurderingOmgjoer: 'ANKE_TIL_GUNST' | 'ANKE_DELVIS_OMGJOERING_TIL_GUNST' | 'ANKE_TIL_UGUNST' | '-';
  sendtTilTrygderettenDato: string | null;
};

export type AnkebehandlingDto = {
  ankeVurderingResultat: AnkeVurderingResultatDto;
  underBehandlingKabal: boolean | null;
  underBehandlingKabalTrygderett: boolean | null;
  behandletAvKabal: boolean | null;
};

export type Beløp = {
  verdi?: number;
  indexKey?: string;
};

export type DatoIntervallEntitet = {
  fomDato?: string;
  tomDato?: string;
};

export type InntektsmeldingDto = {
  arbeidsgiverReferanse?: string;
  arbeidsgiver?: string;
  arbeidsgiverOrgnr?: string;
  arbeidsgiverStartdato?: string;
  innsendingstidspunkt?: string;
  utsettelsePerioder?: Array<UtsettelsePeriodeDto>;
  graderingPerioder?: Array<GraderingPeriodeDto>;
  getRefusjonBeløpPerMnd?: Beløp;
};

export type NaturalYtelse = {
  periode?: DatoIntervallEntitet;
  beloepPerMnd?: Beløp;
  type?:
    | 'ELEKTRISK_KOMMUNIKASJON'
    | 'AKSJER_UNDERKURS'
    | 'LOSJI'
    | 'KOST_DOEGN'
    | 'BESOEKSREISER_HJEM'
    | 'KOSTBESPARELSE_HJEM'
    | 'RENTEFORDEL_LAAN'
    | 'BIL'
    | 'KOST_DAGER'
    | 'BOLIG'
    | 'FORSIKRINGER'
    | 'FRI_TRANSPORT'
    | 'OPSJONER'
    | 'TILSKUDD_BARNEHAGE'
    | 'ANNET'
    | 'BEDRIFTSBARNEHAGE'
    | 'YRKESBIL_KILOMETER'
    | 'YRKESBIL_LISTEPRIS'
    | 'UTENLANDSK_PENSJONSORDNING'
    | '-';
  indexKey?: string;
};

export type Refusjon = {
  refusjonsbeløpMnd?: number;
  fomDato?: string;
};

export type ArbeidOgInntektsmeldingDto = {
  inntektsmeldinger?: Array<InntektsmeldingDto>;
  arbeidsforhold?: Array<ArbeidsforholdDto>;
  inntekter?: Array<InntektDto>;
  skjæringstidspunkt?: string;
};

export type InntektDto = {
  arbeidsgiverIdent?: string;
  inntekter?: Array<InntektspostDto>;
};

export type InntektspostDto = {
  beløp?: number;
  fom?: string;
  tom?: string;
  type?: '-' | 'LØNN' | 'YTELSE' | 'VANLIG' | 'SELVSTENDIG_NÆRINGSDRIVENDE' | 'NÆRING_FISKE_FANGST_FAMBARNEHAGE';
};

export type PermisjonOgMangelDto = {
  permisjonFom?: string;
  permisjonTom?: string;
  type?:
    | '-'
    | 'PERMISJON'
    | 'UTDANNINGSPERMISJON'
    | 'UTDANNINGSPERMISJON_IKKE_LOVFESTET'
    | 'UTDANNINGSPERMISJON_LOVFESTET'
    | 'VELFERDSPERMISJON'
    | 'ANNEN_PERMISJON_IKKE_LOVFESTET'
    | 'ANNEN_PERMISJON_LOVFESTET'
    | 'PERMISJON_MED_FORELDREPENGER'
    | 'PERMITTERING'
    | 'PERMISJON_VED_MILITÆRTJENESTE';
  årsak?:
    | 'PERMISJON'
    | 'MANGLENDE_INNTEKTSMELDING'
    | 'INNTEKTSMELDING_UTEN_ARBEIDSFORHOLD'
    | 'ENDRING_I_ARBEIDSFORHOLDS_ID'
    | 'PERMISJON_UTEN_SLUTTDATO';
  permisjonStatus?: '-' | 'BRUK_PERMISJON' | 'IKKE_BRUK_PERMISJON' | 'UGYLDIGE_PERIODER';
};

export type ManueltArbeidsforholdDto = {
  behandlingUuid: string;
  begrunnelse?: string;
  arbeidsgiverIdent: string;
  internArbeidsforholdRef?: string;
  arbeidsgiverNavn?: string;
  fom: string;
  tom?: string;
  stillingsprosent: number;
  vurdering:
    | 'KONTAKT_ARBEIDSGIVER_VED_MANGLENDE_INNTEKTSMELDING'
    | 'FORTSETT_UTEN_INNTEKTSMELDING'
    | 'MELDING_TIL_ARBEIDSGIVER_NAV_NO'
    | 'KONTAKT_ARBEIDSGIVER_VED_MANGLENDE_ARBEIDSFORHOLD'
    | 'IKKE_OPPRETT_BASERT_PÅ_INNTEKTSMELDING'
    | 'OPPRETT_BASERT_PÅ_INNTEKTSMELDING'
    | 'MANUELT_OPPRETTET_AV_SAKSBEHANDLER'
    | 'FJERN_FRA_BEHANDLINGEN'
    | 'SLÅTT_SAMMEN_MED_ANNET'
    | 'BRUK_MED_OVERSTYRT_PERIODE'
    | 'INNTEKT_IKKE_MED_I_BG'
    | 'BRUK'
    | 'NYTT_ARBEIDSFORHOLD'
    | '-';
  behandlingVersjon: number;
};

export type ManglendeOpplysningerVurderingDto = {
  behandlingUuid: string;
  vurdering?:
    | 'KONTAKT_ARBEIDSGIVER_VED_MANGLENDE_INNTEKTSMELDING'
    | 'FORTSETT_UTEN_INNTEKTSMELDING'
    | 'MELDING_TIL_ARBEIDSGIVER_NAV_NO'
    | 'KONTAKT_ARBEIDSGIVER_VED_MANGLENDE_ARBEIDSFORHOLD'
    | 'IKKE_OPPRETT_BASERT_PÅ_INNTEKTSMELDING'
    | 'OPPRETT_BASERT_PÅ_INNTEKTSMELDING'
    | 'MANUELT_OPPRETTET_AV_SAKSBEHANDLER'
    | 'FJERN_FRA_BEHANDLINGEN'
    | 'SLÅTT_SAMMEN_MED_ANNET'
    | 'BRUK_MED_OVERSTYRT_PERIODE'
    | 'INNTEKT_IKKE_MED_I_BG'
    | 'BRUK'
    | 'NYTT_ARBEIDSFORHOLD'
    | '-';
  begrunnelse?: string;
  arbeidsgiverIdent: string;
  internArbeidsforholdRef?: string;
  behandlingVersjon: number;
};

export type BehandlingIdVersjonDto = {
  behandlingUuid: string;
  behandlingVersjon: number;
};

export type GraderingPeriodeDto = {
  fom?: string;
  tom?: string;
  arbeidsprosent?: number;
};

export type InntektsmeldingerDto = {
  inntektsmeldinger?: Array<InntektsmeldingDto>;
};

export type UtsettelsePeriodeDto = {
  fom?: string;
  tom?: string;
  utsettelseArsak?:
    | 'ARBEID'
    | 'LOVBESTEMT_FERIE'
    | 'SYKDOM'
    | 'INSTITUSJONSOPPHOLD_SØKER'
    | 'INSTITUSJONSOPPHOLD_BARNET'
    | 'HV_OVELSE'
    | 'NAV_TILTAK'
    | 'FRI'
    | '-';
};

export type ArbeidsgiverOpplysningerDto = {
  referanse?: string;
  identifikator?: string;
  navn?: string;
  fødselsdato?: string;
  erPrivatPerson?: boolean;
};

export type ArbeidsgiverOversiktDto = {
  arbeidsgivere?: {
    [key: string]: ArbeidsgiverOpplysningerDto;
  };
};

export type IayYtelseDto = {
  relatertTilgrensendeYtelserForSoker?: Array<RelaterteYtelserDto>;
  relatertTilgrensendeYtelserForAnnenForelder?: Array<RelaterteYtelserDto>;
  innvilgetRelatertTilgrensendeYtelserForAnnenForelder?: Array<RelaterteYtelserDto>;
};

export type RelaterteYtelserDto = {
  relatertYtelseNavn?: string;
  tilgrensendeYtelserListe?: Array<TilgrensendeYtelserDto>;
};

export type TilgrensendeYtelserDto = {
  periodeFraDato?: string;
  periodeTilDato?: string;
  statusNavn?: string;
  saksNummer?: string;
};

export type ATogFliSammeOrganisasjonDto = {
  andelsnr: number;
  arbeidsforhold?: BeregningsgrunnlagArbeidsforholdDto;
  inntektskategori:
    | 'ARBEIDSTAKER'
    | 'FRILANSER'
    | 'SELVSTENDIG_NÆRINGSDRIVENDE'
    | 'DAGPENGER'
    | 'ARBEIDSAVKLARINGSPENGER'
    | 'SJØMANN'
    | 'DAGMAMMA'
    | 'JORDBRUKER'
    | 'FISKER'
    | 'ARBEIDSTAKER_UTEN_FERIEPENGER'
    | '-';
  aktivitetStatus:
    | 'MIDL_INAKTIV'
    | 'AAP'
    | 'AT'
    | 'DP'
    | 'SP_AV_DP'
    | 'PSB_AV_DP'
    | 'FL'
    | 'MS'
    | 'SN'
    | 'AT_FL'
    | 'AT_SN'
    | 'FL_SN'
    | 'AT_FL_SN'
    | 'BA'
    | 'KUN_YTELSE'
    | 'TY'
    | 'VENTELØNN_VARTPENGER'
    | '-';
  kilde:
    | 'SAKSBEHANDLER_KOFAKBER'
    | 'PROSESS_BESTEBEREGNING'
    | 'SAKSBEHANDLER_FORDELING'
    | 'PROSESS_PERIODISERING'
    | 'PROSESS_OMFORDELING'
    | 'PROSESS_START'
    | 'PROSESS_PERIODISERING_TILKOMMET_INNTEKT';
  lagtTilAvSaksbehandler?: boolean;
  fastsattAvSaksbehandler?: boolean;
  andelIArbeid: Array<number>;
  inntektPrMnd?: number;
};

export type AktivitetTomDatoMappingDto = {
  tom: string;
  aktiviteter: Array<BeregningAktivitetDto>;
};

export type AndelForFaktaOmBeregningDto = {
  belopReadOnly?: number;
  fastsattBelop?: number;
  inntektskategori?:
    | 'ARBEIDSTAKER'
    | 'FRILANSER'
    | 'SELVSTENDIG_NÆRINGSDRIVENDE'
    | 'DAGPENGER'
    | 'ARBEIDSAVKLARINGSPENGER'
    | 'SJØMANN'
    | 'DAGMAMMA'
    | 'JORDBRUKER'
    | 'FISKER'
    | 'ARBEIDSTAKER_UTEN_FERIEPENGER'
    | '-';
  aktivitetStatus?:
    | 'MIDL_INAKTIV'
    | 'AAP'
    | 'AT'
    | 'DP'
    | 'SP_AV_DP'
    | 'PSB_AV_DP'
    | 'FL'
    | 'MS'
    | 'SN'
    | 'AT_FL'
    | 'AT_SN'
    | 'FL_SN'
    | 'AT_FL_SN'
    | 'BA'
    | 'KUN_YTELSE'
    | 'TY'
    | 'VENTELØNN_VARTPENGER'
    | '-';
  refusjonskrav?: number;
  arbeidsforhold?: BeregningsgrunnlagArbeidsforholdDto;
  andelsnr?: number;
  skalKunneEndreAktivitet?: boolean;
  lagtTilAvSaksbehandler?: boolean;
};

export type AndelMedBeløpDto = {
  andelsnr: number;
  arbeidsforhold?: BeregningsgrunnlagArbeidsforholdDto;
  inntektskategori:
    | 'ARBEIDSTAKER'
    | 'FRILANSER'
    | 'SELVSTENDIG_NÆRINGSDRIVENDE'
    | 'DAGPENGER'
    | 'ARBEIDSAVKLARINGSPENGER'
    | 'SJØMANN'
    | 'DAGMAMMA'
    | 'JORDBRUKER'
    | 'FISKER'
    | 'ARBEIDSTAKER_UTEN_FERIEPENGER'
    | '-';
  aktivitetStatus:
    | 'MIDL_INAKTIV'
    | 'AAP'
    | 'AT'
    | 'DP'
    | 'SP_AV_DP'
    | 'PSB_AV_DP'
    | 'FL'
    | 'MS'
    | 'SN'
    | 'AT_FL'
    | 'AT_SN'
    | 'FL_SN'
    | 'AT_FL_SN'
    | 'BA'
    | 'KUN_YTELSE'
    | 'TY'
    | 'VENTELØNN_VARTPENGER'
    | '-';
  kilde:
    | 'SAKSBEHANDLER_KOFAKBER'
    | 'PROSESS_BESTEBEREGNING'
    | 'SAKSBEHANDLER_FORDELING'
    | 'PROSESS_PERIODISERING'
    | 'PROSESS_OMFORDELING'
    | 'PROSESS_START'
    | 'PROSESS_PERIODISERING_TILKOMMET_INNTEKT';
  lagtTilAvSaksbehandler?: boolean;
  fastsattAvSaksbehandler?: boolean;
  andelIArbeid: Array<number>;
  fastsattBelopPrMnd?: number;
};

export type ArbeidstakerUtenInntektsmeldingAndelDto = {
  andelsnr: number;
  arbeidsforhold?: BeregningsgrunnlagArbeidsforholdDto;
  inntektskategori:
    | 'ARBEIDSTAKER'
    | 'FRILANSER'
    | 'SELVSTENDIG_NÆRINGSDRIVENDE'
    | 'DAGPENGER'
    | 'ARBEIDSAVKLARINGSPENGER'
    | 'SJØMANN'
    | 'DAGMAMMA'
    | 'JORDBRUKER'
    | 'FISKER'
    | 'ARBEIDSTAKER_UTEN_FERIEPENGER'
    | '-';
  aktivitetStatus:
    | 'MIDL_INAKTIV'
    | 'AAP'
    | 'AT'
    | 'DP'
    | 'SP_AV_DP'
    | 'PSB_AV_DP'
    | 'FL'
    | 'MS'
    | 'SN'
    | 'AT_FL'
    | 'AT_SN'
    | 'FL_SN'
    | 'AT_FL_SN'
    | 'BA'
    | 'KUN_YTELSE'
    | 'TY'
    | 'VENTELØNN_VARTPENGER'
    | '-';
  kilde:
    | 'SAKSBEHANDLER_KOFAKBER'
    | 'PROSESS_BESTEBEREGNING'
    | 'SAKSBEHANDLER_FORDELING'
    | 'PROSESS_PERIODISERING'
    | 'PROSESS_OMFORDELING'
    | 'PROSESS_START'
    | 'PROSESS_PERIODISERING_TILKOMMET_INNTEKT';
  lagtTilAvSaksbehandler?: boolean;
  fastsattAvSaksbehandler?: boolean;
  andelIArbeid: Array<number>;
  mottarYtelse?: boolean;
  inntektPrMnd?: number;
};

export type AvklarAktiviteterDto = {
  aktiviteterTomDatoMapping?: Array<AktivitetTomDatoMappingDto>;
  skjæringstidspunkt: string;
};

export type AvklaringsbehovDto = {
  definisjon:
    | 'FASTSETT_BG_AT_FL'
    | 'VURDER_VARIG_ENDRT_NYOPPSTR_NAERNG_SN'
    | 'VURDER_VARIG_ENDRT_ARB_SITSJN_MDL_INAKTV'
    | 'FORDEL_BG'
    | 'FASTSETT_BG_TB_ARB'
    | 'VURDER_NYTT_INNTKTSFRHLD'
    | 'VURDER_REPRSNTR_STORTNGT'
    | 'FASTSETT_BG_SN_NY_I_ARB_LIVT'
    | 'AVKLAR_AKTIVITETER'
    | 'VURDER_FAKTA_ATFL_SN'
    | 'VURDER_REFUSJONSKRAV'
    | 'OVST_BEREGNINGSAKTIVITETER'
    | 'OVST_INNTEKT'
    | 'AUTO_VENT_PAA_INNTKT_RAP_FRST'
    | 'AUTO_VENT_PAA_SISTE_AAP_DP_MELDKRT'
    | 'AUTO_VENT_FRISINN'
    | 'INGEN_AKTIVITETER';
  status: 'OPPR' | 'UTFO' | 'AVBR';
  kanLoses: boolean;
  erTrukket: boolean;
  begrunnelse?: string;
  vurdertAv?: string;
  vurdertTidspunkt?: string;
};

export type AvslagsårsakPrPeriodeDto = {
  fom: string;
  tom: string;
  avslagsårsak:
    | 'FOR_LAVT_BG'
    | 'INGEN_FRILANS_I_PERIODE_UTEN_YTELSE'
    | 'AVKORTET_GRUNNET_LØPENDE_INNTEKT'
    | 'AVKORTET_GRUNNET_ANNEN_INNTEKT';
};

export type BeregningAktivitetDto = {
  arbeidsgiverIdent?: string;
  eksternArbeidsforholdId?: string;
  fom: string;
  tom: string;
  arbeidsforholdId?: string;
  arbeidsforholdType:
    | 'AAP'
    | 'ARBEID'
    | 'DAGPENGER'
    | 'FORELDREPENGER'
    | 'FRILANS'
    | 'MILITÆR_ELLER_SIVILTJENESTE'
    | 'NÆRING'
    | 'OMSORGSPENGER'
    | 'OPPLÆRINGSPENGER'
    | 'PLEIEPENGER'
    | 'FRISINN'
    | 'ETTERLØNN_SLUTTPAKKE'
    | 'SVANGERSKAPSPENGER'
    | 'SYKEPENGER'
    | 'SYKEPENGER_AV_DAGPENGER'
    | 'PLEIEPENGER_AV_DAGPENGER'
    | 'VENTELØNN_VARTPENGER'
    | 'VIDERE_ETTERUTDANNING'
    | 'UTENLANDSK_ARBEIDSFORHOLD'
    | 'UTDANNINGSPERMISJON'
    | '-';
  skalBrukes?: boolean;
};

export type BeregningsgrunnlagArbeidsforholdDto = {
  arbeidsgiverIdent?: string;
  startdato?: string;
  opphoersdato?: string;
  arbeidsforholdId?: string;
  eksternArbeidsforholdId?: string;
  arbeidsforholdType?:
    | 'AAP'
    | 'ARBEID'
    | 'DAGPENGER'
    | 'FORELDREPENGER'
    | 'FRILANS'
    | 'MILITÆR_ELLER_SIVILTJENESTE'
    | 'NÆRING'
    | 'OMSORGSPENGER'
    | 'OPPLÆRINGSPENGER'
    | 'PLEIEPENGER'
    | 'FRISINN'
    | 'ETTERLØNN_SLUTTPAKKE'
    | 'SVANGERSKAPSPENGER'
    | 'SYKEPENGER'
    | 'SYKEPENGER_AV_DAGPENGER'
    | 'PLEIEPENGER_AV_DAGPENGER'
    | 'VENTELØNN_VARTPENGER'
    | 'VIDERE_ETTERUTDANNING'
    | 'UTENLANDSK_ARBEIDSFORHOLD'
    | 'UTDANNINGSPERMISJON'
    | '-';
  refusjonPrAar?: number;
  belopFraInntektsmeldingPrMnd?: number;
  organisasjonstype?: 'JURIDISK_ENHET' | 'VIRKSOMHET' | 'KUNSTIG' | '-';
  naturalytelseBortfaltPrÅr?: number;
  naturalytelseTilkommetPrÅr?: number;
};

export type BeregningsgrunnlagDto = {
  avklaringsbehov: Array<AvklaringsbehovDto>;
  skjaeringstidspunktBeregning: string;
  skjæringstidspunkt: string;
  aktivitetStatus?: Array<
    | 'MIDL_INAKTIV'
    | 'AAP'
    | 'AT'
    | 'DP'
    | 'SP_AV_DP'
    | 'PSB_AV_DP'
    | 'FL'
    | 'MS'
    | 'SN'
    | 'AT_FL'
    | 'AT_SN'
    | 'FL_SN'
    | 'AT_FL_SN'
    | 'BA'
    | 'KUN_YTELSE'
    | 'TY'
    | 'VENTELØNN_VARTPENGER'
    | '-'
  >;
  beregningsgrunnlagPeriode?: Array<BeregningsgrunnlagPeriodeDto>;
  sammenligningsgrunnlag: SammenligningsgrunnlagDto;
  sammenligningsgrunnlagPrStatus?: Array<SammenligningsgrunnlagDto>;
  halvG?: number;
  grunnbeløp?: number;
  faktaOmBeregning?: FaktaOmBeregningDto;
  andelerMedGraderingUtenBG?: Array<BeregningsgrunnlagPrStatusOgAndelDto>;
  hjemmel?:
    | 'F_9_9'
    | 'F_9_8_8_28'
    | 'F_9_9_8_28_8_30'
    | 'F_9_9_8_35'
    | 'F_9_9_8_38'
    | 'F_9_9_8_40'
    | 'F_9_9_8_41'
    | 'F_9_9_8_42'
    | 'F_9_9_8_43'
    | 'F_9_9_8_47'
    | 'F_9_9_8_49'
    | 'F_14_7'
    | 'F_14_7_8_30'
    | 'F_14_7_8_28_8_30'
    | 'F_14_7_8_35'
    | 'F_14_7_8_38'
    | 'F_14_7_8_40'
    | 'F_14_7_8_41'
    | 'F_14_7_8_42'
    | 'F_14_7_8_43'
    | 'F_14_7_8_47'
    | 'F_14_7_8_49'
    | 'F_22_13_6'
    | 'COV_1_5'
    | 'KORONALOVEN_3'
    | '-';
  faktaOmFordeling?: FordelingDto;
  dekningsgrad?: number;
  ytelsesspesifiktGrunnlag?: YtelsespesifiktGrunnlagDto;
  refusjonTilVurdering?: RefusjonTilVurderingDto;
  erOverstyrtInntekt: boolean;
  vilkårsperiodeFom?: string;
  inntektsgrunnlag?: InntektsgrunnlagDto;
  forlengelseperioder?: Array<Periode>;
};

export type BeregningsgrunnlagPeriodeDto = {
  beregningsgrunnlagPeriodeFom?: string;
  beregningsgrunnlagPeriodeTom?: string;
  beregnetPrAar?: number;
  bruttoPrAar?: number;
  bruttoInkludertBortfaltNaturalytelsePrAar?: number;
  avkortetPrAar?: number;
  redusertPrAar?: number;
  periodeAarsaker?: Array<
    | 'NATURALYTELSE_BORTFALT'
    | 'ARBEIDSFORHOLD_AVSLUTTET'
    | 'NATURALYTELSE_TILKOMMER'
    | 'ENDRING_I_REFUSJONSKRAV'
    | 'REFUSJON_OPPHØRER'
    | 'GRADERING'
    | 'GRADERING_OPPHØRER'
    | 'ENDRING_I_AKTIVITETER_SØKT_FOR'
    | 'TILKOMMET_INNTEKT'
    | 'TILKOMMET_INNTEKT_MANUELT'
    | 'TILKOMMET_INNTEKT_AVSLUTTET'
    | 'REFUSJON_AVSLÅTT'
    | 'REPRESENTERER_STORTINGET'
    | 'REPRESENTERER_STORTINGET_AVSLUTTET'
    | '-'
  >;
  dagsats?: number;
  beregningsgrunnlagPrStatusOgAndel?: Array<BeregningsgrunnlagPrStatusOgAndelDto>;
};

export type BeregningsgrunnlagPrStatusOgAndelAtDto = {
  aktivitetStatus:
    | 'MIDL_INAKTIV'
    | 'AAP'
    | 'AT'
    | 'DP'
    | 'SP_AV_DP'
    | 'PSB_AV_DP'
    | 'FL'
    | 'MS'
    | 'SN'
    | 'AT_FL'
    | 'AT_SN'
    | 'FL_SN'
    | 'AT_FL_SN'
    | 'BA'
    | 'KUN_YTELSE'
    | 'TY'
    | 'VENTELØNN_VARTPENGER'
    | '-';
  beregningsperiodeFom: string | null;
  beregningsperiodeTom: string | null;
  beregnetPrAar: number | null;
  overstyrtPrAar: number | null;
  bruttoPrAar: number | null;
  avkortetPrAar: number | null;
  redusertPrAar: number | null;
  erTidsbegrensetArbeidsforhold: boolean | null;
  erNyIArbeidslivet: boolean | null;
  lonnsendringIBeregningsperioden: boolean | null;
  andelsnr: number | null;
  besteberegningPrAar: number | null;
  inntektskategori:
    | 'ARBEIDSTAKER'
    | 'FRILANSER'
    | 'SELVSTENDIG_NÆRINGSDRIVENDE'
    | 'DAGPENGER'
    | 'ARBEIDSAVKLARINGSPENGER'
    | 'SJØMANN'
    | 'DAGMAMMA'
    | 'JORDBRUKER'
    | 'FISKER'
    | 'ARBEIDSTAKER_UTEN_FERIEPENGER'
    | '-';
  arbeidsforhold: BeregningsgrunnlagArbeidsforholdDto;
  fastsattAvSaksbehandler: boolean | null;
  lagtTilAvSaksbehandler: boolean | null;
  belopPrMndEtterAOrdningen: number | null;
  belopPrAarEtterAOrdningen: number | null;
  dagsats: number | null;
  originalDagsatsFraTilstøtendeYtelse: number | null;
  fordeltPrAar: number | null;
  erTilkommetAndel: boolean | null;
  skalFastsetteGrunnlag: boolean | null;
  bortfaltNaturalytelse: number | null;
};

export type BeregningsgrunnlagPrStatusOgAndelDto = (
  | ({
      dtoType: 'AT';
    } & BeregningsgrunnlagPrStatusOgAndelAtDto)
  | ({
      dtoType: 'GENERELL';
    } & BeregningsgrunnlagPrStatusOgAndelDtoFelles)
  | ({
      dtoType: 'FL';
    } & BeregningsgrunnlagPrStatusOgAndelFlDto)
  | ({
      dtoType: 'SN';
    } & BeregningsgrunnlagPrStatusOgAndelSnDto)
  | ({
      dtoType: 'KUN_YTELSE';
    } & BeregningsgrunnlagPrStatusOgAndelYtelseDto)
) & {
  aktivitetStatus?:
    | 'MIDL_INAKTIV'
    | 'AAP'
    | 'AT'
    | 'DP'
    | 'SP_AV_DP'
    | 'PSB_AV_DP'
    | 'FL'
    | 'MS'
    | 'SN'
    | 'AT_FL'
    | 'AT_SN'
    | 'FL_SN'
    | 'AT_FL_SN'
    | 'BA'
    | 'KUN_YTELSE'
    | 'TY'
    | 'VENTELØNN_VARTPENGER'
    | '-';
  beregningsperiodeFom?: string;
  beregningsperiodeTom?: string;
  beregnetPrAar?: number;
  overstyrtPrAar?: number;
  bruttoPrAar?: number;
  avkortetPrAar?: number;
  redusertPrAar?: number;
  erTidsbegrensetArbeidsforhold?: boolean;
  erNyIArbeidslivet?: boolean;
  lonnsendringIBeregningsperioden?: boolean;
  andelsnr?: number;
  besteberegningPrAar?: number;
  inntektskategori?:
    | 'ARBEIDSTAKER'
    | 'FRILANSER'
    | 'SELVSTENDIG_NÆRINGSDRIVENDE'
    | 'DAGPENGER'
    | 'ARBEIDSAVKLARINGSPENGER'
    | 'SJØMANN'
    | 'DAGMAMMA'
    | 'JORDBRUKER'
    | 'FISKER'
    | 'ARBEIDSTAKER_UTEN_FERIEPENGER'
    | '-';
  arbeidsforhold?: BeregningsgrunnlagArbeidsforholdDto;
  fastsattAvSaksbehandler?: boolean;
  lagtTilAvSaksbehandler?: boolean;
  belopPrMndEtterAOrdningen?: number;
  belopPrAarEtterAOrdningen?: number;
  dagsats?: number;
  originalDagsatsFraTilstøtendeYtelse?: number;
  fordeltPrAar?: number;
  erTilkommetAndel?: boolean;
  skalFastsetteGrunnlag?: boolean;
  dtoType: string;
};

export type BeregningsgrunnlagPrStatusOgAndelDtoFelles = {
  aktivitetStatus:
    | 'MIDL_INAKTIV'
    | 'AAP'
    | 'AT'
    | 'DP'
    | 'SP_AV_DP'
    | 'PSB_AV_DP'
    | 'FL'
    | 'MS'
    | 'SN'
    | 'AT_FL'
    | 'AT_SN'
    | 'FL_SN'
    | 'AT_FL_SN'
    | 'BA'
    | 'KUN_YTELSE'
    | 'TY'
    | 'VENTELØNN_VARTPENGER'
    | '-';
  beregningsperiodeFom: string | null;
  beregningsperiodeTom: string | null;
  beregnetPrAar: number | null;
  overstyrtPrAar: number | null;
  bruttoPrAar: number | null;
  avkortetPrAar: number | null;
  redusertPrAar: number | null;
  erTidsbegrensetArbeidsforhold: boolean | null;
  erNyIArbeidslivet: boolean | null;
  lonnsendringIBeregningsperioden: boolean | null;
  andelsnr: number | null;
  besteberegningPrAar: number | null;
  inntektskategori:
    | 'ARBEIDSTAKER'
    | 'FRILANSER'
    | 'SELVSTENDIG_NÆRINGSDRIVENDE'
    | 'DAGPENGER'
    | 'ARBEIDSAVKLARINGSPENGER'
    | 'SJØMANN'
    | 'DAGMAMMA'
    | 'JORDBRUKER'
    | 'FISKER'
    | 'ARBEIDSTAKER_UTEN_FERIEPENGER'
    | '-';
  arbeidsforhold: BeregningsgrunnlagArbeidsforholdDto;
  fastsattAvSaksbehandler: boolean | null;
  lagtTilAvSaksbehandler: boolean | null;
  belopPrMndEtterAOrdningen: number | null;
  belopPrAarEtterAOrdningen: number | null;
  dagsats: number | null;
  originalDagsatsFraTilstøtendeYtelse: number | null;
  fordeltPrAar: number | null;
  erTilkommetAndel: boolean | null;
  skalFastsetteGrunnlag: boolean | null;
};

export type BeregningsgrunnlagPrStatusOgAndelFlDto = {
  aktivitetStatus:
    | 'MIDL_INAKTIV'
    | 'AAP'
    | 'AT'
    | 'DP'
    | 'SP_AV_DP'
    | 'PSB_AV_DP'
    | 'FL'
    | 'MS'
    | 'SN'
    | 'AT_FL'
    | 'AT_SN'
    | 'FL_SN'
    | 'AT_FL_SN'
    | 'BA'
    | 'KUN_YTELSE'
    | 'TY'
    | 'VENTELØNN_VARTPENGER'
    | '-';
  beregningsperiodeFom: string | null;
  beregningsperiodeTom: string | null;
  beregnetPrAar: number | null;
  overstyrtPrAar: number | null;
  bruttoPrAar: number | null;
  avkortetPrAar: number | null;
  redusertPrAar: number | null;
  erTidsbegrensetArbeidsforhold: boolean | null;
  erNyIArbeidslivet: boolean | null;
  lonnsendringIBeregningsperioden: boolean | null;
  andelsnr: number | null;
  besteberegningPrAar: number | null;
  inntektskategori:
    | 'ARBEIDSTAKER'
    | 'FRILANSER'
    | 'SELVSTENDIG_NÆRINGSDRIVENDE'
    | 'DAGPENGER'
    | 'ARBEIDSAVKLARINGSPENGER'
    | 'SJØMANN'
    | 'DAGMAMMA'
    | 'JORDBRUKER'
    | 'FISKER'
    | 'ARBEIDSTAKER_UTEN_FERIEPENGER'
    | '-';
  arbeidsforhold: BeregningsgrunnlagArbeidsforholdDto;
  fastsattAvSaksbehandler: boolean | null;
  lagtTilAvSaksbehandler: boolean | null;
  belopPrMndEtterAOrdningen: number | null;
  belopPrAarEtterAOrdningen: number | null;
  dagsats: number | null;
  originalDagsatsFraTilstøtendeYtelse: number | null;
  fordeltPrAar: number | null;
  erTilkommetAndel: boolean | null;
  skalFastsetteGrunnlag: boolean | null;
  erNyoppstartet: boolean | null;
};

export type BeregningsgrunnlagPrStatusOgAndelSnDto = {
  aktivitetStatus:
    | 'MIDL_INAKTIV'
    | 'AAP'
    | 'AT'
    | 'DP'
    | 'SP_AV_DP'
    | 'PSB_AV_DP'
    | 'FL'
    | 'MS'
    | 'SN'
    | 'AT_FL'
    | 'AT_SN'
    | 'FL_SN'
    | 'AT_FL_SN'
    | 'BA'
    | 'KUN_YTELSE'
    | 'TY'
    | 'VENTELØNN_VARTPENGER'
    | '-';
  beregningsperiodeFom: string | null;
  beregningsperiodeTom: string | null;
  beregnetPrAar: number | null;
  overstyrtPrAar: number | null;
  bruttoPrAar: number | null;
  avkortetPrAar: number | null;
  redusertPrAar: number | null;
  erTidsbegrensetArbeidsforhold: boolean | null;
  erNyIArbeidslivet: boolean | null;
  lonnsendringIBeregningsperioden: boolean | null;
  andelsnr: number | null;
  besteberegningPrAar: number | null;
  inntektskategori:
    | 'ARBEIDSTAKER'
    | 'FRILANSER'
    | 'SELVSTENDIG_NÆRINGSDRIVENDE'
    | 'DAGPENGER'
    | 'ARBEIDSAVKLARINGSPENGER'
    | 'SJØMANN'
    | 'DAGMAMMA'
    | 'JORDBRUKER'
    | 'FISKER'
    | 'ARBEIDSTAKER_UTEN_FERIEPENGER'
    | '-';
  arbeidsforhold: BeregningsgrunnlagArbeidsforholdDto;
  fastsattAvSaksbehandler: boolean | null;
  lagtTilAvSaksbehandler: boolean | null;
  belopPrMndEtterAOrdningen: number | null;
  belopPrAarEtterAOrdningen: number | null;
  dagsats: number | null;
  originalDagsatsFraTilstøtendeYtelse: number | null;
  fordeltPrAar: number | null;
  erTilkommetAndel: boolean | null;
  skalFastsetteGrunnlag: boolean | null;
  pgiSnitt: number | null;
  pgiVerdier: Array<PgiDto> | null;
  næringer: Array<EgenNæringDto> | null;
};

export type BeregningsgrunnlagPrStatusOgAndelYtelseDto = {
  aktivitetStatus:
    | 'MIDL_INAKTIV'
    | 'AAP'
    | 'AT'
    | 'DP'
    | 'SP_AV_DP'
    | 'PSB_AV_DP'
    | 'FL'
    | 'MS'
    | 'SN'
    | 'AT_FL'
    | 'AT_SN'
    | 'FL_SN'
    | 'AT_FL_SN'
    | 'BA'
    | 'KUN_YTELSE'
    | 'TY'
    | 'VENTELØNN_VARTPENGER'
    | '-';
  beregningsperiodeFom: string | null;
  beregningsperiodeTom: string | null;
  beregnetPrAar: number | null;
  overstyrtPrAar: number | null;
  bruttoPrAar: number | null;
  avkortetPrAar: number | null;
  redusertPrAar: number | null;
  erTidsbegrensetArbeidsforhold: boolean | null;
  erNyIArbeidslivet: boolean | null;
  lonnsendringIBeregningsperioden: boolean | null;
  andelsnr: number | null;
  besteberegningPrAar: number | null;
  inntektskategori:
    | 'ARBEIDSTAKER'
    | 'FRILANSER'
    | 'SELVSTENDIG_NÆRINGSDRIVENDE'
    | 'DAGPENGER'
    | 'ARBEIDSAVKLARINGSPENGER'
    | 'SJØMANN'
    | 'DAGMAMMA'
    | 'JORDBRUKER'
    | 'FISKER'
    | 'ARBEIDSTAKER_UTEN_FERIEPENGER'
    | '-';
  arbeidsforhold: BeregningsgrunnlagArbeidsforholdDto;
  fastsattAvSaksbehandler: boolean | null;
  lagtTilAvSaksbehandler: boolean | null;
  belopPrMndEtterAOrdningen: number | null;
  belopPrAarEtterAOrdningen: number | null;
  dagsats: number | null;
  originalDagsatsFraTilstøtendeYtelse: number | null;
  fordeltPrAar: number | null;
  erTilkommetAndel: boolean | null;
  skalFastsetteGrunnlag: boolean | null;
  belopFraMeldekortPrMnd: number | null;
  belopFraMeldekortPrAar: number | null;
  oppjustertGrunnlag: number | null;
};

export type BesteberegningInntektDto = {
  arbeidsgiverId: string | null;
  arbeidsgiverIdent: string | null;
  arbeidsforholdId: string | null;
  opptjeningAktivitetType:
    | 'AAP'
    | 'ARBEID'
    | 'DAGPENGER'
    | 'FORELDREPENGER'
    | 'FRILANS'
    | 'MILITÆR_ELLER_SIVILTJENESTE'
    | 'NÆRING'
    | 'OMSORGSPENGER'
    | 'OPPLÆRINGSPENGER'
    | 'PLEIEPENGER'
    | 'FRISINN'
    | 'ETTERLØNN_SLUTTPAKKE'
    | 'SVANGERSKAPSPENGER'
    | 'SYKEPENGER'
    | 'SYKEPENGER_AV_DAGPENGER'
    | 'PLEIEPENGER_AV_DAGPENGER'
    | 'VENTELØNN_VARTPENGER'
    | 'VIDERE_ETTERUTDANNING'
    | 'UTENLANDSK_ARBEIDSFORHOLD'
    | 'UTDANNINGSPERMISJON'
    | '-';
  inntekt: number;
};

export type BesteberegningMånedGrunnlagDto = {
  inntekter: Array<BesteberegningInntektDto> | null;
  fom: string;
  tom: string;
};

export type BesteberegninggrunnlagDto = {
  besteMåneder:
    | [
        BesteberegningMånedGrunnlagDto,
        BesteberegningMånedGrunnlagDto,
        BesteberegningMånedGrunnlagDto,
        BesteberegningMånedGrunnlagDto,
        BesteberegningMånedGrunnlagDto,
        BesteberegningMånedGrunnlagDto,
      ]
    | null;
  avvik: number | null;
};

export type EgenNæringDto = {
  utenlandskvirksomhetsnavn: string | null;
  orgnr: string | null;
  erVarigEndret: boolean | null;
  erNyoppstartet: boolean | null;
  virksomhetType: 'DAGMAMMA' | 'FISKE' | 'FRILANSER' | 'JORDBRUK_SKOGBRUK' | 'ANNEN' | '-';
  begrunnelse: string | null;
  endringsdato: string | null;
  oppstartsdato: string | null;
  opphørsdato: string | null;
  regnskapsførerNavn: string | null;
  regnskapsførerTlf: string | null;
  kanRegnskapsførerKontaktes: boolean | null;
  erNyIArbeidslivet: boolean | null;
  oppgittInntekt: number | null;
};

export type FaktaOmBeregningAndelDto = {
  andelsnr: number;
  arbeidsforhold?: BeregningsgrunnlagArbeidsforholdDto;
  inntektskategori:
    | 'ARBEIDSTAKER'
    | 'FRILANSER'
    | 'SELVSTENDIG_NÆRINGSDRIVENDE'
    | 'DAGPENGER'
    | 'ARBEIDSAVKLARINGSPENGER'
    | 'SJØMANN'
    | 'DAGMAMMA'
    | 'JORDBRUKER'
    | 'FISKER'
    | 'ARBEIDSTAKER_UTEN_FERIEPENGER'
    | '-';
  aktivitetStatus:
    | 'MIDL_INAKTIV'
    | 'AAP'
    | 'AT'
    | 'DP'
    | 'SP_AV_DP'
    | 'PSB_AV_DP'
    | 'FL'
    | 'MS'
    | 'SN'
    | 'AT_FL'
    | 'AT_SN'
    | 'FL_SN'
    | 'AT_FL_SN'
    | 'BA'
    | 'KUN_YTELSE'
    | 'TY'
    | 'VENTELØNN_VARTPENGER'
    | '-';
  kilde:
    | 'SAKSBEHANDLER_KOFAKBER'
    | 'PROSESS_BESTEBEREGNING'
    | 'SAKSBEHANDLER_FORDELING'
    | 'PROSESS_PERIODISERING'
    | 'PROSESS_OMFORDELING'
    | 'PROSESS_START'
    | 'PROSESS_PERIODISERING_TILKOMMET_INNTEKT';
  lagtTilAvSaksbehandler?: boolean;
  fastsattAvSaksbehandler?: boolean;
  andelIArbeid: Array<number>;
};

export type FaktaOmBeregningDto = {
  saksopplysninger?: Saksopplysninger;
  kortvarigeArbeidsforhold?: Array<KortvarigeArbeidsforholdDto>;
  frilansAndel?: FaktaOmBeregningAndelDto;
  kunYtelse?: KunYtelseDto;
  faktaOmBeregningTilfeller?: Array<
    | 'VURDER_TIDSBEGRENSET_ARBEIDSFORHOLD'
    | 'VURDER_SN_NY_I_ARBEIDSLIVET'
    | 'VURDER_NYOPPSTARTET_FL'
    | 'FASTSETT_MAANEDSINNTEKT_FL'
    | 'FASTSETT_BG_ARBEIDSTAKER_UTEN_INNTEKTSMELDING'
    | 'VURDER_LØNNSENDRING'
    | 'FASTSETT_MÅNEDSLØNN_ARBEIDSTAKER_UTEN_INNTEKTSMELDING'
    | 'VURDER_AT_OG_FL_I_SAMME_ORGANISASJON'
    | 'FASTSETT_BESTEBEREGNING_FØDENDE_KVINNE'
    | 'VURDER_ETTERLØNN_SLUTTPAKKE'
    | 'FASTSETT_ETTERLØNN_SLUTTPAKKE'
    | 'VURDER_MOTTAR_YTELSE'
    | 'VURDER_BESTEBEREGNING'
    | 'VURDER_MILITÆR_SIVILTJENESTE'
    | 'VURDER_REFUSJONSKRAV_SOM_HAR_KOMMET_FOR_SENT'
    | 'FASTSETT_BG_KUN_YTELSE'
    | 'TILSTØTENDE_YTELSE'
    | 'FASTSETT_ENDRET_BEREGNINGSGRUNNLAG'
    | '-'
  >;
  arbeidstakerOgFrilanserISammeOrganisasjonListe?: Array<ATogFliSammeOrganisasjonDto>;
  arbeidsforholdMedLønnsendringUtenIM?: Array<FaktaOmBeregningAndelDto>;
  vurderMottarYtelse?: VurderMottarYtelseDto;
  avklarAktiviteter?: AvklarAktiviteterDto;
  vurderBesteberegning?: VurderBesteberegningDto;
  andelerForFaktaOmBeregning?: Array<AndelForFaktaOmBeregningDto>;
  vurderMilitaer?: VurderMilitærDto;
  refusjonskravSomKommerForSentListe?: Array<RefusjonskravSomKommerForSentDto>;
};

export type FordelBeregningsgrunnlagAndelDto = {
  andelsnr: number;
  arbeidsforhold?: BeregningsgrunnlagArbeidsforholdDto;
  inntektskategori:
    | 'ARBEIDSTAKER'
    | 'FRILANSER'
    | 'SELVSTENDIG_NÆRINGSDRIVENDE'
    | 'DAGPENGER'
    | 'ARBEIDSAVKLARINGSPENGER'
    | 'SJØMANN'
    | 'DAGMAMMA'
    | 'JORDBRUKER'
    | 'FISKER'
    | 'ARBEIDSTAKER_UTEN_FERIEPENGER'
    | '-';
  aktivitetStatus:
    | 'MIDL_INAKTIV'
    | 'AAP'
    | 'AT'
    | 'DP'
    | 'SP_AV_DP'
    | 'PSB_AV_DP'
    | 'FL'
    | 'MS'
    | 'SN'
    | 'AT_FL'
    | 'AT_SN'
    | 'FL_SN'
    | 'AT_FL_SN'
    | 'BA'
    | 'KUN_YTELSE'
    | 'TY'
    | 'VENTELØNN_VARTPENGER'
    | '-';
  kilde:
    | 'SAKSBEHANDLER_KOFAKBER'
    | 'PROSESS_BESTEBEREGNING'
    | 'SAKSBEHANDLER_FORDELING'
    | 'PROSESS_PERIODISERING'
    | 'PROSESS_OMFORDELING'
    | 'PROSESS_START'
    | 'PROSESS_PERIODISERING_TILKOMMET_INNTEKT';
  lagtTilAvSaksbehandler?: boolean;
  fastsattAvSaksbehandler?: boolean;
  andelIArbeid: Array<number>;
  fordelingForrigeBehandlingPrAar?: number;
  refusjonskravPrAar?: number;
  fordeltPrAar?: number;
  belopFraInntektsmeldingPrAar?: number;
  refusjonskravFraInntektsmeldingPrAar?: number;
  nyttArbeidsforhold?: boolean;
  arbeidsforholdType:
    | 'AAP'
    | 'ARBEID'
    | 'DAGPENGER'
    | 'FORELDREPENGER'
    | 'FRILANS'
    | 'MILITÆR_ELLER_SIVILTJENESTE'
    | 'NÆRING'
    | 'OMSORGSPENGER'
    | 'OPPLÆRINGSPENGER'
    | 'PLEIEPENGER'
    | 'FRISINN'
    | 'ETTERLØNN_SLUTTPAKKE'
    | 'SVANGERSKAPSPENGER'
    | 'SYKEPENGER'
    | 'SYKEPENGER_AV_DAGPENGER'
    | 'PLEIEPENGER_AV_DAGPENGER'
    | 'VENTELØNN_VARTPENGER'
    | 'VIDERE_ETTERUTDANNING'
    | 'UTENLANDSK_ARBEIDSFORHOLD'
    | 'UTDANNINGSPERMISJON'
    | '-';
};

export type FordelBeregningsgrunnlagArbeidsforholdDto = {
  arbeidsgiverIdent?: string;
  startdato?: string;
  opphoersdato?: string;
  arbeidsforholdId?: string;
  eksternArbeidsforholdId?: string;
  arbeidsforholdType?:
    | 'AAP'
    | 'ARBEID'
    | 'DAGPENGER'
    | 'FORELDREPENGER'
    | 'FRILANS'
    | 'MILITÆR_ELLER_SIVILTJENESTE'
    | 'NÆRING'
    | 'OMSORGSPENGER'
    | 'OPPLÆRINGSPENGER'
    | 'PLEIEPENGER'
    | 'FRISINN'
    | 'ETTERLØNN_SLUTTPAKKE'
    | 'SVANGERSKAPSPENGER'
    | 'SYKEPENGER'
    | 'SYKEPENGER_AV_DAGPENGER'
    | 'PLEIEPENGER_AV_DAGPENGER'
    | 'VENTELØNN_VARTPENGER'
    | 'VIDERE_ETTERUTDANNING'
    | 'UTENLANDSK_ARBEIDSFORHOLD'
    | 'UTDANNINGSPERMISJON'
    | '-';
  refusjonPrAar?: number;
  belopFraInntektsmeldingPrMnd?: number;
  organisasjonstype?: 'JURIDISK_ENHET' | 'VIRKSOMHET' | 'KUNSTIG' | '-';
  naturalytelseBortfaltPrÅr?: number;
  naturalytelseTilkommetPrÅr?: number;
  perioderMedGraderingEllerRefusjon: Array<NyPeriodeDto>;
  permisjon?: PermisjonDto;
};

export type FordelBeregningsgrunnlagDto = {
  fordelBeregningsgrunnlagPerioder: Array<FordelBeregningsgrunnlagPeriodeDto>;
  arbeidsforholdTilFordeling: Array<FordelBeregningsgrunnlagArbeidsforholdDto>;
};

export type FordelBeregningsgrunnlagPeriodeDto = {
  fom: string;
  tom?: string;
  fordelBeregningsgrunnlagAndeler: Array<FordelBeregningsgrunnlagAndelDto>;
  harPeriodeAarsakGraderingEllerRefusjon?: boolean;
  skalRedigereInntekt?: boolean;
  skalPreutfyllesMedBeregningsgrunnlag?: boolean;
  skalKunneEndreRefusjon?: boolean;
};

export type FordelingDto = {
  vurderNyttInntektsforholdDto?: VurderNyttInntektsforholdDto;
  vurderRepresentererStortinget?: VurderRepresentererStortingetDto;
  fordelBeregningsgrunnlag?: FordelBeregningsgrunnlagDto;
};

export type ForeldrepengerGrunnlagDto = {
  besteberegninggrunnlag: BesteberegninggrunnlagDto;
};

export type FrisinnAndelDto = {
  oppgittInntekt: number | null;
  statusSøktFor:
    | 'MIDL_INAKTIV'
    | 'AAP'
    | 'AT'
    | 'DP'
    | 'SP_AV_DP'
    | 'PSB_AV_DP'
    | 'FL'
    | 'MS'
    | 'SN'
    | 'AT_FL'
    | 'AT_SN'
    | 'FL_SN'
    | 'AT_FL_SN'
    | 'BA'
    | 'KUN_YTELSE'
    | 'TY'
    | 'VENTELØNN_VARTPENGER'
    | '-';
};

export type FrisinnGrunnlagDto = {
  opplysningerFL: SøknadsopplysningerDto;
  opplysningerSN: SøknadsopplysningerDto;
  perioderSøktFor: Array<OpplystPeriodeDto>;
  frisinnPerioder: Array<FrisinnPeriodeDto>;
  avslagsårsakPrPeriode: Array<AvslagsårsakPrPeriodeDto>;
};

export type FrisinnPeriodeDto = {
  fom: string;
  tom: string;
  oppgittArbeidsinntekt: number | null;
  frisinnAndeler: Array<FrisinnAndelDto>;
};

export type InntektsforholdDto = {
  aktivitetStatus:
    | 'MIDL_INAKTIV'
    | 'AAP'
    | 'AT'
    | 'DP'
    | 'SP_AV_DP'
    | 'PSB_AV_DP'
    | 'FL'
    | 'MS'
    | 'SN'
    | 'AT_FL'
    | 'AT_SN'
    | 'FL_SN'
    | 'AT_FL_SN'
    | 'BA'
    | 'KUN_YTELSE'
    | 'TY'
    | 'VENTELØNN_VARTPENGER'
    | '-';
  arbeidsgiverId?: string;
  arbeidsforholdId?: string;
  eksternArbeidsforholdId?: string;
  periode: Periode;
  inntektFraInntektsmeldingPrÅr?: number;
  bruttoInntektPrÅr?: number;
  skalRedusereUtbetaling?: boolean;
};

export type InntektsgrunnlagDto = {
  måneder: Array<InntektsgrunnlagMånedDto>;
  pgiGrunnlag: Array<PgiPrÅrDto>;
  sammenligningsgrunnlagInntekter: Array<InntektsgrunnlagMånedDto>;
  beregningsgrunnlagInntekter: Array<InntektsgrunnlagMånedDto>;
};

export type InntektsgrunnlagInntektDto = {
  inntektAktivitetType: 'ARBEIDSTAKERINNTEKT' | 'FRILANSINNTEKT' | 'YTELSEINNTEKT' | '-';
  beløp?: number;
  arbeidsgiverIdent?: string;
};

export type InntektsgrunnlagMånedDto = {
  fom: string;
  tom: string;
  inntekter?: Array<InntektsgrunnlagInntektDto>;
};

export type KortvarigeArbeidsforholdDto = {
  andelsnr: number;
  arbeidsforhold?: BeregningsgrunnlagArbeidsforholdDto;
  inntektskategori:
    | 'ARBEIDSTAKER'
    | 'FRILANSER'
    | 'SELVSTENDIG_NÆRINGSDRIVENDE'
    | 'DAGPENGER'
    | 'ARBEIDSAVKLARINGSPENGER'
    | 'SJØMANN'
    | 'DAGMAMMA'
    | 'JORDBRUKER'
    | 'FISKER'
    | 'ARBEIDSTAKER_UTEN_FERIEPENGER'
    | '-';
  aktivitetStatus:
    | 'MIDL_INAKTIV'
    | 'AAP'
    | 'AT'
    | 'DP'
    | 'SP_AV_DP'
    | 'PSB_AV_DP'
    | 'FL'
    | 'MS'
    | 'SN'
    | 'AT_FL'
    | 'AT_SN'
    | 'FL_SN'
    | 'AT_FL_SN'
    | 'BA'
    | 'KUN_YTELSE'
    | 'TY'
    | 'VENTELØNN_VARTPENGER'
    | '-';
  kilde:
    | 'SAKSBEHANDLER_KOFAKBER'
    | 'PROSESS_BESTEBEREGNING'
    | 'SAKSBEHANDLER_FORDELING'
    | 'PROSESS_PERIODISERING'
    | 'PROSESS_OMFORDELING'
    | 'PROSESS_START'
    | 'PROSESS_PERIODISERING_TILKOMMET_INNTEKT';
  lagtTilAvSaksbehandler?: boolean;
  fastsattAvSaksbehandler?: boolean;
  andelIArbeid: Array<number>;
  erTidsbegrensetArbeidsforhold?: boolean;
};

export type KunYtelseDto = {
  andeler?: Array<AndelMedBeløpDto>;
  fodendeKvinneMedDP?: boolean;
  erBesteberegning?: boolean;
};

export type LønnsendringSaksopplysningDto = {
  sisteLønnsendringsdato: string;
  lønnsendringscenario:
    | 'MANUELT_BEHANDLET'
    | 'DELVIS_MÅNEDSINNTEKT_SISTE_MND'
    | 'FULL_MÅNEDSINNTEKT_EN_MND'
    | 'FULL_MÅNEDSINNTEKT_TO_MND';
  arbeidsforhold: ArbeidsforholdDto;
};

export type NyPeriodeDto = {
  erRefusjon?: boolean;
  erGradering?: boolean;
  erSøktYtelse?: boolean;
  fom?: string;
  tom?: string;
};

export type OmsorgspengeGrunnlagDto = {
  skalAvviksvurdere: boolean | null;
};

export type OpplystPeriodeDto = {
  fom: string;
  tom: string;
  statusSøktFor:
    | 'MIDL_INAKTIV'
    | 'AAP'
    | 'AT'
    | 'DP'
    | 'SP_AV_DP'
    | 'PSB_AV_DP'
    | 'FL'
    | 'MS'
    | 'SN'
    | 'AT_FL'
    | 'AT_SN'
    | 'FL_SN'
    | 'AT_FL_SN'
    | 'BA'
    | 'KUN_YTELSE'
    | 'TY'
    | 'VENTELØNN_VARTPENGER'
    | '-';
};

export type PgiGrunnlagDto = {
  pgiType: 'LØNN' | 'NÆRING' | '-';
  beløp?: number;
};

export type PgiPrÅrDto = {
  år: number;
  inntekter?: Array<PgiGrunnlagDto>;
};

export type Periode = {
  fom: string | null;
  tom: string | null;
};

export type PermisjonDto = {
  permisjonFom: string;
  permisjonTom: string;
};

export type PgiDto = {
  beløp: number | null;
  årstall: number | null;
};

export type RefusjonAndelTilVurderingDto = {
  aktivitetStatus:
    | 'MIDL_INAKTIV'
    | 'AAP'
    | 'AT'
    | 'DP'
    | 'SP_AV_DP'
    | 'PSB_AV_DP'
    | 'FL'
    | 'MS'
    | 'SN'
    | 'AT_FL'
    | 'AT_SN'
    | 'FL_SN'
    | 'AT_FL_SN'
    | 'BA'
    | 'KUN_YTELSE'
    | 'TY'
    | 'VENTELØNN_VARTPENGER'
    | '-';
  tidligereUtbetalinger?: Array<TidligereUtbetalingDto>;
  nyttRefusjonskravFom?: string;
  fastsattNyttRefusjonskravFom?: string;
  tidligsteMuligeRefusjonsdato?: string;
  arbeidsgiver?: Arbeidsgiver;
  internArbeidsforholdRef?: string;
  eksternArbeidsforholdRef?: string;
  skalKunneFastsetteDelvisRefusjon?: boolean;
  fastsattDelvisRefusjonPrMnd?: number;
  maksTillattDelvisRefusjonPrMnd?: number;
};

export type RefusjonTilVurderingDto = {
  andeler: Array<RefusjonAndelTilVurderingDto>;
};

export type RefusjonskravSomKommerForSentDto = {
  arbeidsgiverIdent: string;
  erRefusjonskravGyldig?: boolean;
};

export type Saksopplysninger = {
  arbeidsforholdMedLønnsendring?: Array<ArbeidsforholdDto>;
  lønnsendringSaksopplysning?: Array<LønnsendringSaksopplysningDto>;
  kortvarigeArbeidsforhold?: Array<ArbeidsforholdDto>;
};

export type SammenligningsgrunnlagDto = {
  sammenligningsgrunnlagFom?: string;
  sammenligningsgrunnlagTom?: string;
  rapportertPrAar?: number;
  avvikPromille?: number;
  avvikProsent?: number;
  sammenligningsgrunnlagType?:
    | 'SAMMENLIGNING_AT'
    | 'SAMMENLIGNING_FL'
    | 'SAMMENLIGNING_AT_FL'
    | 'SAMMENLIGNING_SN'
    | 'SAMMENLIGNING_ATFL_SN'
    | 'SAMMENLIGNING_MIDL_INAKTIV';
  differanseBeregnet?: number;
};

export type SvangerskapspengerGrunnlagDto = {
  [key: string]: unknown;
};

export type SøknadsopplysningerDto = {
  oppgittÅrsinntekt: number | null;
  oppgittInntekt: number | null;
  erNyoppstartet: boolean | null;
};

export type TidligereUtbetalingDto = {
  fom: string;
  tom?: string;
  erTildeltRefusjon: boolean;
};

export type VurderBesteberegningDto = {
  skalHaBesteberegning?: boolean;
};

export type VurderInntektsforholdPeriodeDto = {
  fom: string;
  tom: string;
  inntektsforholdListe: Array<InntektsforholdDto>;
};

export type VurderMilitærDto = {
  harMilitaer?: boolean;
};

export type VurderMottarYtelseDto = {
  erFrilans?: boolean;
  frilansMottarYtelse?: boolean;
  frilansInntektPrMnd?: number;
  arbeidstakerAndelerUtenIM?: Array<ArbeidstakerUtenInntektsmeldingAndelDto>;
};

export type VurderNyttInntektsforholdDto = {
  vurderInntektsforholdPerioder: Array<VurderInntektsforholdPeriodeDto>;
  harMottattOmsorgsstønadEllerFosterhjemsgodtgjørelse: boolean;
};

export type VurderRepresentererStortingetDto = {
  stortingsperiodeFom?: string;
  stortingsperiodeTom?: string;
  representererStortinget?: boolean;
};

export type YtelsespesifiktGrunnlagDto = (
  | ({
      ytelsetype: 'OMP';
    } & OmsorgspengeGrunnlagDto)
  | ({
      ytelsetype: 'SVP';
    } & SvangerskapspengerGrunnlagDto)
  | ({
      ytelsetype: 'FP';
    } & ForeldrepengerGrunnlagDto)
  | ({
      ytelsetype: 'FRISINN';
    } & FrisinnGrunnlagDto)
) & {
  ytelsetype: string;
};

export type BeregningsresultatMedUttaksplanDto = {
  perioder?: Array<BeregningsresultatPeriodeDto>;
};

export type BeregningsresultatPeriodeAndelDto = {
  arbeidsgiverReferanse?: string;
  refusjon?: number;
  tilSoker?: number;
  uttak?: UttakDto;
  utbetalingsgrad?: number;
  sisteUtbetalingsdato?: string;
  aktivitetStatus?:
    | 'ARBEIDSAVKLARINGSPENGER'
    | 'ARBEIDSTAKER'
    | 'DAGPENGER'
    | 'FRILANSER'
    | 'MILITÆR_ELLER_SIVIL'
    | 'SELVSTENDIG_NÆRINGSDRIVENDE'
    | 'KOMBINERT_AT_FL'
    | 'KOMBINERT_AT_SN'
    | 'KOMBINERT_FL_SN'
    | 'KOMBINERT_AT_FL_SN'
    | 'BRUKERS_ANDEL'
    | 'KUN_YTELSE'
    | 'TTLSTØTENDE_YTELSE'
    | 'VENTELØNN_VARTPENGER'
    | 'UDEFINERT';
  arbeidsforholdId?: string;
  eksternArbeidsforholdId?: string;
  aktørId?: string;
  arbeidsforholdType?:
    | 'AAP'
    | 'ARBEID'
    | 'DAGPENGER'
    | 'FORELDREPENGER'
    | 'FRILANS'
    | 'FRILOPP'
    | 'MILITÆR_ELLER_SIVILTJENESTE'
    | 'NÆRING'
    | 'OMSORGSPENGER'
    | 'OPPLÆRINGSPENGER'
    | 'PLEIEPENGER'
    | 'FRISINN'
    | 'ETTERLØNN_SLUTTPAKKE'
    | 'SVANGERSKAPSPENGER'
    | 'SYKEPENGER'
    | 'VENTELØNN_VARTPENGER'
    | 'VIDERE_ETTERUTDANNING'
    | 'UTENLANDSK_ARBEIDSFORHOLD'
    | 'UTDANNINGSPERMISJON'
    | '-';
  stillingsprosent?: number;
};

export type BeregningsresultatPeriodeDto = {
  fom?: string;
  tom?: string;
  dagsats?: number;
  andeler?: Array<BeregningsresultatPeriodeAndelDto>;
};

export type UttakDto = {
  stonadskontoType?: string;
  periodeResultatType?: string;
  gradering?: boolean;
};

export type BeregningsresultatEngangsstønadDto = {
  beregnetTilkjentYtelse?: number;
  satsVerdi?: number;
  antallBarn?: number;
};

export type FeriepengegrunnlagAndelDto = {
  aktivitetStatus:
    | 'ARBEIDSAVKLARINGSPENGER'
    | 'ARBEIDSTAKER'
    | 'DAGPENGER'
    | 'FRILANSER'
    | 'MILITÆR_ELLER_SIVIL'
    | 'SELVSTENDIG_NÆRINGSDRIVENDE'
    | 'KOMBINERT_AT_FL'
    | 'KOMBINERT_AT_SN'
    | 'KOMBINERT_FL_SN'
    | 'KOMBINERT_AT_FL_SN'
    | 'BRUKERS_ANDEL'
    | 'KUN_YTELSE'
    | 'TTLSTØTENDE_YTELSE'
    | 'VENTELØNN_VARTPENGER'
    | 'UDEFINERT';
  arbeidsgiverId: string;
  arbeidsforholdId: string;
  opptjeningsår: number;
  årsbeløp: number;
  erBrukerMottaker: boolean;
};

export type FeriepengegrunnlagDto = {
  andeler: Array<FeriepengegrunnlagAndelDto>;
};

export type AntallBarn = {
  kilde?: 'SAKSBEHANDLER' | 'SØKNAD' | 'FOLKEREGISTER';
  antall?: number;
};

export type BarnHendelseData = {
  fødselsdato?: string;
  dødsdato?: string;
};

export type FødselDto = {
  søknad?: Søknad;
  register?: Register;
  gjeldende?: Gjeldende;
};

export type Gjeldende = {
  termin?: Termin;
  utstedtdato?: Utstedtdato;
  antallBarn?: AntallBarn;
  barn?: Array<GjeldendeBarn>;
  fødselDokumetasjonStatus?: 'DOKUMENTERT' | 'IKKE_DOKUMENTERT' | 'IKKE_VURDERT';
};

export type GjeldendeBarn = {
  kilde?: 'SAKSBEHANDLER' | 'SØKNAD' | 'FOLKEREGISTER';
  barn?: BarnHendelseData;
  kanOverstyres?: boolean;
};

export type Register = {
  barn?: Array<BarnHendelseData>;
};

export type Søknad = {
  status: 'MOTTATT' | 'BEHANDLET';
  mottattTidspunkt: string | null;
  tilrettelegginger: Array<Tilrettelegging> | null;
};

export type Termin = {
  kilde?: 'SAKSBEHANDLER' | 'SØKNAD' | 'FOLKEREGISTER';
  termindato?: string;
};

export type Utstedtdato = {
  kilde?: 'SAKSBEHANDLER' | 'SØKNAD' | 'FOLKEREGISTER';
  utstedtdato?: string;
};

export type InnsynDokumentDto = {
  fikkInnsyn: boolean | null;
  journalpostId: string | null;
  dokumentId: string | null;
};

export type InnsynVedtaksdokumentasjonDto = {
  behandlingUuid: string | null;
  tittel: string | null;
  opprettetDato: string | null;
};

export type InnsynsbehandlingDto = {
  innsynMottattDato: string | null;
  innsynResultatType: 'INNV' | 'DELV' | 'AVVIST' | '-';
  vedtaksdokumentasjon: Array<InnsynVedtaksdokumentasjonDto> | null;
  dokumenter: Array<InnsynDokumentDto> | null;
};

export type KlageFormkravResultatDto = {
  paKlagdBehandlingId: number | null;
  paKlagdBehandlingUuid: string | null;
  paklagdBehandlingType: 'BT-002' | 'BT-003' | 'BT-004' | 'BT-008' | 'BT-006' | 'BT-007' | 'BT-009' | '-';
  begrunnelse: string | null;
  erKlagerPart: boolean | null;
  erKlageKonkret: boolean | null;
  erKlagefirstOverholdt: boolean | null;
  erSignert: boolean | null;
  avvistArsaker: Array<
    | 'KLAGET_FOR_SENT'
    | 'KLAGE_UGYLDIG'
    | 'IKKE_PAKLAGD_VEDTAK'
    | 'KLAGER_IKKE_PART'
    | 'IKKE_KONKRET'
    | 'IKKE_SIGNERT'
    | '-'
  > | null;
};

export type KlageVurderingResultatDto = {
  klageVurdertAv: string | null;
  klageVurdering:
    | 'OPPHEVE_YTELSESVEDTAK'
    | 'STADFESTE_YTELSESVEDTAK'
    | 'MEDHOLD_I_KLAGE'
    | 'AVVIS_KLAGE'
    | 'HJEMSENDE_UTEN_Å_OPPHEVE'
    | '-';
  begrunnelse: string | null;
  klageMedholdArsak: 'NYE_OPPLYSNINGER' | 'ULIK_REGELVERKSTOLKNING' | 'ULIK_VURDERING' | 'PROSESSUELL_FEIL' | '-';
  klageVurderingOmgjoer: 'GUNST_MEDHOLD_I_KLAGE' | 'DELVIS_MEDHOLD_I_KLAGE' | 'UGUNST_MEDHOLD_I_KLAGE' | '-';
  klageHjemmel:
    | '14-02'
    | '14-04'
    | '14-05'
    | '14-06'
    | '14-07'
    | '14-09'
    | '14-10'
    | '14-11'
    | '14-12'
    | '14-13'
    | '14-14'
    | '14-15'
    | '14-16'
    | '14-17'
    | '8-2'
    | '21-3'
    | '22-13'
    | '22-15'
    | '883-5'
    | '883-6'
    | '-';
  godkjentAvMedunderskriver: boolean | null;
  fritekstTilBrev: string | null;
};

export type KlagebehandlingDto = {
  klageFormkravResultatNFP: KlageFormkravResultatDto;
  klageVurderingResultatNFP: KlageVurderingResultatDto;
  klageFormkravResultatKA: KlageFormkravResultatDto;
  klageVurderingResultatNK: KlageVurderingResultatDto;
  aktuelleHjemler: Array<
    | '14-02'
    | '14-04'
    | '14-05'
    | '14-06'
    | '14-07'
    | '14-09'
    | '14-10'
    | '14-11'
    | '14-12'
    | '14-13'
    | '14-14'
    | '14-15'
    | '14-16'
    | '14-17'
    | '8-2'
    | '21-3'
    | '22-13'
    | '22-15'
    | '883-5'
    | '883-6'
    | '-'
  > | null;
  underBehandlingKabal: boolean | null;
  behandletAvKabal: boolean | null;
};

export type MottattKlagedokumentDto = {
  mottattDato?: string;
};

export type KlageFormKravAksjonspunktMellomlagringDto = {
  kode?: string;
  behandlingUuid: string;
  erKlagerPart?: boolean;
  erFristOverholdt?: boolean;
  erKonkret?: boolean;
  erSignert?: boolean;
  erTilbakekreving?: boolean;
  klageTilbakekreving?: KlageTilbakekrevingDto;
  begrunnelse?: string;
  fritekstTilBrev?: string;
  paKlagdBehandlingUuid?: string;
};

export type KlageVurderingResultatAksjonspunktMellomlagringDto = {
  kode?: string;
  behandlingUuid: string;
  klageVurdering?:
    | 'OPPHEVE_YTELSESVEDTAK'
    | 'STADFESTE_YTELSESVEDTAK'
    | 'MEDHOLD_I_KLAGE'
    | 'AVVIS_KLAGE'
    | 'HJEMSENDE_UTEN_Å_OPPHEVE'
    | '-';
  begrunnelse?: string;
  fritekstTilBrev?: string;
  klageMedholdArsak?: 'NYE_OPPLYSNINGER' | 'ULIK_REGELVERKSTOLKNING' | 'ULIK_VURDERING' | 'PROSESSUELL_FEIL' | '-';
  klageVurderingOmgjoer?: 'GUNST_MEDHOLD_I_KLAGE' | 'DELVIS_MEDHOLD_I_KLAGE' | 'UGUNST_MEDHOLD_I_KLAGE' | '-';
  klageHjemmel?:
    | '14-02'
    | '14-04'
    | '14-05'
    | '14-06'
    | '14-07'
    | '14-09'
    | '14-10'
    | '14-11'
    | '14-12'
    | '14-13'
    | '14-14'
    | '14-15'
    | '14-16'
    | '14-17'
    | '8-2'
    | '21-3'
    | '22-13'
    | '22-15'
    | '883-5'
    | '883-6'
    | '-';
};

export type OppdragDto = {
  saksnummer?: string;
};

export type OpptjeningIUtlandDokStatusDto = {
  dokStatus?: 'DOKUMENTASJON_ER_INNHENTET' | 'DOKUMENTASJON_VIL_BLI_INNHENTET' | 'DOKUMENTASJON_VIL_IKKE_BLI_INNHENTET';
};

export type FastsattOpptjeningAktivitetDto = {
  fom?: string;
  tom?: string;
  klasse?: 'BEKREFTET_GODKJENT' | 'BEKREFTET_AVVIST' | 'ANTATT_GODKJENT' | 'MELLOMLIGGENDE_PERIODE' | '-';
};

export type FastsattOpptjeningDto = {
  opptjeningFom?: string;
  opptjeningTom?: string;
  opptjeningperiode?: OpptjeningPeriodeDto;
  fastsattOpptjeningAktivitetList?: Array<FastsattOpptjeningAktivitetDto>;
};

export type FerdiglignetNæringDto = {
  år?: string;
  beløp?: number;
};

export type OpptjeningAktivitetDto = {
  aktivitetType?:
    | 'AAP'
    | 'ARBEID'
    | 'DAGPENGER'
    | 'FORELDREPENGER'
    | 'FRILANS'
    | 'FRILOPP'
    | 'MILITÆR_ELLER_SIVILTJENESTE'
    | 'NÆRING'
    | 'OMSORGSPENGER'
    | 'OPPLÆRINGSPENGER'
    | 'PLEIEPENGER'
    | 'FRISINN'
    | 'ETTERLØNN_SLUTTPAKKE'
    | 'SVANGERSKAPSPENGER'
    | 'SYKEPENGER'
    | 'VENTELØNN_VARTPENGER'
    | 'VIDERE_ETTERUTDANNING'
    | 'UTENLANDSK_ARBEIDSFORHOLD'
    | 'UTDANNINGSPERMISJON'
    | '-';
  originalFom?: string;
  originalTom?: string;
  opptjeningFom?: string;
  opptjeningTom?: string;
  arbeidsgiverReferanse?: string;
  arbeidsforholdRef?: string;
  stillingsandel?: number;
  naringRegistreringsdato?: string;
  erManueltOpprettet?: boolean;
  erGodkjent?: boolean;
  erEndret?: boolean;
  begrunnelse?: string;
  erPeriodeEndret?: boolean;
};

export type OpptjeningDto = {
  fastsattOpptjening?: FastsattOpptjeningDto;
  opptjeningAktivitetList?: Array<OpptjeningAktivitetDto>;
  ferdiglignetNæring?: Array<FerdiglignetNæringDto>;
};

export type OpptjeningPeriodeDto = {
  måneder?: number;
  dager?: number;
};

export type PersonopplysningTilbakeDto = {
  aktoerId?: string;
  antallBarn?: number;
};

export type PersonadresseDto = {
  fom?: string;
  tom?: string;
  adresseType?:
    | 'BOSTEDSADRESSE'
    | 'BOSTEDSADRESSE_UTLAND'
    | 'POSTADRESSE'
    | 'POSTADRESSE_UTLAND'
    | 'MIDLERTIDIG_POSTADRESSE_NORGE'
    | 'MIDLERTIDIG_POSTADRESSE_UTLAND'
    | 'UKJENT_ADRESSE';
  adresselinje1?: string;
  adresselinje2?: string;
  adresselinje3?: string;
  postNummer?: string;
  poststed?: string;
  land?: string;
};

export type PersonopplysningBasisDto = {
  fnr?: string;
  aktoerId?: string;
  diskresjonskode?: 'UDEF' | 'SPSF' | 'SPFO';
  navn?: string;
  kjønn?: 'K' | 'M' | '-';
  sivilstand?:
    | 'ENKE'
    | 'GIFT'
    | 'GJPA'
    | 'GLAD'
    | 'NULL'
    | 'REPA'
    | 'SAMB'
    | 'SEPA'
    | 'SEPR'
    | 'SKIL'
    | 'SKPA'
    | 'UGIF';
  dødsdato?: string;
  fødselsdato?: string;
  adresser?: Array<PersonadresseDto>;
};

export type PersonoversiktDto = {
  bruker?: PersonopplysningBasisDto;
  annenPart?: PersonopplysningBasisDto;
  barn?: Array<PersonopplysningBasisDto>;
};

export type Annenpart = {
  adresser?: Array<PersonadresseDto>;
  regioner?: Array<Region>;
  personstatuser?: Array<Personstatus>;
};

export type LegacyManuellBehandling = {
  perioder?: Array<MedlemPeriode>;
};

export type ManuellBehandlingResultat = {
  søkerHarAleneomsorg?: 'JA' | 'NEI' | 'IKKE_RELEVANT';
  annenpartRettighet?: Rettighet;
};

export type MedlemPeriode = {
  vurderingsdato?: string;
  oppholdsrettVurdering?: boolean;
  erEosBorger?: boolean;
  lovligOppholdVurdering?: boolean;
  bosattVurdering?: boolean;
  medlemskapManuellVurderingType?: '-' | 'MEDLEM' | 'UNNTAK' | 'IKKE_RELEVANT' | 'OPPHOR_PGA_ENDRING_I_TPS';
  begrunnelse?: string;
};

export type MedlemskapDto = {
  manuellBehandlingResultat?: ManuellBehandlingResultat;
  legacyManuellBehandling?: LegacyManuellBehandling;
  regioner?: Array<Region>;
  personstatuser?: Array<Personstatus>;
  utenlandsopphold?: Array<Utenlandsopphold>;
  adresser?: Array<PersonadresseDto>;
  oppholdstillatelser?: Array<Oppholdstillatelse>;
  medlemskapsperioder?: Array<MedlemskapPeriode>;
  avvik?: Array<
    | 'BOSATT_UTENLANDSOPPHOLD'
    | 'BOSATT_MANGLENDE_BOSTEDSADRESSE'
    | 'BOSATT_UTENLANDSADRESSE'
    | 'BOSATT_UGYLDIG_PERSONSTATUS'
    | 'TREDJELAND_MANGLENDE_LOVLIG_OPPHOLD'
    | 'EØS_MANGLENDE_ANSETTELSE_MED_INNTEKT'
    | 'MEDL_PERIODER'
  >;
  annenpart?: Annenpart;
};

export type MedlemskapPeriode = {
  fom?: string;
  tom?: string;
  erMedlem?: boolean;
  lovvalgsland?: string;
  studieland?: string;
  medlemskapType?: 'ENDELIG' | 'FORELOPIG' | 'AVKLARES' | '-';
  dekningType?:
    | 'FTL_2_6'
    | 'FTL_2_7_a'
    | 'FTL_2_7_b'
    | 'FTL_2_9_1_a'
    | 'FTL_2_9_1_b'
    | 'FTL_2_9_1_c'
    | 'FTL_2_9_2_a'
    | 'FTL_2_9_2_c'
    | 'FULL'
    | 'IHT_AVTALE'
    | 'OPPHOR'
    | 'UNNTATT'
    | '-';
  beslutningsdato?: string;
};

export type Oppholdstillatelse = {
  fom?: string;
  tom?: string;
  type?: 'MIDLERTIDIG' | 'PERMANENT' | '-';
};

export type Personstatus = {
  fom?: string;
  tom?: string;
  type?: 'ADNR' | 'BOSA' | 'DØD' | 'FOSV' | 'FØDR' | 'UREG' | 'UTPE' | 'UTVA' | '-';
};

export type Region = {
  fom?: string;
  tom?: string;
  type?: 'NORDEN' | 'EOS' | 'ANNET' | '-';
};

export type Utenlandsopphold = {
  fom?: string;
  tom?: string;
  landkode?:
    | '???'
    | 'ABW'
    | 'AFG'
    | 'AGO'
    | 'AIA'
    | 'ALA'
    | 'ALB'
    | 'AND'
    | 'ANT'
    | 'ARE'
    | 'ARG'
    | 'ARM'
    | 'ASM'
    | 'ATG'
    | 'AUS'
    | 'AUT'
    | 'AZE'
    | 'BDI'
    | 'BEL'
    | 'BEN'
    | 'BES'
    | 'BFA'
    | 'BGD'
    | 'BGR'
    | 'BHR'
    | 'BHS'
    | 'BIH'
    | 'BLM'
    | 'BLR'
    | 'BLZ'
    | 'BMU'
    | 'BOL'
    | 'BRA'
    | 'BRB'
    | 'BRN'
    | 'BTN'
    | 'BVT'
    | 'BWA'
    | 'CAF'
    | 'CAN'
    | 'CCK'
    | 'CHE'
    | 'CHL'
    | 'CHN'
    | 'CIV'
    | 'CMR'
    | 'COD'
    | 'COG'
    | 'COK'
    | 'COL'
    | 'COM'
    | 'CPV'
    | 'CRI'
    | 'CSK'
    | 'CUB'
    | 'CUW'
    | 'CXR'
    | 'CYM'
    | 'CYP'
    | 'CZE'
    | 'DDR'
    | 'DEU'
    | 'DJI'
    | 'DMA'
    | 'DNK'
    | 'DOM'
    | 'DZA'
    | 'ECU'
    | 'EGY'
    | 'ERI'
    | 'ESH'
    | 'ESP'
    | 'EST'
    | 'ETH'
    | 'FIN'
    | 'FJI'
    | 'FLK'
    | 'FRA'
    | 'FRO'
    | 'FSM'
    | 'GAB'
    | 'GBR'
    | 'GEO'
    | 'GGY'
    | 'GHA'
    | 'GIB'
    | 'GIN'
    | 'GLP'
    | 'GMB'
    | 'GNB'
    | 'GNQ'
    | 'GRC'
    | 'GRD'
    | 'GRL'
    | 'GTM'
    | 'GUF'
    | 'GUM'
    | 'GUY'
    | 'HKG'
    | 'HMD'
    | 'HND'
    | 'HRV'
    | 'HTI'
    | 'HUN'
    | 'IDN'
    | 'IMN'
    | 'IND'
    | 'IOT'
    | 'IRL'
    | 'IRN'
    | 'IRQ'
    | 'ISL'
    | 'ISR'
    | 'ITA'
    | 'JAM'
    | 'JEY'
    | 'JOR'
    | 'JPN'
    | 'KAZ'
    | 'KEN'
    | 'KGZ'
    | 'KHM'
    | 'KIR'
    | 'KNA'
    | 'KOR'
    | 'KWT'
    | 'LAO'
    | 'LBN'
    | 'LBR'
    | 'LBY'
    | 'LCA'
    | 'LIE'
    | 'LKA'
    | 'LSO'
    | 'LTU'
    | 'LUX'
    | 'LVA'
    | 'MAC'
    | 'MAF'
    | 'MAR'
    | 'MCO'
    | 'MDA'
    | 'MDG'
    | 'MDV'
    | 'MEX'
    | 'MHL'
    | 'MKD'
    | 'MLI'
    | 'MLT'
    | 'MMR'
    | 'MNE'
    | 'MNG'
    | 'MNP'
    | 'MOZ'
    | 'MRT'
    | 'MSR'
    | 'MTQ'
    | 'MUS'
    | 'MWI'
    | 'MYS'
    | 'MYT'
    | 'NAM'
    | 'NCL'
    | 'NER'
    | 'NFK'
    | 'NGA'
    | 'NIC'
    | 'NIU'
    | 'NLD'
    | 'NOR'
    | 'NPL'
    | 'NRU'
    | 'NZL'
    | 'OMN'
    | 'PAK'
    | 'PAN'
    | 'PCN'
    | 'PER'
    | 'PHL'
    | 'PLW'
    | 'PNG'
    | 'POL'
    | 'PRI'
    | 'PRK'
    | 'PRT'
    | 'PRY'
    | 'PSE'
    | 'PYF'
    | 'QAT'
    | 'REU'
    | 'ROU'
    | 'RUS'
    | 'RWA'
    | 'SAU'
    | 'SCG'
    | 'SDN'
    | 'SEN'
    | 'SGP'
    | 'SGS'
    | 'SHN'
    | 'SJM'
    | 'SLB'
    | 'SLE'
    | 'SLV'
    | 'SMR'
    | 'SOM'
    | 'SPM'
    | 'SRB'
    | 'SSD'
    | 'STP'
    | 'SUN'
    | 'SUR'
    | 'SVK'
    | 'SVN'
    | 'SWE'
    | 'SWZ'
    | 'SXM'
    | 'SYC'
    | 'SYR'
    | 'TCA'
    | 'TCD'
    | 'TGO'
    | 'THA'
    | 'TJK'
    | 'TKL'
    | 'TKM'
    | 'TLS'
    | 'TON'
    | 'TTO'
    | 'TUN'
    | 'TUR'
    | 'TUV'
    | 'TWN'
    | 'TZA'
    | 'UGA'
    | 'UKR'
    | 'UMI'
    | 'URY'
    | 'USA'
    | 'UZB'
    | 'VAT'
    | 'VCT'
    | 'VEN'
    | 'VGB'
    | 'VIR'
    | 'VNM'
    | 'VUT'
    | 'WLF'
    | 'WSM'
    | 'XUK'
    | 'XXK'
    | 'XXX'
    | 'YEM'
    | 'YUG'
    | 'ZAF'
    | 'ZMB'
    | 'ZWE'
    | '-';
};

export type DekningsgradInfoDto = {
  avklartDekningsgrad: number | null;
  søker: OppgittDekningsgradDto;
  annenPart: OppgittDekningsgradDto;
};

export type ManglendeVedleggDto = {
  dokumentType:
    | 'SØKNAD_SVANGERSKAPSPENGER'
    | 'SØKNAD_FORELDREPENGER_ADOPSJON'
    | 'SØKNAD_ENGANGSSTØNAD_FØDSEL'
    | 'SØKNAD_ENGANGSSTØNAD_ADOPSJON'
    | 'SØKNAD_FORELDREPENGER_FØDSEL'
    | 'FLEKSIBELT_UTTAK_FORELDREPENGER'
    | 'FORELDREPENGER_ENDRING_SØKNAD'
    | 'INNTEKTSMELDING'
    | 'KLAGE_DOKUMENT'
    | 'I500027'
    | 'I000114'
    | 'I000119'
    | 'DOKUMENTASJON_AV_TERMIN_ELLER_FØDSEL'
    | 'DOKUMENTASJON_AV_OMSORGSOVERTAKELSE'
    | 'BEKREFTELSE_VENTET_FØDSELSDATO'
    | 'FØDSELSATTEST'
    | 'I000141'
    | 'LEGEERKLÆRING'
    | 'DOK_INNLEGGELSE'
    | 'BESKRIVELSE_FUNKSJONSNEDSETTELSE'
    | 'I000120'
    | 'I000121'
    | 'I000122'
    | 'I000123'
    | 'I000124'
    | 'DOK_MORS_UTDANNING_ARBEID_SYKDOM'
    | 'DOK_FERIE'
    | 'DOK_ARBEIDSFORHOLD'
    | 'BEKREFTELSE_DELTAR_KVALIFISERINGSPROGRAM'
    | 'BEKREFTELSE_FRA_STUDIESTED'
    | 'BEKREFTELSE_FRA_ARBEIDSGIVER'
    | 'I000112'
    | 'DOK_HV'
    | 'DOK_NAV_TILTAK'
    | 'I000130'
    | 'I000131'
    | 'I000132'
    | 'I000133'
    | 'I000109'
    | 'I000142'
    | 'INNTEKTSOPPLYSNING_SELVSTENDIG'
    | 'DOK_INNTEKT'
    | 'INNTEKTSOPPLYSNINGER'
    | 'RESULTATREGNSKAP'
    | 'DOK_MILITÆR_SIVIL_TJENESTE'
    | 'DOK_ETTERLØNN'
    | 'I000146'
    | 'I000052'
    | 'KOPI_SKATTEMELDING'
    | 'I000140'
    | 'BEKREFTELSE_OPPHOLDSTILLATELSE'
    | 'I000143'
    | 'OPPHOLDSOPPLYSNINGER'
    | 'I000110'
    | 'I000111'
    | 'I000118'
    | 'ETTERSENDT_SØKNAD_SVANGERSKAPSPENGER_SELVSTENDIG'
    | 'ETTERSENDT_SØKNAD_FORELDREPENGER_ADOPSJON'
    | 'ETTERSENDT_SØKNAD_ENGANGSSTØNAD_FØDSEL'
    | 'ETTERSENDT_SØKNAD_ENGANGSSTØNAD_ADOPSJON'
    | 'ETTERSENDT_SØKNAD_FORELDREPENGER_FØDSEL'
    | 'ETTERSENDT_FLEKSIBELT_UTTAK_FORELDREPENGER'
    | 'ETTERSENDT_FORELDREPENGER_ENDRING_SØKNAD'
    | 'BREV_UTLAND'
    | 'ANNET_SKJEMA_UTLAND_IKKE_NAV'
    | 'BREV'
    | 'I000145'
    | 'I000144'
    | 'ANNET_SKJEMA_IKKE_NAV'
    | 'ANNET'
    | '-';
  dokumentTittel: string | null;
  arbeidsgiverReferanse: string | null;
  brukerHarSagtAtIkkeKommer: boolean | null;
};

export type OppgittDekningsgradDto = {
  søknadsdato: string | null;
  dekningsgrad: number | null;
};

export type OppgittFordelingDto = {
  startDatoForPermisjon: string | null;
  dekningsgrader: DekningsgradInfoDto;
};

export type OppgittTilknytningDto = {
  oppholdNorgeNa: boolean | null;
  oppholdSistePeriode: boolean | null;
  oppholdNestePeriode: boolean | null;
  utlandsoppholdFor: Array<UtlandsoppholdDto> | null;
  utlandsoppholdEtter: Array<UtlandsoppholdDto> | null;
};

export type SoknadDto = {
  soknadType: 'ST-001' | 'ST-002';
  mottattDato: string | null;
  begrunnelseForSenInnsending: string | null;
  antallBarn: number | null;
  oppgittTilknytning: OppgittTilknytningDto;
  manglendeVedlegg: Array<ManglendeVedleggDto> | null;
  oppgittFordeling: OppgittFordelingDto;
  søknadsfrist: SøknadsfristDto;
};

export type SøknadsfristDto = {
  mottattDato: string | null;
  utledetSøknadsfrist: string | null;
  søknadsperiodeStart: string | null;
  søknadsperiodeSlutt: string | null;
  dagerOversittetFrist: number | null;
};

export type UtlandsoppholdDto = {
  landNavn: string | null;
  fom: string | null;
  tom: string | null;
};

export type SoknadAdopsjonDto = {
  soknadType: 'ST-001' | 'ST-002';
  mottattDato: string | null;
  begrunnelseForSenInnsending: string | null;
  antallBarn: number | null;
  oppgittTilknytning: OppgittTilknytningDto;
  manglendeVedlegg: Array<ManglendeVedleggDto> | null;
  oppgittFordeling: OppgittFordelingDto;
  søknadsfrist: SøknadsfristDto;
  omsorgsovertakelseDato: string | null;
  barnetsAnkomstTilNorgeDato: string | null;
  adopsjonFodelsedatoer: {
    [key: string]: string;
  } | null;
  farSokerType:
    | 'ADOPTERER_ALENE'
    | 'ANDRE_FORELDER_DØD'
    | 'OVERTATT_OMSORG'
    | 'OVERTATT_OMSORG_F'
    | 'ANDRE_FORELD_DØD_F'
    | '-';
};

export type SoknadFodselDto = {
  soknadType: 'ST-001' | 'ST-002';
  mottattDato: string | null;
  begrunnelseForSenInnsending: string | null;
  antallBarn: number | null;
  oppgittTilknytning: OppgittTilknytningDto;
  manglendeVedlegg: Array<ManglendeVedleggDto> | null;
  oppgittFordeling: OppgittFordelingDto;
  søknadsfrist: SøknadsfristDto;
  utstedtdato: string | null;
  termindato: string | null;
  farSokerType:
    | 'ADOPTERER_ALENE'
    | 'ANDRE_FORELDER_DØD'
    | 'OVERTATT_OMSORG'
    | 'OVERTATT_OMSORG_F'
    | 'ANDRE_FORELD_DØD_F'
    | '-';
  fodselsdatoer: {
    [key: string]: string;
  } | null;
};

export type SoknadBackendDto = {
  soknadType?: 'ST-001' | 'ST-002';
  mottattDato?: string;
  oppgittAleneomsorg?: boolean;
};

export type DetaljertSimuleringResultatDto = {
  periode?: PeriodeDto;
  ingenPerioderMedAvvik?: boolean;
  sumEtterbetaling?: number;
  sumFeilutbetaling?: number;
  sumInntrekk?: number;
  perioderPerMottaker?: Array<SimuleringForMottakerDto>;
};

export type PeriodeDto = {
  fom?: string;
  tom?: string;
};

export type SimuleringDto = {
  simuleringResultat?: DetaljertSimuleringResultatDto;
  simuleringResultatUtenInntrekk?: DetaljertSimuleringResultatDto;
  slåttAvInntrekk?: boolean;
};

export type SimuleringForMottakerDto = {
  mottakerType?: 'BRUKER' | 'ARBG_ORG' | 'ARBG_PRIV';
  mottakerNummer?: string;
  mottakerIdentifikator?: string;
  resultatPerFagområde?: Array<SimuleringResultatPerFagområdeDto>;
  resultatOgMotregningRader?: Array<SimuleringResultatRadDto>;
  nesteUtbPeriode?: PeriodeDto;
};

export type SimuleringResultatPerFagområdeDto = {
  fagOmrådeKode?:
    | 'REFUTG'
    | 'FP'
    | 'FPREF'
    | 'SP'
    | 'SPREF'
    | 'SVP'
    | 'SVPREF'
    | 'PB'
    | 'PBREF'
    | 'PN'
    | 'PNREF'
    | 'OM'
    | 'OMREF'
    | 'OPP'
    | 'OPPREF'
    | 'OOP'
    | 'OOPREF'
    | 'UNG';
  rader?: Array<SimuleringResultatRadDto>;
};

export type SimuleringResultatPerMånedDto = {
  periode?: PeriodeDto;
  beløp?: number;
};

export type SimuleringResultatRadDto = {
  feltnavn?:
    | 'nyttBeløp'
    | 'tidligereUtbetalt'
    | 'differanse'
    | 'resultatEtterMotregning'
    | 'inntrekkNesteMåned'
    | 'resultat';
  resultaterPerMåned?: Array<SimuleringResultatPerMånedDto>;
};

export type TilbakekrevingValgDto = {
  grunnerTilReduksjon?: boolean;
  videreBehandling?: '-' | 'TILBAKEKR_OPPRETT' | 'TILBAKEKR_IGNORER' | 'TILBAKEKR_INNTREKK' | 'TILBAKEKR_OPPDATER';
  varseltekst?: string;
};

export type VarseltekstDto = {
  varseltekst?: string;
};

export type AktivitetIdentifikatorDto = {
  uttakArbeidType?: 'ORDINÆRT_ARBEID' | 'SELVSTENDIG_NÆRINGSDRIVENDE' | 'FRILANS' | 'ANNET';
  arbeidsgiverReferanse?: string;
  arbeidsforholdId?: string;
};

export type AktivitetSaldoDto = {
  aktivitetIdentifikator?: AktivitetIdentifikatorDto;
  saldo?: number;
};

export type KontoReduksjoner = {
  annenForelderEøsUttak?: number;
};

export type KontoUtvidelser = {
  prematurdager?: number;
  flerbarnsdager?: number;
};

export type SaldoerDto = {
  stonadskontoer?: {
    [key: string]: StønadskontoDto;
  };
  tapteDagerFpff?: number;
};

export type StønadskontoDto = {
  stonadskontotype?:
    | 'MØDREKVOTE'
    | 'FEDREKVOTE'
    | 'FELLESPERIODE'
    | 'FORELDREPENGER'
    | 'FORELDREPENGER_FØR_FØDSEL'
    | 'FLERBARNSDAGER'
    | 'UTEN_AKTIVITETSKRAV'
    | 'MINSTERETT_NESTE_STØNADSPERIODE'
    | 'MINSTERETT';
  maxDager?: number;
  saldo?: number;
  aktivitetSaldoDtoList?: Array<AktivitetSaldoDto>;
  gyldigForbruk?: boolean;
  kontoUtvidelser?: KontoUtvidelser;
  kontoReduksjoner?: KontoReduksjoner;
};

export type BehandlingMedUttaksperioderDto = {
  behandlingUuid: string;
  perioder: Array<UttakResultatPeriodeLagreDto>;
};

export type SvangerskapspengerUttakResultatArbeidsforholdDto = {
  arbeidsforholdIkkeOppfyltÅrsak?: '-' | '8301' | '8302' | '8303' | '8312';
  arbeidsgiverReferanse?: string;
  arbeidType?: 'ORDINÆRT_ARBEID' | 'SELVSTENDIG_NÆRINGSDRIVENDE' | 'FRILANS' | 'ANNET';
  perioder?: Array<SvangerskapspengerUttakResultatPeriodeDto>;
};

export type SvangerskapspengerUttakResultatDto = {
  uttaksResultatArbeidsforhold?: Array<SvangerskapspengerUttakResultatArbeidsforholdDto>;
};

export type SvangerskapspengerUttakResultatPeriodeDto = {
  utbetalingsgrad?: number;
  periodeResultatType?: 'INNVILGET' | 'AVSLÅTT' | 'MANUELL_BEHANDLING';
  periodeIkkeOppfyltÅrsak?:
    | '-'
    | '8304'
    | '8305'
    | '8306'
    | '8308'
    | '8309'
    | '8310'
    | '8311'
    | '8313'
    | '8314'
    | '8315'
    | '8316'
    | '8317';
  fom?: string;
  tom?: string;
};

export type FilterDto = {
  kreverSammenhengendeUttakTom?: string;
  utenMinsterett?: boolean;
  søkerErMor?: boolean;
};

export type UttakResultatPeriodeAktivitetDto = {
  stønadskontoType?:
    | 'FELLESPERIODE'
    | 'MØDREKVOTE'
    | 'FEDREKVOTE'
    | 'FORELDREPENGER'
    | 'FORELDREPENGER_FØR_FØDSEL'
    | '-';
  prosentArbeid?: number;
  arbeidsforholdId?: string;
  eksternArbeidsforholdId?: string;
  arbeidsgiverReferanse?: string;
  utbetalingsgrad?: number;
  uttakArbeidType?: 'ORDINÆRT_ARBEID' | 'SELVSTENDIG_NÆRINGSDRIVENDE' | 'FRILANS' | 'ANNET';
  gradering?: boolean;
  trekkdagerDesimaler?: number;
};

export type UttakResultatPeriodeDto = {
  fom?: string;
  tom?: string;
  aktiviteter?: Array<UttakResultatPeriodeAktivitetDto>;
  periodeResultatType?: 'INNVILGET' | 'AVSLÅTT' | 'MANUELL_BEHANDLING';
  begrunnelse?: string;
  periodeResultatÅrsak?:
    | '-'
    | '2002'
    | '2003'
    | '2004'
    | '2005'
    | '2006'
    | '2007'
    | '2010'
    | '2011'
    | '2012'
    | '2013'
    | '2014'
    | '2015'
    | '2016'
    | '2017'
    | '2018'
    | '2019'
    | '2020'
    | '2021'
    | '2022'
    | '2023'
    | '2024'
    | '2025'
    | '2026'
    | '2027'
    | '2028'
    | '2030'
    | '2031'
    | '2032'
    | '2033'
    | '2034'
    | '2035'
    | '2036'
    | '2037'
    | '2038'
    | '2039'
    | '4002'
    | '4003'
    | '4005'
    | '4007'
    | '4008'
    | '4012'
    | '4013'
    | '4020'
    | '4022'
    | '4023'
    | '4025'
    | '4030'
    | '4031'
    | '4032'
    | '4033'
    | '4034'
    | '4035'
    | '4037'
    | '4038'
    | '4039'
    | '4040'
    | '4041'
    | '4050'
    | '4051'
    | '4052'
    | '4053'
    | '4054'
    | '4055'
    | '4056'
    | '4057'
    | '4058'
    | '4059'
    | '4060'
    | '4061'
    | '4062'
    | '4063'
    | '4064'
    | '4065'
    | '4066'
    | '4067'
    | '4068'
    | '4069'
    | '4070'
    | '4071'
    | '4072'
    | '4073'
    | '4074'
    | '4075'
    | '4076'
    | '4077'
    | '4081'
    | '4082'
    | '4084'
    | '4085'
    | '4086'
    | '4087'
    | '4088'
    | '4089'
    | '4092'
    | '4093'
    | '4095'
    | '4096'
    | '4097'
    | '4098'
    | '4099'
    | '4100'
    | '4102'
    | '4103'
    | '4104'
    | '4105'
    | '4106'
    | '4107'
    | '4108'
    | '4110'
    | '4111'
    | '4112'
    | '4115'
    | '4116'
    | '4117';
  manuellBehandlingÅrsak?:
    | '-'
    | '5001'
    | '5002'
    | '5003'
    | '5004'
    | '5005'
    | '5006'
    | '5007'
    | '5009'
    | '5010'
    | '5011'
    | '5012'
    | '5014'
    | '5016'
    | '5018'
    | '5019'
    | '5024'
    | '5025'
    | '5026'
    | '5027'
    | '5028'
    | '5029'
    | '5030'
    | '5031'
    | '5032';
  graderingAvslagÅrsak?: '-' | '4504' | '4501' | '4502' | '4503' | '4523';
  flerbarnsdager?: boolean;
  samtidigUttak?: boolean;
  samtidigUttaksprosent?: number;
  graderingInnvilget?: boolean;
  periodeType?: 'FELLESPERIODE' | 'MØDREKVOTE' | 'FEDREKVOTE' | 'FORELDREPENGER' | 'FORELDREPENGER_FØR_FØDSEL' | '-';
  utsettelseType?:
    | 'ARBEID'
    | 'FERIE'
    | 'SYKDOM_SKADE'
    | 'SØKER_INNLAGT'
    | 'BARN_INNLAGT'
    | 'HV_OVELSE'
    | 'NAV_TILTAK'
    | 'FRI'
    | '-';
  oppholdÅrsak?:
    | '-'
    | 'UTTAK_MØDREKVOTE_ANNEN_FORELDER'
    | 'UTTAK_FEDREKVOTE_ANNEN_FORELDER'
    | 'UTTAK_FELLESP_ANNEN_FORELDER'
    | 'UTTAK_FORELDREPENGER_ANNEN_FORELDER';
  mottattDato?: string;
  tidligstMottattDato?: string;
  erUtbetalingRedusertTilMorsStillingsprosent?: boolean;
  gradertAktivitet?: UttakResultatPeriodeAktivitetDto;
  periodeResultatÅrsakLovhjemmel?: string;
  graderingsAvslagÅrsakLovhjemmel?: string;
};

export type UttakResultatPerioderDto = {
  perioderSøker?: Array<UttakResultatPeriodeDto>;
  perioderAnnenpart?: Array<UttakResultatPeriodeDto>;
  annenForelderHarRett?: boolean;
  aleneomsorg?: boolean;
  annenForelderRettEØS?: boolean;
  oppgittAnnenForelderRettEØS?: boolean;
  årsakFilter?: FilterDto;
  endringsdato?: string;
};

export type Beskrivelse = {
  header?: string;
  kommentarer?: Array<string>;
};

export type Dokument = {
  journalpostId?: string;
  dokumentId?: string;
  tittel?: string;
};

export type OppgaveDto = {
  oppgaveId?: string;
  oppgavetype?: 'VUR_KONSEKVENS' | 'VUR_DOKUMENT';
  beskrivelser?: Array<Beskrivelse>;
  dokumenter?: Array<Dokument>;
};

export type VergeBackendDto = {
  aktoerId?: string;
  navn?: string;
  organisasjonsnummer?: string;
  gyldigFom?: string;
  gyldigTom?: string;
  vergeType?: 'BARN' | 'FBARN' | 'VOKSEN' | 'ADVOKAT' | 'ANNEN_F';
};

export type VergeDto = {
  vergeType: 'BARN' | 'FBARN' | 'VOKSEN' | 'ADVOKAT' | 'ANNEN_F';
  gyldigFom?: string;
  gyldigTom?: string;
  navn?: string;
  fnr?: string;
  organisasjonsnummer?: string;
};

export type YtelseFordelingDto = {
  overstyrtOmsorg?: boolean;
  førsteUttaksdato?: string;
  ønskerJustertVedFødsel?: boolean;
};

export type OmsorgOgRettDto = {
  søknad?: Søknad;
  registerdata?: RegisterData;
  manuellBehandlingResultat?: ManuellBehandlingResultat;
  rettighetstype?:
    | 'ALENEOMSORG'
    | 'BEGGE_RETT'
    | 'BEGGE_RETT_EØS'
    | 'BARE_MOR_RETT'
    | 'BARE_FAR_RETT'
    | 'BARE_FAR_RETT_MOR_UFØR';
  relasjonsRolleType?: 'EKTE' | 'BARN' | 'FARA' | 'MORA' | 'REPA' | 'MMOR' | 'ANPA' | '-';
};

export type RegisterData = {
  harAnnenpartUføretrygd?: 'JA' | 'NEI' | 'IKKE_RELEVANT';
  harAnnenpartForeldrepenger?: 'JA' | 'NEI' | 'IKKE_RELEVANT';
  harAnnenpartEngangsstønad?: 'JA' | 'NEI' | 'IKKE_RELEVANT';
};

export type Rettighet = {
  harRettNorge?: 'JA' | 'NEI' | 'IKKE_RELEVANT';
  harOppholdEØS?: 'JA' | 'NEI' | 'IKKE_RELEVANT';
  harRettEØS?: 'JA' | 'NEI' | 'IKKE_RELEVANT';
  harUføretrygd?: 'JA' | 'NEI' | 'IKKE_RELEVANT';
};

export type BestillDokumentDto = {
  behandlingUuid?: string;
  brevmalkode:
    | 'FRITEK'
    | 'FRIHTM'
    | 'INNVES'
    | 'AVSLES'
    | 'INVFOR'
    | 'AVSFOR'
    | 'OPPFOR'
    | 'ANUFOR'
    | 'INVSVP'
    | 'OPPSVP'
    | 'AVSSVP'
    | 'INFOAF'
    | 'INNOPP'
    | 'VARREV'
    | 'IOHENL'
    | 'INNSYN'
    | 'IKKESO'
    | 'INGEND'
    | 'FORSAK'
    | 'FORMED'
    | 'FORMEF'
    | 'FORTID'
    | 'KGEAVV'
    | 'KGEOMG'
    | 'KGEOVE'
    | 'ELYSIM'
    | 'ENDUTB'
    | 'INFOPU'
    | 'FORPUS'
    | 'KLAGAV'
    | 'KAVVIS'
    | 'KLAGNY'
    | 'KHJEMS'
    | 'VEDMED'
    | 'KOMGJO'
    | 'KLAGOV'
    | 'KOVKLA'
    | 'KLAGVE'
    | 'KSTADF'
    | 'VEDOGA'
    | 'ANKEBO'
    | 'ANKOMG'
    | 'ANKOPP'
    | 'KGESTA'
    | 'KGEHJE';
  fritekst?: string;
  arsakskode?:
    | 'BARNIKKEREG'
    | 'JOBBFULLTID'
    | 'IKKEOPPTJENT'
    | 'UTVANDRET'
    | 'JOBBUTLAND'
    | 'IKKEOPPHOLD'
    | 'JOBB6MND'
    | 'AKTIVITET'
    | 'ANNET';
};

export type ForhåndsvisDokumentDto = {
  behandlingUuid: string;
  dokumentMal?:
    | 'FRITEK'
    | 'FRIHTM'
    | 'INNVES'
    | 'AVSLES'
    | 'INVFOR'
    | 'AVSFOR'
    | 'OPPFOR'
    | 'ANUFOR'
    | 'INVSVP'
    | 'OPPSVP'
    | 'AVSSVP'
    | 'INFOAF'
    | 'INNOPP'
    | 'VARREV'
    | 'IOHENL'
    | 'INNSYN'
    | 'IKKESO'
    | 'INGEND'
    | 'FORSAK'
    | 'FORMED'
    | 'FORMEF'
    | 'FORTID'
    | 'KGEAVV'
    | 'KGEOMG'
    | 'KGEOVE'
    | 'ELYSIM'
    | 'ENDUTB'
    | 'INFOPU'
    | 'FORPUS'
    | 'KLAGAV'
    | 'KAVVIS'
    | 'KLAGNY'
    | 'KHJEMS'
    | 'VEDMED'
    | 'KOMGJO'
    | 'KLAGOV'
    | 'KOVKLA'
    | 'KLAGVE'
    | 'KSTADF'
    | 'VEDOGA'
    | 'ANKEBO'
    | 'ANKOMG'
    | 'ANKOPP'
    | 'KGESTA'
    | 'KGEHJE';
  arsakskode?:
    | 'BARNIKKEREG'
    | 'JOBBFULLTID'
    | 'IKKEOPPTJENT'
    | 'UTVANDRET'
    | 'JOBBUTLAND'
    | 'IKKEOPPHOLD'
    | 'JOBB6MND'
    | 'AKTIVITET'
    | 'ANNET';
  automatiskVedtaksbrev?: boolean;
  tittel?: string;
  fritekst?: string;
};

export type DokumentKvitteringDto = {
  behandlingUuid: string;
  saksnummer: Saksnummer;
  dokumentbestillingUuid: string;
  journalpostId: string;
  dokumentId: string;
};

export type Saksnummer = {
  saksnummer: string;
};

export type MellomlagreHtmlDto = {
  behandlingUuid: string;
  redigertInnhold?: string;
};

export type DokumentDto = {
  journalpostId?: string;
  dokumentId?: string;
  behandlinger?: Array<number>;
  behandlingUuidList?: Array<string>;
  tidspunkt?: string;
  tittel?: string;
  kommunikasjonsretning?: 'INN' | 'UT' | 'NOTAT';
  gjelderFor?: string;
  arbeidsgiverReferanse?: string;
};

export type MottattDokumentDto = {
  mottattDato?: string;
  dokumentTypeId?:
    | 'SØKNAD_SVANGERSKAPSPENGER'
    | 'SØKNAD_FORELDREPENGER_ADOPSJON'
    | 'SØKNAD_ENGANGSSTØNAD_FØDSEL'
    | 'SØKNAD_ENGANGSSTØNAD_ADOPSJON'
    | 'SØKNAD_FORELDREPENGER_FØDSEL'
    | 'FLEKSIBELT_UTTAK_FORELDREPENGER'
    | 'FORELDREPENGER_ENDRING_SØKNAD'
    | 'INNTEKTSMELDING'
    | 'KLAGE_DOKUMENT'
    | 'I500027'
    | 'I000114'
    | 'I000119'
    | 'DOKUMENTASJON_AV_TERMIN_ELLER_FØDSEL'
    | 'DOKUMENTASJON_AV_OMSORGSOVERTAKELSE'
    | 'BEKREFTELSE_VENTET_FØDSELSDATO'
    | 'FØDSELSATTEST'
    | 'I000141'
    | 'LEGEERKLÆRING'
    | 'DOK_INNLEGGELSE'
    | 'BESKRIVELSE_FUNKSJONSNEDSETTELSE'
    | 'I000120'
    | 'I000121'
    | 'I000122'
    | 'I000123'
    | 'I000124'
    | 'DOK_MORS_UTDANNING_ARBEID_SYKDOM'
    | 'DOK_FERIE'
    | 'DOK_ARBEIDSFORHOLD'
    | 'BEKREFTELSE_DELTAR_KVALIFISERINGSPROGRAM'
    | 'BEKREFTELSE_FRA_STUDIESTED'
    | 'BEKREFTELSE_FRA_ARBEIDSGIVER'
    | 'I000112'
    | 'DOK_HV'
    | 'DOK_NAV_TILTAK'
    | 'I000130'
    | 'I000131'
    | 'I000132'
    | 'I000133'
    | 'I000109'
    | 'I000142'
    | 'INNTEKTSOPPLYSNING_SELVSTENDIG'
    | 'DOK_INNTEKT'
    | 'INNTEKTSOPPLYSNINGER'
    | 'RESULTATREGNSKAP'
    | 'DOK_MILITÆR_SIVIL_TJENESTE'
    | 'DOK_ETTERLØNN'
    | 'I000146'
    | 'I000052'
    | 'KOPI_SKATTEMELDING'
    | 'I000140'
    | 'BEKREFTELSE_OPPHOLDSTILLATELSE'
    | 'I000143'
    | 'OPPHOLDSOPPLYSNINGER'
    | 'I000110'
    | 'I000111'
    | 'I000118'
    | 'ETTERSENDT_SØKNAD_SVANGERSKAPSPENGER_SELVSTENDIG'
    | 'ETTERSENDT_SØKNAD_FORELDREPENGER_ADOPSJON'
    | 'ETTERSENDT_SØKNAD_ENGANGSSTØNAD_FØDSEL'
    | 'ETTERSENDT_SØKNAD_ENGANGSSTØNAD_ADOPSJON'
    | 'ETTERSENDT_SØKNAD_FORELDREPENGER_FØDSEL'
    | 'ETTERSENDT_FLEKSIBELT_UTTAK_FORELDREPENGER'
    | 'ETTERSENDT_FORELDREPENGER_ENDRING_SØKNAD'
    | 'BREV_UTLAND'
    | 'ANNET_SKJEMA_UTLAND_IKKE_NAV'
    | 'BREV'
    | 'I000145'
    | 'I000144'
    | 'ANNET_SKJEMA_IKKE_NAV'
    | 'ANNET'
    | '-';
  dokumentKategori?:
    | '-'
    | 'KLGA'
    | 'ITSKJ'
    | 'SOKN'
    | 'ESKJ'
    | 'BRV'
    | 'EDIALOG'
    | 'FNOT'
    | 'IBRV'
    | 'KONVEARK'
    | 'KONVSYS'
    | 'PUBEOS'
    | 'SEDOK'
    | 'TSKJ'
    | 'VBRV';
};

export type JournalpostIdDto = {
  journalpostId: string;
};

export type DokumentIdDto = {
  dokumentId?: string;
};

export type AktoerInfoDto = {
  aktørId: string | null;
  person: PersonDto;
  fagsaker: Array<FagsakSøkDto> | null;
};

export type FagsakSøkDto = {
  saksnummer: string;
  fagsakYtelseType: 'ES' | 'FP' | 'SVP' | '-';
  status: 'OPPR' | 'UBEH' | 'LOP' | 'AVSLU';
  relasjonsRolleType: 'EKTE' | 'BARN' | 'FARA' | 'MORA' | 'REPA' | 'MMOR' | 'ANPA' | '-';
  aktørId: string;
  person?: PersonDto;
  barnFødt?: string;
  opprettet?: string;
  endret?: string;
};

export type PersonDto = {
  aktørId: string;
  navn: string;
  fødselsnummer: string;
  kjønn: 'K' | 'M' | '-';
  diskresjonskode?: string;
  fødselsdato: string;
  dødsdato?: string;
  dodsdato?: string;
  språkkode: 'NB' | 'NN' | 'EN' | '-';
};

export type AktoerIdDto = {
  aktoerId?: string;
};

export type EndreUtlandMarkeringDto = {
  saksnummer: string;
  fagsakMarkeringer?: Array<
    | 'EØS_BOSATT_NORGE'
    | 'BOSATT_UTLAND'
    | 'SAMMENSATT_KONTROLL'
    | 'DØD_DØDFØDSEL'
    | 'PRAKSIS_UTSETTELSE'
    | 'BARE_FAR_RETT'
    | 'SELVSTENDIG_NÆRING'
    | 'HASTER'
  >;
};

export type FagsakBackendDto = {
  saksnummer: string | null;
  fagsakYtelseType: 'ES' | 'FP' | 'SVP' | '-';
  status: 'OPPR' | 'UBEH' | 'LOP' | 'AVSLU';
  relasjonsRolleType: 'EKTE' | 'BARN' | 'FARA' | 'MORA' | 'REPA' | 'MMOR' | 'ANPA' | '-';
  aktørId: string | null;
  dekningsgrad: number | null;
};

export type AnnenPartBehandlingDto = {
  saksnummer: string | null;
  relasjonsRolleType: 'EKTE' | 'BARN' | 'FARA' | 'MORA' | 'REPA' | 'MMOR' | 'ANPA' | '-';
  behandlingUuid: string | null;
};

export type BehandlingOperasjonerDto = {
  uuid: string | null;
  behandlingKanBytteEnhet: boolean | null;
  behandlingKanHenlegges: boolean | null;
  behandlingKanGjenopptas: boolean | null;
  behandlingKanOpnesForEndringer: boolean | null;
  behandlingKanMerkesHaster: boolean | null;
  behandlingKanSettesPaVent: boolean | null;
  behandlingKanSendeMelding: boolean | null;
  behandlingFraBeslutter: boolean | null;
  behandlingTilGodkjenning: boolean | null;
  vergeBehandlingsmeny: 'SKJUL' | 'OPPRETT' | 'FJERN';
};

export type BehandlingOpprettingDto = {
  behandlingType: 'BT-002' | 'BT-003' | 'BT-004' | 'BT-008' | 'BT-006' | 'BT-007' | 'BT-009' | '-';
  kanOppretteBehandling: boolean | null;
};

export type BrevmalDto = {
  kode: string | null;
  navn: string | null;
  tilgjengelig: boolean | null;
};

export type FagsakBehandlingDto = {
  id: number | null;
  uuid: string | null;
  versjon: number | null;
  type: 'BT-002' | 'BT-003' | 'BT-004' | 'BT-008' | 'BT-006' | 'BT-007' | 'BT-009' | '-';
  status: 'AVSLU' | 'FVED' | 'IVED' | 'OPPRE' | 'UTRED';
  fagsakId: number | null;
  opprettet: string | null;
  avsluttet: string | null;
  endret: string | null;
  endretAvBrukernavn: string | null;
  behandlendeEnhetId: string | null;
  behandlendeEnhetNavn: string | null;
  erAktivPapirsoknad: boolean | null;
  førsteÅrsak: BehandlingÅrsakDto;
  behandlingsfristTid: string | null;
  gjeldendeVedtak: boolean | null;
  erPaaVent: boolean | null;
  originalVedtaksDato: string | null;
  behandlingHenlagt: boolean | null;
  behandlingPaaVent: boolean | null;
  behandlingPåVent: boolean | null;
  fristBehandlingPåVent: string | null;
  fristBehandlingPaaVent: string | null;
  venteArsakKode: string | null;
  venteÅrsakKode: string | null;
  sprakkode: 'NB' | 'NN' | 'EN' | '-';
  språkkode: 'NB' | 'NN' | 'EN' | '-';
  behandlingKøet: boolean | null;
  ansvarligSaksbehandler: string | null;
  toTrinnsBehandling: boolean | null;
  behandlingsresultat: BehandlingsresultatDto;
  behandlingÅrsaker: Array<BehandlingÅrsakDto> | null;
  vilkår: Array<VilkårDto> | null;
  links: Array<ResourceLink> | null;
  behandlingTillatteOperasjoner: BehandlingOperasjonerDto;
  brevmaler: Array<BrevmalDto> | null;
  totrinnskontrollÅrsaker: Array<TotrinnskontrollSkjermlenkeContextDto> | null;
  totrinnskontrollReadonly: boolean | null;
  risikoAksjonspunkt: AksjonspunktDto;
  kontrollResultat: KontrollresultatDto;
  ugunstAksjonspunkt: boolean | null;
  behandlingKoet: boolean | null;
};

export type FagsakFullDto = {
  saksnummer: string | null;
  fagsakYtelseType: 'ES' | 'FP' | 'SVP' | '-';
  relasjonsRolleType: 'EKTE' | 'BARN' | 'FARA' | 'MORA' | 'REPA' | 'MMOR' | 'ANPA' | '-';
  status: 'OPPR' | 'UBEH' | 'LOP' | 'AVSLU';
  aktørId: string | null;
  sakSkalTilInfotrygd: boolean | null;
  dekningsgrad: number | null;
  bruker: PersonDto;
  brukerManglerAdresse: boolean | null;
  annenPart: PersonDto;
  annenpartBehandling: AnnenPartBehandlingDto;
  familiehendelse: SakHendelseDto;
  fagsakMarkeringer: Array<FagsakMarkeringDto> | null;
  behandlingTypeKanOpprettes: Array<BehandlingOpprettingDto> | null;
  behandlinger: Array<FagsakBehandlingDto> | null;
  historikkinnslag: Array<HistorikkinnslagDto> | null;
  notater: Array<FagsakNotatDto> | null;
  kontrollResultat: KontrollresultatDto;
  harVergeIÅpenBehandling: boolean | null;
};

export type FagsakMarkeringDto = {
  fagsakMarkering:
    | 'EØS_BOSATT_NORGE'
    | 'BOSATT_UTLAND'
    | 'SAMMENSATT_KONTROLL'
    | 'DØD_DØDFØDSEL'
    | 'PRAKSIS_UTSETTELSE'
    | 'BARE_FAR_RETT'
    | 'SELVSTENDIG_NÆRING'
    | 'HASTER';
  kortNavn: string | null;
};

export type FagsakNotatDto = {
  opprettetAv: string | null;
  opprettetTidspunkt: string | null;
  notat: string | null;
};

export type FaresignalgruppeDto = {
  faresignaler: Array<string> | null;
};

export type HistorikkAktørDto = {
  type: 'BESL' | 'SBH' | 'SOKER' | 'ARBEIDSGIVER' | 'VL' | '-';
  ident: string | null;
};

export type HistorikkInnslagDokumentLinkDto = {
  tag: string | null;
  journalpostId: string | null;
  dokumentId: string | null;
  utgått: boolean | null;
};

export type HistorikkinnslagDto = {
  behandlingUuid: string | null;
  aktør: HistorikkAktørDto;
  skjermlenke:
    | 'ANKE_MERKNADER'
    | 'ANKE_VURDERING'
    | 'BEREGNING_ENGANGSSTOENAD'
    | 'BEREGNING_FORELDREPENGER'
    | 'BESTEBEREGNING'
    | 'FAKTA_FOR_OMSORG'
    | 'FAKTA_FOR_OPPTJENING'
    | 'FAKTA_OM_ADOPSJON'
    | 'FAKTA_OM_ARBEIDSFORHOLD'
    | 'FAKTA_OM_ARBEIDSFORHOLD_INNTEKTSMELDING'
    | 'FAKTA_OM_ARBEIDSFORHOLD_PERMISJON'
    | 'FAKTA_OM_BEREGNING'
    | 'FAKTA_OM_FOEDSEL'
    | 'FAKTA_OM_FORDELING'
    | 'FAKTA_OM_MEDLEMSKAP'
    | 'FAKTA_OM_OMSORG_OG_FORELDREANSVAR'
    | 'FAKTA_OM_OPPTJENING'
    | 'FAKTA_OM_SIMULERING'
    | 'FAKTA_OM_UTTAK'
    | 'FAKTA_OM_AKTIVITETSKRAV'
    | 'FAKTA_OMSORG_OG_RETT'
    | 'FAKTA_OM_VERGE'
    | 'FORMKRAV_KLAGE_KA'
    | 'FORMKRAV_KLAGE_NFP'
    | 'KLAGE_BEH_NFP'
    | 'KLAGE_BEH_NK'
    | 'KONTROLL_AV_SAKSOPPLYSNINGER'
    | 'OPPLYSNINGSPLIKT'
    | 'PUNKT_FOR_ADOPSJON'
    | 'PUNKT_FOR_FOEDSEL'
    | 'PUNKT_FOR_FORELDREANSVAR'
    | 'PUNKT_FOR_MEDLEMSKAP'
    | 'PUNKT_FOR_MEDLEMSKAP_LØPENDE'
    | 'PUNKT_FOR_OMSORG'
    | 'PUNKT_FOR_OPPTJENING'
    | 'PUNKT_FOR_SVANGERSKAPSPENGER'
    | 'PUNKT_FOR_SVP_INNGANG'
    | 'SOEKNADSFRIST'
    | 'TILKJENT_YTELSE'
    | '-'
    | 'UTLAND'
    | 'UTTAK'
    | 'VEDTAK'
    | 'VURDER_FARESIGNALER'
    | 'FAKTA_OM_UTTAK_DOKUMENTASJON'
    | 'FAKTA_UTTAK'
    | 'FAKTA_UTTAK_EØS';
  opprettetTidspunkt: string | null;
  dokumenter: Array<HistorikkInnslagDokumentLinkDto> | null;
  tittel: string | null;
  linjer: Array<Linje> | null;
};

export type KontrollresultatDto = {
  kontrollresultat: 'HOY' | 'IKKE_HOY' | 'IKKE_KLASSIFISERT' | '-';
  iayFaresignaler: FaresignalgruppeDto;
  medlFaresignaler: FaresignalgruppeDto;
  faresignalVurdering:
    | 'INNVIRKNING'
    | 'INNVILGET_REDUSERT'
    | 'INNVILGET_UENDRET'
    | 'AVSLAG_FARESIGNAL'
    | 'AVSLAG_ANNET'
    | 'INGEN_INNVIRKNING'
    | '-';
};

export type Linje = {
  type: 'TEKST' | 'LINJESKIFT';
  tekst: string | null;
};

export type SakHendelseDto = {
  hendelseType: 'ADPSJN' | 'OMSRGO' | 'FODSL' | 'TERM' | '-';
  hendelseDato: string | null;
  antallBarn: number | null;
  dødfødsel: boolean | null;
};

export type TotrinnsBeregningDto = {
  fastsattVarigEndringNaering: boolean | null;
  faktaOmBeregningTilfeller: Array<
    | 'VURDER_TIDSBEGRENSET_ARBEIDSFORHOLD'
    | 'VURDER_SN_NY_I_ARBEIDSLIVET'
    | 'VURDER_NYOPPSTARTET_FL'
    | 'FASTSETT_MAANEDSINNTEKT_FL'
    | 'FASTSETT_BG_ARBEIDSTAKER_UTEN_INNTEKTSMELDING'
    | 'VURDER_LØNNSENDRING'
    | 'FASTSETT_MÅNEDSLØNN_ARBEIDSTAKER_UTEN_INNTEKTSMELDING'
    | 'VURDER_AT_OG_FL_I_SAMME_ORGANISASJON'
    | 'FASTSETT_BESTEBEREGNING_FØDENDE_KVINNE'
    | 'VURDER_ETTERLØNN_SLUTTPAKKE'
    | 'FASTSETT_ETTERLØNN_SLUTTPAKKE'
    | 'VURDER_MOTTAR_YTELSE'
    | 'VURDER_BESTEBEREGNING'
    | 'VURDER_MILITÆR_SIVILTJENESTE'
    | 'VURDER_REFUSJONSKRAV_SOM_HAR_KOMMET_FOR_SENT'
    | 'FASTSETT_BG_KUN_YTELSE'
    | 'TILSTØTENDE_YTELSE'
    | 'FASTSETT_ENDRET_BEREGNINGSGRUNNLAG'
    | '-'
  > | null;
};

export type TotrinnskontrollAksjonspunkterDto = {
  aksjonspunktKode: string | null;
  opptjeningAktiviteter: Array<TotrinnskontrollAktivitetDto> | null;
  beregningDto: TotrinnsBeregningDto;
  besluttersBegrunnelse: string | null;
  totrinnskontrollGodkjent: boolean | null;
  vurderPaNyttArsaker: Array<
    'FEIL_FAKTA' | 'FEIL_LOV' | 'SKJØNN' | 'UTREDNING' | 'SAKSFLYT' | 'BEGRUNNELSE' | '-' | 'ANNET' | 'FEIL_REGEL'
  > | null;
  uttakPerioder: Array<UttakPeriodeEndringDto> | null;
};

export type TotrinnskontrollAktivitetDto = {
  aktivitetType: string | null;
  erEndring: boolean | null;
  godkjent: boolean | null;
  arbeidsgiverReferanse: string | null;
  arbeidsgiverNavn: string | null;
  orgnr: string | null;
  privatpersonFødselsdato: string | null;
};

export type TotrinnskontrollSkjermlenkeContextDto = {
  skjermlenkeType: string | null;
  totrinnskontrollAksjonspunkter: Array<TotrinnskontrollAksjonspunkterDto> | null;
};

export type UttakPeriodeEndringDto = {
  fom: string | null;
  tom: string | null;
  erEndret: boolean | null;
  erLagtTil: boolean | null;
  erSlettet: boolean | null;
};

export type LagreFagsakNotatDto = {
  saksnummer: string;
  notat: string;
};

export type SokefeltDto = {
  searchString: string;
};

export type FamiliehendelseDto = (
  | ({
      '@type': 'AvklartDataAdopsjonDto';
    } & AvklartDataAdopsjonDto)
  | ({
      '@type': 'AvklartDataFodselDto';
    } & AvklartDataFodselDto)
  | ({
      '@type': 'AvklartDataOmsorgDto';
    } & AvklartDataOmsorgDto)
) & {
  soknadType?: 'ST-001' | 'ST-002';
  skjaringstidspunkt?: string;
};

export type AvklartBarnDto = {
  fodselsdato: string | null;
  dodsdato: string | null;
};

export type AvklartDataAdopsjonDto = {
  mannAdoptererAlene: boolean | null;
  ektefellesBarn: boolean | null;
  omsorgsovertakelseDato: string | null;
  ankomstNorge: string | null;
  adopsjonFodelsedatoer: {
    [key: string]: string;
  } | null;
  fødselsdatoer: {
    [key: string]: string;
  } | null;
  soknadType: 'ST-001' | 'ST-002';
  skjaringstidspunkt: string | null;
};

export type AvklartDataFodselDto = {
  dokumentasjonForligger: boolean | null;
  dokumentasjonForeligger: boolean | null;
  soknadType: 'ST-001' | 'ST-002';
  skjaringstidspunkt: string | null;
  avklartBarn: Array<AvklartBarnDto> | null;
  brukAntallBarnFraTps: boolean | null;
  termindato: string | null;
  antallBarnTermin: number | null;
  utstedtdato: string | null;
  morForSykVedFodsel: boolean | null;
  vedtaksDatoSomSvangerskapsuke: number | null;
};

export type AvklartDataOmsorgDto = {
  omsorgsovertakelseDato: string | null;
  vilkarType: 'FP_VK_5' | 'FP_VK_8' | 'FP_VK_33' | '-';
  antallBarnTilBeregning: number | null;
  foreldreansvarDato: string | null;
  fødselsdatoer: {
    [key: string]: string;
  } | null;
  soknadType: 'ST-001' | 'ST-002';
  skjaringstidspunkt: string | null;
};

export type FamilieHendelseGrunnlagDto = {
  oppgitt?: FamiliehendelseDto;
  gjeldende?: FamiliehendelseDto;
  register?: FamiliehendelseDto;
};

export type FagsakInfomasjonDto = {
  aktørId: string;
  behandlingstemaOffisiellKode: string;
};

export type FamiliehendelseInfoDto = {
  familiehendelseDato?: string;
  familihendelseType?: 'FØDSEL' | 'TERMIN' | 'ADOPSJON' | 'OMSORG';
};

export type SakInfoV2Dto = {
  saksnummer: SaksnummerDto;
  ytelseType: 'ES' | 'FP' | 'SVP';
  status: 'UNDER_BEHANDLING' | 'LØPENDE' | 'AVSLUTTET';
  familiehendelseInfoDto?: FamiliehendelseInfoDto;
  opprettetDato: string;
  førsteUttaksdato?: string;
};

export type AktørIdDto = {
  aktørId: string;
};

export type SakInntektsmeldingDto = {
  bruker: AktørIdDto;
  ytelse: 'FORELDREPENGER' | 'SVANGERSKAPSPENGER';
};

export type JournalpostKnyttningDto = {
  saksnummerDto: SaksnummerDto;
  journalpostIdDto: JournalpostIdDto;
};

export type JournalpostMottakDto = {
  saksnummer: string;
  journalpostId: string;
  forsendelseId?: string;
  eksternReferanseId?: string;
  behandlingstemaOffisiellKode: string;
  dokumentTypeIdOffisiellKode?: string;
  forsendelseMottatt?: string;
  forsendelseMottattTidspunkt?: string;
  dokumentKategoriOffisiellKode?: string;
  journalForendeEnhet?: string;
  payloadXml?: string;
  payloadLength?: number;
};

export type OpprettSakDto = {
  journalpostId?: string;
  behandlingstemaOffisiellKode: string;
  aktørId: string;
};

export type OpprettSakV2Dto = {
  journalpostId?: string;
  ytelseType: 'ES' | 'FP' | 'SVP';
  aktørId: string;
};

export type BehandlendeFagsystemDto = {
  behandlesIVedtaksløsningen?: boolean;
  sjekkMotInfotrygd?: boolean;
  manuellVurdering?: boolean;
  saksnummerDto?: SaksnummerDto;
};

export type VurderFagsystemDto = {
  journalpostId?: string;
  strukturertSøknad: boolean;
  aktørId: string;
  behandlingstemaOffisiellKode: string;
  adopsjonsBarnFodselsdatoer?: Array<string>;
  barnTermindato?: string;
  barnFodselsdato?: string;
  omsorgsovertakelsedato?: string;
  årsakInnsendingInntektsmelding?: string;
  saksnummer?: string;
  annenPart?: string;
  virksomhetsnummer?: string;
  arbeidsgiverAktørId?: string;
  arbeidsforholdsid?: string;
  forsendelseMottatt?: string;
  forsendelseMottattTidspunkt?: string;
  startDatoForeldrepengerInntektsmelding?: string;
  dokumentTypeIdOffisiellKode?: string;
  dokumentKategoriOffisiellKode?: string;
  brukerRolle?: 'MOR' | 'FAR' | 'MEDMOR';
};

export type BeregningSatsDto = {
  satsType: 'ENGANG' | 'GRUNNBELØP' | 'GSNITT' | '-';
  satsFom: string;
  satsTom?: string;
  satsVerdi: number;
};

export type EndreInntektsmeldingDto = {
  behandlingUuid: string;
  journalpostId: string;
  refusjonOpphørFom?: string;
  startdatoPermisjon?: string;
  refusjonPrMndFraStart?: number;
  refusjonsendringer?: Array<RefusjonsendringDto>;
};

export type RefusjonsendringDto = {
  fom: string;
  beløp: number;
};

export type ByttAktørRequestDto = {
  utgåttAktørId: string;
  gyldigAktørId: string;
};

export type KvitteringDto = {
  behandlingUuid: string;
  fagsystemId: number;
  maksDato: string;
  oppdaterProsessTask: boolean;
};

export type K27PatchDto = {
  behandlingUuid: string;
  fagsystemId: number;
  maksDato: string;
};

export type OppdragPatchDto = {
  behandingUuid: string;
  brukerErMottaker: boolean;
  arbeidsgiverOrgnr?: string;
  kodeEndring: string;
  fagsystemId: number;
  oppdragslinjer: Array<OppdragslinjePatchDto>;
  'bruk-ompostering116'?: boolean;
  'omposter-fom'?: string;
};

export type OppdragslinjePatchDto = {
  kodeEndring: string;
  opphoerFom?: string;
  kodeKlassifik: string;
  fom: string;
  tom: string;
  sats: number;
  satsType: string;
  delytelseId: number;
  refDelytelseId?: number;
  refFagsystemId?: number;
};

export type OppgittAnnenAktivitetDto = {
  periode: Periode;
  arbeidType:
    | 'ETTERLØNN_SLUTTPAKKE'
    | 'FORENKLET_OPPGJØRSORDNING'
    | 'FRILANSER'
    | 'FRILANSER_OPPDRAGSTAKER'
    | 'LØNN_UNDER_UTDANNING'
    | 'MARITIMT_ARBEIDSFORHOLD'
    | 'MILITÆR_ELLER_SIVILTJENESTE'
    | 'ORDINÆRT_ARBEIDSFORHOLD'
    | 'PENSJON_OG_ANDRE_TYPER_YTELSER_UTEN_ANSETTELSESFORHOLD'
    | 'NÆRING'
    | 'UTENLANDSK_ARBEIDSFORHOLD'
    | 'VENTELØNN_VARTPENGER'
    | 'VANLIG'
    | '-';
};

export type OppgittArbeidsforholdDto = {
  periode: Periode;
  arbeidType:
    | 'ETTERLØNN_SLUTTPAKKE'
    | 'FORENKLET_OPPGJØRSORDNING'
    | 'FRILANSER'
    | 'FRILANSER_OPPDRAGSTAKER'
    | 'LØNN_UNDER_UTDANNING'
    | 'MARITIMT_ARBEIDSFORHOLD'
    | 'MILITÆR_ELLER_SIVILTJENESTE'
    | 'ORDINÆRT_ARBEIDSFORHOLD'
    | 'PENSJON_OG_ANDRE_TYPER_YTELSER_UTEN_ANSETTELSESFORHOLD'
    | 'NÆRING'
    | 'UTENLANDSK_ARBEIDSFORHOLD'
    | 'VENTELØNN_VARTPENGER'
    | 'VANLIG'
    | '-';
  erUtenlandskInntekt?: boolean;
  landkode: string;
  inntekt?: number;
  virksomhetNavn?: string;
};

export type OppgittEgenNæringDto = {
  periode: Periode;
  virksomhet?: Organisasjon;
  virksomhetType?: 'DAGMAMMA' | 'FISKE' | 'JORDBRUK_SKOGBRUK' | 'ANNEN' | '-';
  regnskapsførerNavn?: string;
  regnskapsførerTlf?: string;
  virksomhetNavn?: string;
  landkode: string;
  endringDato?: string;
  erVarigEndring?: boolean;
  endringBegrunnelse?: string;
  bruttoInntekt?: number;
  erNyoppstartet?: boolean;
  erNærRelasjon?: boolean;
  erNyIArbeidslivet?: boolean;
};

export type OppgittFrilansDto = {
  harInntektFraFosterhjem?: boolean;
  erNyoppstartet?: boolean;
  erNærRelasjon?: boolean;
  frilansoppdrag: Array<OppgittFrilansoppdragDto>;
};

export type OppgittFrilansoppdragDto = {
  periode: Periode;
  oppdragsgiver?: string;
  inntekt?: number;
};

export type OppgittOpptjeningDto = {
  journalpostId?: string;
  innsendingstidspunkt?: string;
  eksternReferanse: string;
  opprettetTidspunkt: string;
  arbeidsforhold?: Array<OppgittArbeidsforholdDto>;
  egenNæring?: Array<OppgittEgenNæringDto>;
  annenAktivitet?: Array<OppgittAnnenAktivitetDto>;
  frilans?: OppgittFrilansDto;
};

export type Organisasjon = {
  ident: string;
};

export type ProsessTaskIdDto = {
  prosessTaskId: number;
};

export type InfotrygdRestanseDto = {
  fnr: string | null;
  valg: string | null;
  type: string | null;
  registrert: string | null;
  mottatt: string | null;
  vedtatt: string | null;
  reellEnhet: string | null;
  behandlendeEnhet: string | null;
};

export type TaskInput = {
  fom?: string;
  tom?: string;
  ytelseType?: 'ES' | 'FP' | 'SVP' | '-';
  delayBetween?: number;
};

export type AnnenForelder = {
  aktørId: string;
  saksnummer?: string;
  ytelseType?: 'FORELDREPENGER' | 'SVANGERSKAPSPENGER' | 'ENGANGSSTØNAD';
  saksrolle?: 'MOR' | 'FAR' | 'MEDMOR' | 'UKJENT';
};

export type Barn = {
  aktørId?: string;
  fødselsdato: string;
  dødsdato?: string;
};

export type Beregning = {
  grunnbeløp: number;
  årsbeløp: BeregningÅrsbeløp;
  andeler?: Array<BeregningAndel>;
  næringOrgNr?: Array<string>;
  hjemmel:
    | 'ARBEID'
    | 'NÆRING'
    | 'FRILANS'
    | 'ARBEID_FRILANS'
    | 'ARBEID_NÆRING'
    | 'NÆRING_FRILANS'
    | 'ARBEID_NÆRING_FRILANS'
    | 'DAGPENGER'
    | 'ARBEIDSAVKLARINGSPENGER'
    | 'BESTEBEREGNING'
    | 'MILITÆR_SIVIL'
    | 'ANNEN';
  fastsatt: 'AUTOMATISK' | 'SKJØNN';
};

export type BeregningAndel = {
  aktivitet?:
    | 'ARBEIDSAVKLARINGSPENGER'
    | 'ARBEIDSTAKER'
    | 'DAGPENGER'
    | 'FRILANSER'
    | 'MILITÆR_SIVILTJENESTE'
    | 'SELVSTENDIG_NÆRINGSDRIVENDE'
    | 'YTELSE';
  arbeidsgiver?: string;
  årsbeløp?: BeregningÅrsbeløp;
};

export type BeregningÅrsbeløp = {
  brutto?: number;
  avkortet?: number;
  redusert?: number;
  dagsats?: number;
};

export type FamilieHendelse = {
  fødselsdato: string | null;
  termindato: string | null;
  antallBarn: number | null;
  omsorgsovertakelse: string | null;
};

export type ForeldrepengerRettigheter = {
  dekningsgrad: number;
  rettighetType: 'ALENEOMSORG' | 'BARE_SØKER_RETT' | 'BEGGE_RETT' | 'BEGGE_RETT_EØS';
  stønadskonti: Array<Stønadskonto>;
  stønadsutvidelser?: Array<Stønadsutvidelse>;
};

export type Gradering = {
  prosent: number | null;
  uttakAktivitet: UttakAktivitet;
};

export type Stønadskonto = {
  type: 'FORELDREPENGER' | 'FORELDREPENGER_FØR_FØDSEL' | 'MØDREKVOTE' | 'FELLESPERIODE' | 'FEDREKVOTE';
  maksdager: number;
  restdager: number;
  minsterett?: number;
};

export type StønadsstatistikkUtbetalingPeriode = {
  fom: string;
  tom: string;
  inntektskategori:
    | 'ARBEIDSTAKER'
    | 'ARBEIDSTAKER_UTEN_FERIEPENGER'
    | 'SJØMANN'
    | 'FRILANSER'
    | 'DAGPENGER'
    | 'ARBEIDSAVKLARINGSPENGER'
    | 'SELVSTENDIG_NÆRINGSDRIVENDE'
    | 'DAGMAMMA'
    | 'JORDBRUKER'
    | 'FISKER';
  arbeidsgiver?: string;
  mottaker: 'BRUKER' | 'ARBEIDSGIVER';
  dagsats: number;
  utbetalingsgrad: number;
};

export type StønadsstatistikkUttakPeriode = {
  fom: string;
  tom: string;
  type?: 'UTTAK' | 'UTSETTELSE' | 'AVSLAG';
  stønadskontoType?: 'FORELDREPENGER' | 'FORELDREPENGER_FØR_FØDSEL' | 'MØDREKVOTE' | 'FELLESPERIODE' | 'FEDREKVOTE';
  rettighetType: 'ALENEOMSORG' | 'BARE_SØKER_RETT' | 'BEGGE_RETT' | 'BEGGE_RETT_EØS';
  forklaring?:
    | 'UTSETTELSE_FERIE'
    | 'UTSETTELSE_ARBEID'
    | 'UTSETTELSE_INNLEGGELSE'
    | 'UTSETTELSE_BARNINNLAGT'
    | 'UTSETTELSE_SYKDOM'
    | 'UTSETTELSE_HVOVELSE'
    | 'UTSETTELSE_NAVTILTAK'
    | 'OVERFØRING_ANNEN_PART_SYKDOM'
    | 'OVERFØRING_ANNEN_PART_INNLAGT'
    | 'OVERFØRING_ALENEOMSORG'
    | 'OVERFØRING_BARE_SØKER_RETT'
    | 'AKTIVITETSKRAV_ARBEID'
    | 'AKTIVITETSKRAV_UTDANNING'
    | 'AKTIVITETSKRAV_ARBEIDUTDANNING'
    | 'AKTIVITETSKRAV_SYKDOM'
    | 'AKTIVITETSKRAV_INNLEGGELSE'
    | 'AKTIVITETSKRAV_INTRODUKSJONSPROGRAM'
    | 'AKTIVITETSKRAV_KVALIFISERINGSPROGRAM'
    | 'MINSTERETT'
    | 'FLERBARNSDAGER'
    | 'SAMTIDIG_MØDREKVOTE'
    | 'AVSLAG_ANNET'
    | 'AVSLAG_AKTIVITETSKRAV'
    | 'AVSLAG_SØKNADSFRIST'
    | 'AVSLAG_IKKE_SØKT'
    | 'AVSLAG_UTSETTELSE'
    | 'AVSLAG_UTSETTELSE_TILBAKE_I_TID'
    | 'AVSLAG_PLEIEPENGER'
    | 'AVSLAG_STØNADSPERIODE_UTLØPT'
    | 'AVSLAG_VILKÅR';
  søknadsdato?: string;
  erUtbetaling?: boolean;
  virkedager?: number;
  trekkdager: number;
  gradering?: Gradering;
  samtidigUttakProsent?: number;
};

export type StønadsstatistikkVedtak = {
  saksnummer?: string;
  fagsakId?: number;
  ytelseType: 'FORELDREPENGER' | 'SVANGERSKAPSPENGER' | 'ENGANGSSTØNAD';
  lovVersjon:
    | 'FORELDREPENGER_2019_01_01'
    | 'FORELDREPENGER_FRI_2021_10_01'
    | 'FORELDREPENGER_MINSTERETT_2022_08_02'
    | 'FORELDREPENGER_UTJEVNE80_2024_07_01'
    | 'FORELDREPENGER_MINSTERETT_2024_08_02'
    | 'ENGANGSSTØNAD_2019_01_01'
    | 'ENGANGSSTØNAD_MEDLEM_2024_10_01'
    | 'SVANGERSKAPSPENGER_2019_01_01';
  behandlingUuid: string;
  forrigeBehandlingUuid?: string;
  revurderingÅrsak?:
    | 'MANUELL'
    | 'UTTAKMANUELL'
    | 'KLAGE'
    | 'ETTERKONTROLL'
    | 'SØKNAD'
    | 'INNTEKTSMELDING'
    | 'FOLKEREGISTER'
    | 'PLEIEPENGER'
    | 'NYSAK'
    | 'ANNENFORELDER'
    | 'REGULERING'
    | 'PRAKSIS_UTSETTELSE';
  søknadsdato: string;
  skjæringstidspunkt?: string;
  vedtakstidspunkt: string;
  vedtaksresultat: 'INNVILGET' | 'AVSLAG' | 'OPPHØR';
  vilkårIkkeOppfylt?:
    | 'MEDLEMSKAP'
    | 'SØKNADSFRIST'
    | 'OPPLYSNINGSPLIKT'
    | 'SVANGERSKAPSPENGER'
    | 'ENGANGSSTØNAD'
    | 'FORELDREPENGER_GENERELL'
    | 'FORELDREPENGER_OPPTJENING'
    | 'FORELDREPENGER_BEREGNING'
    | 'FORELDREPENGER_UTTAK';
  søker: string;
  saksrolle: 'MOR' | 'FAR' | 'MEDMOR' | 'UKJENT';
  utlandsTilsnitt: 'NASJONAL' | 'EØS_BOSATT_NORGE' | 'BOSATT_UTLAND';
  annenForelder?: AnnenForelder;
  familieHendelse?: FamilieHendelse;
  beregning?: Beregning;
  utbetalingsreferanse: string;
  behandlingId?: number;
  engangsstønadInnvilget?: number;
  foreldrepengerRettigheter?: ForeldrepengerRettigheter;
  uttaksperioder?: Array<StønadsstatistikkUttakPeriode>;
  utbetalingssperioder?: Array<StønadsstatistikkUtbetalingPeriode>;
};

export type Stønadsutvidelse = {
  type: 'FLERBARNSDAGER' | 'PREMATURDAGER';
  dager?: number;
};

export type MigreringTaskInput = {
  fom?: string;
};

export type FpSakInntektsmeldingDto = {
  erAktiv?: boolean;
  stillingsprosent?: number;
  inntektPrMnd?: number;
  refusjonPrMnd?: number;
  arbeidsgiverNavn?: string;
  arbeidsgiverIdent?: string;
  journalpostId?: string;
  mottattTidspunkt?: string;
  startDatoPermisjon?: string;
  bortfalteNaturalytelser?: Array<Naturalytelse>;
  refusjonsperioder?: Array<Refusjon>;
};

export type Naturalytelse = {
  fomDato?: string;
  tomDato?: string;
  beløpPerMnd?: number;
  type?:
    | 'ELEKTRISK_KOMMUNIKASJON'
    | 'AKSJER_GRUNNFONDSBEVIS_TIL_UNDERKURS'
    | 'LOSJI'
    | 'KOST_DØGN'
    | 'BESØKSREISER_HJEMMET_ANNET'
    | 'KOSTBESPARELSE_I_HJEMMET'
    | 'RENTEFORDEL_LÅN'
    | 'BIL'
    | 'KOST_DAGER'
    | 'BOLIG'
    | 'SKATTEPLIKTIG_DEL_FORSIKRINGER'
    | 'FRI_TRANSPORT'
    | 'OPSJONER'
    | 'TILSKUDD_BARNEHAGEPLASS'
    | 'ANNET'
    | 'BEDRIFTSBARNEHAGEPLASS'
    | 'YRKEBIL_TJENESTLIGBEHOV_KILOMETER'
    | 'YRKEBIL_TJENESTLIGBEHOV_LISTEPRIS'
    | 'INNBETALING_TIL_UTENLANDSK_PENSJONSORDNING';
};

export type Aksjonspunkt = {
  type:
    | 'VENT_MANUELT_SATT'
    | 'VENT_FØDSEL'
    | 'VENT_KOMPLETT_SØKNAD'
    | 'VENT_REVURDERING'
    | 'VENT_TIDLIG_SØKNAD'
    | 'VENT_KØET_BEHANDLING'
    | 'VENT_SØKNAD'
    | 'VENT_INNTEKT_RAPPORTERINGSFRIST'
    | 'VENT_SISTE_AAP_ELLER_DP_MELDEKORT'
    | 'VENT_ETTERLYST_INNTEKTSMELDING'
    | 'VENT_ANKE_OVERSENDT_TIL_TRYGDERETTEN'
    | 'VENT_SYKEMELDING'
    | 'VENT_KABAL_KLAGE'
    | 'VENT_PÅ_KABAL_ANKE';
  venteårsak:
    | 'ANKE_VENTER_PÅ_MERKNADER_FRA_BRUKER'
    | 'AVVENT_DOKUMTANSJON'
    | 'AVVENT_FØDSEL'
    | 'AVVENT_RESPONS_REVURDERING'
    | 'BRUKERTILBAKEMELDING'
    | 'UTLAND_TRYGD'
    | 'FOR_TIDLIG_SOKNAD'
    | 'UTVIDET_FRIST'
    | 'INNTEKT_RAPPORTERINGSFRIST'
    | 'MANGLENDE_SYKEMELDING'
    | 'MANGLENDE_INNTEKTSMELDING'
    | 'OPPTJENING_OPPLYSNINGER'
    | 'SISTE_AAP_ELLER_DP_MELDEKORT'
    | 'SENDT_INFORMASJONSBREV'
    | 'ÅPEN_BEHANDLING';
  tidsfrist: string | null;
};

export type Aktivitet = {
  type: 'ORDINÆRT_ARBEID' | 'SELVSTENDIG_NÆRINGSDRIVENDE' | 'FRILANS';
  arbeidsgiver: string | null;
  arbeidsforholdId: string | null;
  arbeidsgiverNavn: string | null;
};

export type ArbeidsforholdUttak = {
  aktivitet: Aktivitet;
  behovFom: string | null;
  risikoFaktorer: string | null;
  tiltak: string | null;
  svpPerioder: Array<SvpPeriode> | null;
  oppholdsperioder: Array<OppholdPeriode> | null;
  ikkeOppfyltÅrsak:
    | 'ARBEIDSGIVER_KAN_TILRETTELEGGE'
    | 'ARBEIDSGIVER_KAN_TILRETTELEGGE_FREM_TIL_3_UKER_FØR_TERMIN'
    | 'ANNET';
};

export type EsSak = {
  saksnummer: string | null;
  aktørId: string | null;
  familieHendelse: FamilieHendelse;
  avsluttet: boolean | null;
  aksjonspunkt: Array<Aksjonspunkt> | null;
  søknader: Array<Søknad> | null;
  vedtak: Array<Vedtak> | null;
};

export type EøsUttaksperiode = {
  fom: string | null;
  tom: string | null;
  trekkdager: number | null;
  konto: 'FORELDREPENGER' | 'MØDREKVOTE' | 'FEDREKVOTE' | 'FELLESPERIODE' | 'FORELDREPENGER_FØR_FØDSEL';
};

export type FpSak = {
  saksnummer: string | null;
  aktørId: string | null;
  familieHendelse: FamilieHendelse;
  avsluttet: boolean | null;
  vedtak: Array<Vedtak> | null;
  oppgittAnnenPart: string | null;
  aksjonspunkt: Array<Aksjonspunkt> | null;
  søknader: Array<Søknad> | null;
  brukerRolle: 'MOR' | 'FAR' | 'MEDMOR' | 'UKJENT';
  fødteBarn: Array<string> | null;
  rettigheter: Rettigheter;
  ønskerJustertUttakVedFødsel: boolean | null;
};

export type OppholdPeriode = {
  fom: string | null;
  tom: string | null;
  årsak: 'FERIE' | 'SYKEPENGER';
  kilde: 'SØKNAD' | 'SAKSBEHANDLER' | 'INNTEKTSMELDING';
};

export type Resultat = {
  type: 'INNVILGET' | 'INNVILGET_GRADERING' | 'AVSLÅTT';
  årsak:
    | 'ANNET'
    | 'AVSLAG_HULL_I_UTTAKSPLAN'
    | 'AVSLAG_UTSETTELSE_TILBAKE_I_TID'
    | 'INNVILGET_UTTAK_AVSLÅTT_GRADERING_TILBAKE_I_TID'
    | 'AVSLAG_FRATREKK_PLEIEPENGER';
  aktiviteter: Array<UttaksperiodeAktivitet> | null;
  trekkerMinsterett: boolean | null;
};

export type Rettigheter = {
  aleneomsorg: boolean | null;
  morUføretrygd: boolean | null;
  annenForelderTilsvarendeRettEØS: boolean | null;
};

export type Sak = (
  | ({
      type: 'engangsstønad';
    } & EsSak)
  | ({
      type: 'foreldrepenger';
    } & FpSak)
  | ({
      type: 'svangerskapspenger';
    } & SvpSak)
) & {
  type: string;
};

export type SvpPeriode = {
  fom: string | null;
  tom: string | null;
  tilretteleggingType: 'HEL' | 'DELVIS' | 'INGEN';
  arbeidstidprosent: number | null;
  utbetalingsgrad: number | null;
  resultatÅrsak:
    | 'INNVILGET'
    | 'AVSLAG_SØKNADSFRIST'
    | 'AVSLAG_ANNET'
    | 'AVSLAG_INNGANGSVILKÅR'
    | 'OPPHØR_OVERGANG_FORELDREPENGER'
    | 'OPPHØR_FØDSEL'
    | 'OPPHØR_TIDSPERIODE_FØR_TERMIN'
    | 'OPPHØR_OPPHOLD_I_YTELSEN'
    | 'OPPHØR_ANNET';
};

export type SvpSak = {
  saksnummer: string | null;
  aktørId: string | null;
  familieHendelse: FamilieHendelse;
  avsluttet: boolean | null;
  aksjonspunkt: Array<Aksjonspunkt> | null;
  søknader: Array<Søknad> | null;
  vedtak: Array<Vedtak> | null;
};

export type Tilrettelegging = {
  aktivitet: Aktivitet;
  behovFom: string | null;
  risikoFaktorer: string | null;
  tiltak: string | null;
  perioder: Array<Periode> | null;
  oppholdsperioder: Array<OppholdPeriode> | null;
};

export type UttakAktivitet = {
  type: 'ORDINÆRT_ARBEID' | 'SELVSTENDIG_NÆRINGSDRIVENDE' | 'FRILANS' | 'ANNET';
  arbeidsgiver: string | null;
  arbeidsforholdId: string | null;
};

export type Uttaksperiode = {
  fom: string | null;
  tom: string | null;
  utsettelseÅrsak:
    | 'HV_ØVELSE'
    | 'ARBEID'
    | 'LOVBESTEMT_FERIE'
    | 'SØKER_SYKDOM'
    | 'SØKER_INNLAGT'
    | 'BARN_INNLAGT'
    | 'NAV_TILTAK'
    | 'FRI';
  oppholdÅrsak:
    | 'MØDREKVOTE_ANNEN_FORELDER'
    | 'FEDREKVOTE_ANNEN_FORELDER'
    | 'FELLESPERIODE_ANNEN_FORELDER'
    | 'FORELDREPENGER_ANNEN_FORELDER';
  overføringÅrsak:
    | 'INSTITUSJONSOPPHOLD_ANNEN_FORELDER'
    | 'SYKDOM_ANNEN_FORELDER'
    | 'IKKE_RETT_ANNEN_FORELDER'
    | 'ALENEOMSORG';
  samtidigUttak: number | null;
  flerbarnsdager: boolean | null;
  morsAktivitet:
    | 'ARBEID'
    | 'UTDANNING'
    | 'KVALPROG'
    | 'INTROPROG'
    | 'TRENGER_HJELP'
    | 'INNLAGT'
    | 'ARBEID_OG_UTDANNING'
    | 'UFØRE'
    | 'IKKE_OPPGITT';
  resultat: Resultat;
};

export type UttaksperiodeAktivitet = {
  aktivitet: UttakAktivitet;
  konto: 'FORELDREPENGER' | 'MØDREKVOTE' | 'FEDREKVOTE' | 'FELLESPERIODE' | 'FORELDREPENGER_FØR_FØDSEL';
  trekkdager: number | null;
  arbeidstidsprosent: number | null;
};

export type Vedtak = {
  behandlingstema: InfotrygdKode;
  identdato: string | null;
  opphørFom: string | null;
  opprinneligIdentdato: string | null;
  periode: Periode;
  registrert: string | null;
  saksbehandlerId: string | null;
  arbeidskategori: InfotrygdKode;
  arbeidsforhold: Array<Arbeidsforhold> | null;
  dekningsgrad: number | null;
  fødselsdatoBarn: string | null;
  gradering: number | null;
  utbetalinger: Array<Utbetaling> | null;
};

export type EnkelRespons = {
  status?: string;
};

export type AdressebeskyttelseHendelseDto = {
  id: string | null;
  endringstype: 'OPPRETTET' | 'KORRIGERT' | 'ANNULLERT' | 'OPPHOERT';
  aktørId: Array<AktørIdDto>;
  avsenderSystem: string | null;
  hendelsetype: string | null;
  alleAktørId: Array<string> | null;
};

export type DødHendelseDto = {
  id: string | null;
  endringstype: 'OPPRETTET' | 'KORRIGERT' | 'ANNULLERT' | 'OPPHOERT';
  aktørId: Array<AktørIdDto>;
  dødsdato: string | null;
  avsenderSystem: string | null;
  hendelsetype: string | null;
  alleAktørId: Array<string> | null;
};

export type DødfødselHendelseDto = {
  id: string | null;
  endringstype: 'OPPRETTET' | 'KORRIGERT' | 'ANNULLERT' | 'OPPHOERT';
  aktørId: Array<AktørIdDto>;
  dødfødselsdato: string | null;
  avsenderSystem: string | null;
  hendelsetype: string | null;
  alleAktørId: Array<string> | null;
};

export type FødselHendelseDto = {
  id: string | null;
  endringstype: 'OPPRETTET' | 'KORRIGERT' | 'ANNULLERT' | 'OPPHOERT';
  aktørIdForeldre: Array<AktørIdDto>;
  fødselsdato: string | null;
  avsenderSystem: string | null;
  hendelsetype: string | null;
  alleAktørId: Array<string> | null;
};

export type HendelseDto = (
  | ({
      '@type': 'ADRESSEBESKYTTELSE';
    } & AdressebeskyttelseHendelseDto)
  | ({
      '@type': 'DØD';
    } & DødHendelseDto)
  | ({
      '@type': 'DØDFØDSEL';
    } & DødfødselHendelseDto)
  | ({
      '@type': 'FØDSEL';
    } & FødselHendelseDto)
  | ({
      '@type': 'UTFLYTTING';
    } & UtflyttingHendelseDto)
) & {
  id: string;
  endringstype: 'OPPRETTET' | 'KORRIGERT' | 'ANNULLERT' | 'OPPHOERT';
  avsenderSystem?: string;
  hendelsetype?: string;
  alleAktørId?: Array<string>;
};

export type HendelseWrapperDto = {
  hendelse: HendelseDto;
  alleAktørId?: Array<string>;
};

export type UtflyttingHendelseDto = {
  id: string | null;
  endringstype: 'OPPRETTET' | 'KORRIGERT' | 'ANNULLERT' | 'OPPHOERT';
  aktørId: Array<AktørIdDto>;
  utflyttingsdato: string | null;
  avsenderSystem: string | null;
  hendelsetype: string | null;
  alleAktørId: Array<string> | null;
};

export type Arbeidsforhold = {
  arbeidsgiverOrgnr: string | null;
  inntekt: number | null;
  inntektsperiode: InfotrygdKode;
  refusjon: boolean | null;
  refusjonTom: string | null;
  identdato: string | null;
  opprinneligIdentdato: string | null;
};

export type InfotrygdKode = {
  kode: string | null;
  termnavn: string | null;
};

export type InfotrygdVedtakDto = {
  saker: Array<SakDto> | null;
  vedtakKjeder: Array<VedtakKjede> | null;
};

export type SakDto = {
  resultat: string | null;
  registrert: string | null;
  sakId: string | null;
  type: string | null;
  vedtatt: string | null;
  valg: string | null;
  undervalg: string | null;
  nivaa: string | null;
};

export type Utbetaling = {
  periode: Periode;
  utbetalingsgrad: number | null;
  arbeidsgiverOrgnr: string | null;
  erRefusjon: boolean | null;
  dagsats: number | null;
  identdato: string | null;
  opprinneligIdentdato: string | null;
};

export type VedtakKjede = {
  opprinneligIdentdato: string | null;
  behandlingstema: InfotrygdKode;
  vedtak: Array<Vedtak> | null;
};

export type LosAksjonspunktDto = {
  definisjon: string | null;
  status: 'AVBRUTT' | 'OPPRETTET' | 'UTFØRT';
  fristTid: string | null;
};

export type LosBehandlingDto = {
  behandlingUuid: string | null;
  kildesystem: 'FPSAK' | 'FPTILBAKE';
  saksnummer: string | null;
  ytelse: 'ENGANGSTØNAD' | 'FORELDREPENGER' | 'SVANGERSKAPSPENGER';
  aktørId: string | null;
  behandlingstype:
    | 'FØRSTEGANGS'
    | 'REVURDERING'
    | 'TILBAKEBETALING'
    | 'TILBAKEBETALING_REVURDERING'
    | 'KLAGE'
    | 'ANKE'
    | 'INNSYN';
  behandlingsstatus: 'OPPRETTET' | 'UTREDES' | 'FATTER_VEDTAK' | 'IVERKSETTER_VEDTAK' | 'AVSLUTTET';
  opprettetTidspunkt: string | null;
  behandlendeEnhetId: string | null;
  behandlingsfrist: string | null;
  ansvarligSaksbehandlerIdent: string | null;
  aksjonspunkt: Array<LosAksjonspunktDto> | null;
  behandlingsårsaker: Array<
    | 'SØKNAD'
    | 'INNTEKTSMELDING'
    | 'FOLKEREGISTER'
    | 'PLEIEPENGER'
    | 'ETTERKONTROLL'
    | 'MANUELL'
    | 'BERØRT'
    | 'UTSATT_START'
    | 'OPPHØR_NY_SAK'
    | 'REGULERING'
    | 'KLAGE_OMGJØRING'
    | 'KLAGE_TILBAKEBETALING'
    | 'ANNET'
  > | null;
  faresignaler: boolean | null;
  refusjonskrav: boolean | null;
  saksegenskaper: Array<string> | null;
  foreldrepengerDto: LosForeldrepengerDto;
  behandlingsegenskaper: Array<string> | null;
  tilbakeDto: LosTilbakeDto;
};

export type LosForeldrepengerDto = {
  førsteUttakDato: string | null;
};

export type LosTilbakeDto = {
  feilutbetaltBeløp: number | null;
  førsteFeilutbetalingDato: string | null;
};

export type LosFagsakEgenskaperDto = {
  saksegenskaper: Array<string> | null;
  fagsakMarkering: string | null;
};

export type NøkkeltallBehandlingVentefristUtløper = {
  behandlendeEnhet?: string;
  fagsakYtelseType?: 'ES' | 'FP' | 'SVP' | '-';
  behandlingFrist?: string;
  antall?: number;
};

export type NøkkeltallBehandlingFørsteUttak = {
  behandlendeEnhet?: string;
  behandlingType?: 'BT-002' | 'BT-003' | 'BT-004' | 'BT-008' | 'BT-006' | 'BT-007' | 'BT-009' | '-';
  behandlingVenteStatus?: 'PÅ_VENT' | 'IKKE_PÅ_VENT';
  førsteUttakMåned?: string;
  antall?: number;
};

export type InitLinksDto = {
  innloggetBruker?: InnloggetNavAnsattDto;
  behandlendeEnheter?: Array<OrganisasjonsEnhet>;
  links?: Array<ResourceLink>;
  sakLinks?: Array<ResourceLink>;
};

export type InnloggetNavAnsattDto = {
  brukernavn?: string;
  navn?: string;
  kanSaksbehandle?: boolean;
  kanVeilede?: boolean;
  kanOverstyre?: boolean;
  kanOppgavestyre?: boolean;
  kanBehandleKode6?: boolean;
  funksjonellTid?: string;
};

export type OrganisasjonsEnhet = {
  enhetId?: string;
  enhetNavn?: string;
};

export type GenererVedtaksXmlDto = {
  fom: string;
  tom: string;
  maksAntall: number;
};

export type FeedDto = {
  tittel?: string;
  inneholderFlereElementer?: boolean;
  elementer?: Array<FeedElement>;
};

export type FeedElement = {
  type?: string;
  sekvensId?: number;
  innhold?: {
    [key: string]: unknown;
  };
  metadata?: {
    [key: string]: unknown;
  };
};

export type SekvensIdParam = {
  [key: string]: unknown;
};

export type MaxAntallParam = {
  [key: string]: unknown;
};

export type HendelseTypeParam = {
  [key: string]: unknown;
};

export type AktørParam = {
  [key: string]: unknown;
};

export type SakOgPersonerDto = {
  saksnummer?: string;
  saksident?: string;
  identer?: Array<string>;
};

export type ProsessTaskDataDto = {
  id: number;
  taskType: string;
  nesteKjøringEtter?: string;
  gruppe: string;
  sekvens: string;
  status: string;
  sistKjørt?: string;
  sisteFeilKode?: string;
  taskParametre?: {
    [key: string]: string;
  };
};

export type ProsessTaskOpprettInputDto = {
  taskType: string;
  taskParametre: {
    [key: string]: string;
  };
};

export type FeiletProsessTaskDataDto = {
  id: number | null;
  taskType: string | null;
  nesteKjøringEtter: string | null;
  gruppe: string | null;
  sekvens: string | null;
  status: string | null;
  sistKjørt: string | null;
  sisteFeilKode: string | null;
  taskParametre: {
    [key: string]: string;
  } | null;
  sisteKjøringServerProsess: string | null;
  sisteFeilTekst: string | null;
  feiledeForsøk: number | null;
};

/**
 * Resultatet av asynkron-restart av en eksisterende prosesstask
 */
export type ProsessTaskRestartResultatDto = {
  prosessTaskId: number;
  /**
   * Nåværende status (KLAR)
   */
  prosessTaskStatus: string;
  /**
   * Kjøretidspunkt for restart av prosessen
   */
  nesteKjoeretidspunkt: string;
};

/**
 * Resultatet av asynkron-restart av feilede prosesstasks
 */
export type ProsessTaskRetryAllResultatDto = {
  /**
   * Prosesstasks som restartes
   */
  prosessTaskIds?: Array<number>;
};

export type SokeFilterDto = {
  tekst: string;
  sisteKjoeretidspunktFraOgMed?: string;
  sisteKjoeretidspunktTilOgMed?: string;
};

export type CallbackData = {
  /**
   * callbackDto
   */
  body?: CallbackDto;
  path?: never;
  query?: never;
  url: '/api/registerdata/iay/callback';
};

export type CallbackResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type AutoRunBatchData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/api/batch/autorun';
};

export type AutoRunBatchErrors = {
  /**
   * Feilet pga ukjent feil
   */
  500: unknown;
};

export type AutoRunBatchResponses = {
  /**
   * Starter batch-scheduler
   */
  200: unknown;
};

export type HentBehandlingResultatForBackendData = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/behandling/backend-root';
};

export type HentBehandlingResultatForBackendResponses = {
  /**
   * Returnerer behandling
   */
  200: BehandlingDto;
};

export type HentBehandlingResultatForBackendResponse =
  HentBehandlingResultatForBackendResponses[keyof HentBehandlingResultatForBackendResponses];

export type BehandlingErHasteSakData = {
  /**
   * BehandlingId for behandling som merkes som Haster
   */
  body?: ReåpneBehandlingDto;
  path?: never;
  query?: never;
  url: '/api/behandlinger/haster';
};

export type BehandlingErHasteSakResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type ByttBehandlendeEnhetData = {
  /**
   * Ny enhet som skal byttes
   */
  body?: ByttBehandlendeEnhetDto;
  path?: never;
  query?: never;
  url: '/api/behandlinger/bytt-enhet';
};

export type ByttBehandlendeEnhetResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type EndreFristForBehandlingPaVentData = {
  /**
   * Frist for behandling på vent
   */
  body?: SettBehandlingPaVentDto;
  path?: never;
  query?: never;
  url: '/api/behandlinger/endre-pa-vent';
};

export type EndreFristForBehandlingPaVentResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type GjenopptaBehandlingData = {
  /**
   * BehandlingId for behandling som skal gjenopptas
   */
  body?: GjenopptaBehandlingDto;
  path?: never;
  query?: never;
  url: '/api/behandlinger/gjenoppta';
};

export type GjenopptaBehandlingResponses = {
  /**
   * Gjenoppta behandling påstartet i bakgrunnen
   */
  200: unknown;
};

export type HenleggBehandlingData = {
  /**
   * Henleggelsesårsak
   */
  body?: HenleggBehandlingDto;
  path?: never;
  query?: never;
  url: '/api/behandlinger/henlegg';
};

export type HenleggBehandlingResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type HentAnnenPartsGjeldendeBehandlingData = {
  body?: never;
  path?: never;
  query: {
    /**
     * Saksnummer må være et eksisterende saksnummer
     */
    saksnummer: SaksnummerDto;
  };
  url: '/api/behandlinger/annen-part-behandling';
};

export type HentAnnenPartsGjeldendeBehandlingResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type HentBehandlingResultatData = {
  body?: never;
  path?: never;
  query: {
    behandlingId: BehandlingIdDto;
  };
  url: '/api/behandlinger';
};

export type HentBehandlingResultatResponses = {
  /**
   * Returnerer Behandling
   */
  200: UtvidetBehandlingDto;
};

export type HentBehandlingResultatResponse = HentBehandlingResultatResponses[keyof HentBehandlingResultatResponses];

export type HentBehandlingData = {
  body: BehandlingIdDto;
  path?: never;
  query?: never;
  url: '/api/behandlinger';
};

export type HentBehandlingResponses = {
  /**
   * Hent behandling initiert, Returnerer link til å polle på fremdrift
   */
  202: unknown;
};

export type OpprettNyBehandlingData = {
  /**
   * Saksnummer og flagg om det er ny behandling etter klage
   */
  body?: NyBehandlingDto;
  path?: never;
  query?: never;
  url: '/api/behandlinger';
};

export type OpprettNyBehandlingResponses = {
  /**
   * Opprett ny behandling pågår
   */
  202: unknown;
};

export type HentBehandlingerData = {
  body?: never;
  path?: never;
  query: {
    /**
     * Saksnummer må være et eksisterende saksnummer
     */
    saksnummer: SaksnummerDto;
  };
  url: '/api/behandlinger/alle';
};

export type HentBehandlingerResponses = {
  /**
   * default response
   */
  default: Array<BehandlingDto>;
};

export type HentBehandlingerResponse = HentBehandlingerResponses[keyof HentBehandlingerResponses];

export type SettBehandlingPaVentData = {
  /**
   * Frist for behandling på vent
   */
  body?: SettBehandlingPaVentDto;
  path?: never;
  query?: never;
  url: '/api/behandlinger/sett-pa-vent';
};

export type SettBehandlingPaVentResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type ÅpneBehandlingForEndringerData = {
  /**
   * BehandlingId for behandling som skal åpnes for endringer
   */
  body?: ReåpneBehandlingDto;
  path?: never;
  query?: never;
  url: '/api/behandlinger/opne-for-endringer';
};

export type ÅpneBehandlingForEndringerResponses = {
  /**
   * Åpning av behandling for endringer påstartet i bakgrunnen
   */
  200: unknown;
};

export type HentBehandlingMidlertidigStatusData = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
    gruppe?: ProsessTaskGruppeIdDto;
  };
  url: '/api/behandling/status';
};

export type HentBehandlingMidlertidigStatusErrors = {
  /**
   * ProsessTasks har feilet
   */
  418: AsyncPollingStatus;
};

export type HentBehandlingMidlertidigStatusError =
  HentBehandlingMidlertidigStatusErrors[keyof HentBehandlingMidlertidigStatusErrors];

export type HentBehandlingMidlertidigStatusResponses = {
  /**
   * Returnerer Status
   */
  200: AsyncPollingStatus;
};

export type HentBehandlingMidlertidigStatusResponse =
  HentBehandlingMidlertidigStatusResponses[keyof HentBehandlingMidlertidigStatusResponses];

export type HentBehandlingResultat1Data = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/behandling';
};

export type HentBehandlingResultat1Responses = {
  /**
   * Returnerer Behandling
   */
  200: UtvidetBehandlingDto;
};

export type HentBehandlingResultat1Response = HentBehandlingResultat1Responses[keyof HentBehandlingResultat1Responses];

export type BekreftData = {
  /**
   * Liste over aksjonspunkt som skal bekreftes, inklusiv data som trengs for å løse de.
   */
  body?: BekreftedeAksjonspunkterDto;
  path?: never;
  query?: never;
  url: '/api/behandling/aksjonspunkt';
};

export type BekreftResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type BesluttData = {
  /**
   * Liste over aksjonspunkt som skal bekreftes, inklusiv data som trengs for å løse de.
   */
  body?: BekreftedeAksjonspunkterDto;
  path?: never;
  query?: never;
  url: '/api/behandling/aksjonspunkt/beslutt';
};

export type BesluttResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type GetAksjonspunkterData = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/behandling/aksjonspunkt-v2';
};

export type GetAksjonspunkterResponses = {
  200: Array<AksjonspunktDto>;
};

export type GetAksjonspunkterResponse = GetAksjonspunkterResponses[keyof GetAksjonspunkterResponses];

export type OverstyrData = {
  /**
   * Liste over overstyring aksjonspunkter.
   */
  body?: OverstyrteAksjonspunkterDto;
  path?: never;
  query?: never;
  url: '/api/behandling/aksjonspunkt/overstyr';
};

export type OverstyrResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type GetAnkeVurderingData = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/behandling/anke/anke-vurdering-v2';
};

export type GetAnkeVurderingResponses = {
  /**
   * Returnerer vurdering av en anke fra ulike instanser
   */
  200: AnkebehandlingDto;
};

export type GetAnkeVurderingResponse = GetAnkeVurderingResponses[keyof GetAnkeVurderingResponses];

export type GetAlleInntektsmeldingerData = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/behandling/arbeid-inntektsmelding/alle-inntektsmeldinger';
};

export type GetAlleInntektsmeldingerResponses = {
  200: InntektsmeldingDto;
};

export type GetAlleInntektsmeldingerResponse =
  GetAlleInntektsmeldingerResponses[keyof GetAlleInntektsmeldingerResponses];

export type GetArbeidOgInntektsmeldingerData = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/behandling/arbeid-inntektsmelding';
};

export type GetArbeidOgInntektsmeldingerResponses = {
  /**
   * Returnerer ArbeidOgInntektsmeldingDto, null hvis ikke eksisterer (GUI støtter ikke NOT_FOUND p.t.)
   */
  200: ArbeidOgInntektsmeldingDto;
};

export type GetArbeidOgInntektsmeldingerResponse =
  GetArbeidOgInntektsmeldingerResponses[keyof GetArbeidOgInntektsmeldingerResponses];

export type LagreManuelleArbeidsforholdData = {
  /**
   * Registrering av arbeidsforhold.
   */
  body: ManueltArbeidsforholdDto;
  path?: never;
  query?: never;
  url: '/api/behandling/arbeid-inntektsmelding/lagre-arbeidsforhold';
};

export type LagreManuelleArbeidsforholdResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type LagreVurderingAvManglendeOpplysningerData = {
  /**
   * Vurdering av opplysning som mangler.
   */
  body: ManglendeOpplysningerVurderingDto;
  path?: never;
  query?: never;
  url: '/api/behandling/arbeid-inntektsmelding/lagre-vurdering';
};

export type LagreVurderingAvManglendeOpplysningerResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type ÅpneForEndringData = {
  /**
   * BehandlingUID og versjon på behadlingen.
   */
  body: BehandlingIdVersjonDto;
  path?: never;
  query?: never;
  url: '/api/behandling/arbeid-inntektsmelding/apne-for-ny-vurdering';
};

export type ÅpneForEndringResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type GetAlleInntektsmeldinger1Data = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/behandling/inntektsmeldinger-alle';
};

export type GetAlleInntektsmeldinger1Responses = {
  /**
   * Returnerer InntektsmeldingerDto, null hvis ikke eksisterer (GUI støtter ikke NOT_FOUND p.t.)
   */
  200: InntektsmeldingerDto;
};

export type GetAlleInntektsmeldinger1Response =
  GetAlleInntektsmeldinger1Responses[keyof GetAlleInntektsmeldinger1Responses];

export type GetArbeidsgiverOpplysningerData = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/behandling/arbeidsgivere-opplysninger';
};

export type GetArbeidsgiverOpplysningerResponses = {
  /**
   * Returnerer InntektArbeidYtelseDto, null hvis ikke eksisterer (GUI støtter ikke NOT_FOUND p.t.)
   */
  200: ArbeidsgiverOversiktDto;
};

export type GetArbeidsgiverOpplysningerResponse =
  GetArbeidsgiverOpplysningerResponses[keyof GetArbeidsgiverOpplysningerResponses];

export type GetInntektArbeidYtelserData = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/behandling/inntekt-arbeid-ytelse';
};

export type GetInntektArbeidYtelserResponses = {
  /**
   * Returnerer InntektArbeidYtelseDto, null hvis ikke eksisterer (GUI støtter ikke NOT_FOUND p.t.)
   */
  200: IayYtelseDto;
};

export type GetInntektArbeidYtelserResponse = GetInntektArbeidYtelserResponses[keyof GetInntektArbeidYtelserResponses];

export type HentBeregningsgrunnlagData = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/behandling/beregningsgrunnlag';
};

export type HentBeregningsgrunnlagResponses = {
  /**
   * default response
   */
  default: BeregningsgrunnlagDto;
};

export type HentBeregningsgrunnlagResponse = HentBeregningsgrunnlagResponses[keyof HentBeregningsgrunnlagResponses];

export type HentBeregningsresultatDagytelseData = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/behandling/beregningsresultat/dagytelse';
};

export type HentBeregningsresultatDagytelseResponses = {
  /**
   * default response
   */
  default: BeregningsresultatMedUttaksplanDto;
};

export type HentBeregningsresultatDagytelseResponse =
  HentBeregningsresultatDagytelseResponses[keyof HentBeregningsresultatDagytelseResponses];

export type HentBeregningsresultatEngangsstønadData = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/behandling/beregningsresultat/engangsstonad';
};

export type HentBeregningsresultatEngangsstønadResponses = {
  /**
   * default response
   */
  default: BeregningsresultatEngangsstønadDto;
};

export type HentBeregningsresultatEngangsstønadResponse =
  HentBeregningsresultatEngangsstønadResponses[keyof HentBeregningsresultatEngangsstønadResponses];

export type HentFeriepengerData = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/behandling/feriepengegrunnlag';
};

export type HentFeriepengerResponses = {
  /**
   * default response
   */
  default: FeriepengegrunnlagDto;
};

export type HentFeriepengerResponse = HentFeriepengerResponses[keyof HentFeriepengerResponses];

export type HentFødselData = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/behandling/fodsel/fakta-fodsel';
};

export type HentFødselResponses = {
  /**
   * Returnerer Fakta om fødsel og termin)
   */
  200: FødselDto;
};

export type HentFødselResponse = HentFødselResponses[keyof HentFødselResponses];

export type HentAlleInnslagData = {
  body?: never;
  path?: never;
  query: {
    /**
     * Saksnummer må være et eksisterende saksnummer
     */
    saksnummer: SaksnummerDto;
  };
  url: '/api/historikk';
};

export type HentAlleInnslagResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type GetInnsynsbehandlingData = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/behandling/innsyn';
};

export type GetInnsynsbehandlingResponses = {
  /**
   * Returnerer innsynsbehandling eller ingenting hvis uuid ikke peker på en innsynsbehandling
   */
  200: InnsynsbehandlingDto;
};

export type GetInnsynsbehandlingResponse = GetInnsynsbehandlingResponses[keyof GetInnsynsbehandlingResponses];

export type GetKlageVurderingData = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/behandling/klage-v2';
};

export type GetKlageVurderingResponses = {
  /**
   * Returnerer vurdering av en klage fra ulike instanser
   */
  200: KlagebehandlingDto;
};

export type GetKlageVurderingResponse = GetKlageVurderingResponses[keyof GetKlageVurderingResponses];

export type GetMottattKlagedokumentData = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/behandling/klage/mottatt-klagedokument-v2';
};

export type GetMottattKlagedokumentResponses = {
  /**
   * Returnerer mottatt klagedokument
   */
  200: MottattKlagedokumentDto;
};

export type GetMottattKlagedokumentResponse = GetMottattKlagedokumentResponses[keyof GetMottattKlagedokumentResponses];

export type MellomlagreAvvistFormKravData = {
  /**
   * KlageVurderingAdapter tilpasset til mellomlagring.
   */
  body?: KlageFormKravAksjonspunktMellomlagringDto;
  path?: never;
  query?: never;
  url: '/api/behandling/klage/mellomlagre-formkrav-klage';
};

export type MellomlagreAvvistFormKravResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type MellomlagreKlageData = {
  /**
   * KlageVurderingAdapter tilpasset til mellomlagring.
   */
  body?: KlageVurderingResultatAksjonspunktMellomlagringDto;
  path?: never;
  query?: never;
  url: '/api/behandling/klage/mellomlagre-klage';
};

export type MellomlagreKlageResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type HentOppdragData = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/behandling/oppdrag/oppdraginfo';
};

export type HentOppdragResponses = {
  /**
   * default response
   */
  default: OppdragDto;
};

export type HentOppdragResponse = HentOppdragResponses[keyof HentOppdragResponses];

export type GetDokStatusData = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/behandling/opptjening/utlanddokstatus';
};

export type GetDokStatusResponses = {
  /**
   * Om dok skal hentes eller ikke
   */
  200: OpptjeningIUtlandDokStatusDto;
};

export type GetDokStatusResponse = GetDokStatusResponses[keyof GetDokStatusResponses];

export type GetOpptjeningData = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/behandling/opptjening';
};

export type GetOpptjeningResponses = {
  /**
   * Returnerer Opptjening, null hvis ikke eksisterer (GUI støtter ikke NOT_FOUND p.t.)
   */
  200: OpptjeningDto;
};

export type GetOpptjeningResponse = GetOpptjeningResponses[keyof GetOpptjeningResponses];

export type GetPersonopplysningerTilbakeData = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/behandling/person/personopplysninger-tilbake';
};

export type GetPersonopplysningerTilbakeResponses = {
  /**
   * Returnerer Personopplysninger, null hvis ikke finnes (GUI støtter ikke NOT_FOUND p.t.)
   */
  200: PersonopplysningTilbakeDto;
};

export type GetPersonopplysningerTilbakeResponse =
  GetPersonopplysningerTilbakeResponses[keyof GetPersonopplysningerTilbakeResponses];

export type GetPersonoversiktData = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/behandling/person/personoversikt';
};

export type GetPersonoversiktResponses = {
  /**
   * Returnerer Personopplysninger, null hvis ikke finnes (GUI støtter ikke NOT_FOUND p.t.)
   */
  200: PersonoversiktDto;
};

export type GetPersonoversiktResponse = GetPersonoversiktResponses[keyof GetPersonoversiktResponses];

export type HentMedlemskapV3Data = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/behandling/person/medlemskap-v3';
};

export type HentMedlemskapV3Responses = {
  /**
   * Returnerer Medlemskap, null hvis ikke finnes (GUI støtter ikke NOT_FOUND p.t.)
   */
  200: MedlemskapDto;
};

export type HentMedlemskapV3Response = HentMedlemskapV3Responses[keyof HentMedlemskapV3Responses];

export type TilretteleggingData = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/behandling/svangerskapspenger/tilrettelegging-v2';
};

export type TilretteleggingResponses = {
  /**
   * default response
   */
  default: SvpTilretteleggingDto;
};

export type TilretteleggingResponse = TilretteleggingResponses[keyof TilretteleggingResponses];

export type GetSøknadData = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/behandling/soknad';
};

export type GetSøknadResponses = {
  /**
   * Returnerer Søknad, null hvis ikke eksisterer (GUI støtter ikke NOT_FOUND p.t.)
   */
  200: SoknadDto;
};

export type GetSøknadResponse = GetSøknadResponses[keyof GetSøknadResponses];

export type GetSøknadBackendData = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/behandling/soknad-backend';
};

export type GetSøknadBackendResponses = {
  /**
   * RReturnerer forenklet søknad til andre applikasjoner
   */
  200: SoknadDto;
};

export type GetSøknadBackendResponse = GetSøknadBackendResponses[keyof GetSøknadBackendResponses];

export type HentSimuleringResultatData = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/behandling/tilbakekreving/simulering-resultat';
};

export type HentSimuleringResultatResponses = {
  /**
   * default response
   */
  default: SimuleringDto;
};

export type HentSimuleringResultatResponse = HentSimuleringResultatResponses[keyof HentSimuleringResultatResponses];

export type HentTilbakekrevingValgData = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/behandling/tilbakekreving/valg';
};

export type HentTilbakekrevingValgResponses = {
  /**
   * default response
   */
  default: TilbakekrevingValgDto;
};

export type HentTilbakekrevingValgResponse = HentTilbakekrevingValgResponses[keyof HentTilbakekrevingValgResponses];

export type HentVarseltekstData = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/behandling/tilbakekreving/varseltekst';
};

export type HentVarseltekstResponses = {
  /**
   * default response
   */
  default: VarseltekstDto;
};

export type HentVarseltekstResponse = HentVarseltekstResponses[keyof HentVarseltekstResponses];

export type GetStonadskontoerData = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/behandling/uttak/stonadskontoer';
};

export type GetStonadskontoerResponses = {
  /**
   * default response
   */
  default: SaldoerDto;
};

export type GetStonadskontoerResponse = GetStonadskontoerResponses[keyof GetStonadskontoerResponses];

export type GetStonadskontoerGittUttaksperioderData = {
  /**
   * Behandling og liste med uttaksperioder
   */
  body: BehandlingMedUttaksperioderDto;
  path?: never;
  query?: never;
  url: '/api/behandling/uttak/stonadskontoerGittUttaksperioder';
};

export type GetStonadskontoerGittUttaksperioderResponses = {
  /**
   * default response
   */
  default: SaldoerDto;
};

export type GetStonadskontoerGittUttaksperioderResponse =
  GetStonadskontoerGittUttaksperioderResponses[keyof GetStonadskontoerGittUttaksperioderResponses];

export type HentAnnenpartPerioderIEøsData = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/behandling/uttak/uttak-eos-annenpart';
};

export type HentAnnenpartPerioderIEøsResponses = {
  /**
   * default response
   */
  default: Array<EøsUttakPeriodeDto>;
};

export type HentAnnenpartPerioderIEøsResponse =
  HentAnnenpartPerioderIEøsResponses[keyof HentAnnenpartPerioderIEøsResponses];

export type HentArbeidsforholdData = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/behandling/uttak/fakta-arbeidsforhold';
};

export type HentArbeidsforholdResponses = {
  /**
   * default response
   */
  default: Array<ArbeidsforholdDto>;
};

export type HentArbeidsforholdResponse = HentArbeidsforholdResponses[keyof HentArbeidsforholdResponses];

export type HentDokumentasjonVurderingBehovData = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/behandling/uttak/vurder-dokumentasjon';
};

export type HentDokumentasjonVurderingBehovResponses = {
  /**
   * default response
   */
  default: Array<DokumentasjonVurderingBehovDto>;
};

export type HentDokumentasjonVurderingBehovResponse =
  HentDokumentasjonVurderingBehovResponses[keyof HentDokumentasjonVurderingBehovResponses];

export type HentFaktaUttakPerioderData = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/behandling/uttak/kontroller-fakta-perioder-v2';
};

export type HentFaktaUttakPerioderResponses = {
  /**
   * default response
   */
  default: Array<FaktaUttakPeriodeDto>;
};

export type HentFaktaUttakPerioderResponse = HentFaktaUttakPerioderResponses[keyof HentFaktaUttakPerioderResponses];

export type HentSvangerskapspengerUttakResultatData = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/behandling/uttak/resultat-svangerskapspenger';
};

export type HentSvangerskapspengerUttakResultatResponses = {
  /**
   * default response
   */
  default: SvangerskapspengerUttakResultatDto;
};

export type HentSvangerskapspengerUttakResultatResponse =
  HentSvangerskapspengerUttakResultatResponses[keyof HentSvangerskapspengerUttakResultatResponses];

export type HentUttakResultatPerioderData = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/behandling/uttak/resultat-perioder';
};

export type HentUttakResultatPerioderResponses = {
  /**
   * default response
   */
  default: UttakResultatPerioderDto;
};

export type HentUttakResultatPerioderResponse =
  HentUttakResultatPerioderResponses[keyof HentUttakResultatPerioderResponses];

export type FerdigstillOppgaveData = {
  /**
   * OppgaveId for oppgave som skal ferdigstilles
   */
  body: string;
  path?: never;
  query?: never;
  url: '/api/behandling/vedtak/ferdigstill-oppgave';
};

export type FerdigstillOppgaveResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type HentOppgaverData = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/behandling/vedtak/hent-oppgaver';
};

export type HentOppgaverResponses = {
  /**
   * default response
   */
  default: Array<OppgaveDto>;
};

export type HentOppgaverResponse = HentOppgaverResponses[keyof HentOppgaverResponses];

export type FjernVergeData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * Behandling uuid
     */
    uuid?: UuidDto;
  };
  url: '/api/verge/fjern';
};

export type FjernVergeResponses = {
  /**
   * Verge/fullmektig fjernet
   */
  200: unknown;
};

export type GetVergeBackendData = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/verge/backend';
};

export type GetVergeBackendResponses = {
  /**
   * Verge hvis eksisterer ellers null
   */
  200: VergeBackendDto;
};

export type GetVergeBackendResponse = GetVergeBackendResponses[keyof GetVergeBackendResponses];

export type HentVergeData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * Behandling uuid
     */
    uuid?: UuidDto;
  };
  url: '/api/verge';
};

export type HentVergeResponses = {
  /**
   * Verge/fullmektig funnet
   */
  200: unknown;
  /**
   * Ingen verge/fullmektig
   */
  204: void;
};

export type HentVergeResponse = HentVergeResponses[keyof HentVergeResponses];

export type OpprettVergeData = {
  body?: VergeDto;
  path?: never;
  query?: {
    /**
     * Behandling uuid
     */
    uuid?: UuidDto;
  };
  url: '/api/verge/opprett';
};

export type OpprettVergeResponses = {
  /**
   * Verge/fullmektig opprettes
   */
  200: unknown;
};

export type GetYtelsefordelingData = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/behandling/ytelsefordeling';
};

export type GetYtelsefordelingResponses = {
  /**
   * Returnerer Ytelsefordeling mellom parter, null hvis ikke eksisterer (GUI støtter ikke NOT_FOUND p.t.)
   */
  200: YtelseFordelingDto;
};

export type GetYtelsefordelingResponse = GetYtelsefordelingResponses[keyof GetYtelsefordelingResponses];

export type HentRettOgOmsorgData = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/behandling/omsorg-og-rett';
};

export type HentRettOgOmsorgResponses = {
  /**
   * Returnerer informasjon fra søknad og registerdata som omhandler brukers og annen parts rett og omsorg i behandlingen
   */
  200: OmsorgOgRettDto;
};

export type HentRettOgOmsorgResponse = HentRettOgOmsorgResponses[keyof HentRettOgOmsorgResponses];

export type BestillDokumentData = {
  /**
   * Inneholder kode til brevmal og data som skal flettes inn i brevet
   */
  body?: BestillDokumentDto;
  path?: never;
  query?: never;
  url: '/api/brev/bestill';
};

export type BestillDokumentResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type ForhåndsvisDokumentData = {
  /**
   * Inneholder kode til brevmal og bestillingsdetaljer.
   */
  body?: ForhåndsvisDokumentDto;
  path?: never;
  query?: never;
  url: '/api/brev/forhandsvis';
};

export type ForhåndsvisDokumentResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type HarSendtVarselOmRevurderingData = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/brev/varsel/revurdering';
};

export type HarSendtVarselOmRevurderingResponses = {
  /**
   * default response
   */
  default: boolean;
};

export type HarSendtVarselOmRevurderingResponse =
  HarSendtVarselOmRevurderingResponses[keyof HarSendtVarselOmRevurderingResponses];

export type HentOverstyringAvBrevMedOrginaltBrevPåHtmlFormatData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * behandlingUUID
     */
    uuid?: UuidDto;
  };
  url: '/api/brev/overstyring';
};

export type HentOverstyringAvBrevMedOrginaltBrevPåHtmlFormatResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type KvitteringV3Data = {
  body?: DokumentKvitteringDto;
  path?: never;
  query?: never;
  url: '/api/brev/kvittering/v3';
};

export type KvitteringV3Responses = {
  /**
   * default response
   */
  default: unknown;
};

export type MellomlagringAvOverstyringData = {
  body: MellomlagreHtmlDto;
  path?: never;
  query?: never;
  url: '/api/brev/overstyring/mellomlagring';
};

export type MellomlagringAvOverstyringResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type RegenererVedtaksXmlData = {
  body?: never;
  path?: never;
  query: {
    behandlingUuid: string;
  };
  url: '/api/datavarehus/regenerer_vedtaksdokument';
};

export type RegenererVedtaksXmlResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type HentAlleDokumenterForSakData = {
  body?: never;
  path?: never;
  query: {
    /**
     * Saksnummer
     */
    saksnummer: SaksnummerDto;
  };
  url: '/api/dokument/hent-dokumentliste';
};

export type HentAlleDokumenterForSakResponses = {
  /**
   * default response
   */
  default: Array<DokumentDto>;
};

export type HentAlleDokumenterForSakResponse =
  HentAlleDokumenterForSakResponses[keyof HentAlleDokumenterForSakResponses];

export type HentAlleMottatteDokumenterForBehandlingData = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/dokument/hent-mottattdokumentliste';
};

export type HentAlleMottatteDokumenterForBehandlingResponses = {
  /**
   * default response
   */
  default: Array<MottattDokumentDto>;
};

export type HentAlleMottatteDokumenterForBehandlingResponse =
  HentAlleMottatteDokumenterForBehandlingResponses[keyof HentAlleMottatteDokumenterForBehandlingResponses];

export type HentDokumentData = {
  body?: never;
  path?: never;
  query: {
    /**
     * Saksnummer
     */
    saksnummer: SaksnummerDto;
    /**
     * Unik identifikator av journalposten (forsendelsenivå)
     */
    journalpostId: JournalpostIdDto;
    /**
     * Unik identifikator av DokumentInfo/Dokumentbeskrivelse (dokumentnivå)
     */
    dokumentId: DokumentIdDto;
  };
  url: '/api/dokument/hent-dokument';
};

export type HentDokumentResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type GetAktoerInfoData = {
  body?: never;
  path?: never;
  query: {
    aktoerId: AktoerIdDto;
  };
  url: '/api/aktoer-info';
};

export type GetAktoerInfoResponses = {
  /**
   * Returnerer basisinformasjon om en aktør og hvilke fagsaker vedkommede har i fpsak.
   */
  200: AktoerInfoDto;
};

export type GetAktoerInfoResponse = GetAktoerInfoResponses[keyof GetAktoerInfoResponses];

export type EndreFagsakMerkingData = {
  /**
   * Saksnummer og markering
   */
  body?: EndreUtlandMarkeringDto;
  path?: never;
  query?: never;
  url: '/api/fagsak/endre-utland';
};

export type EndreFagsakMerkingResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type HentFagsakData = {
  body?: never;
  path?: never;
  query: {
    saksnummer: SaksnummerDto;
  };
  url: '/api/fagsak';
};

export type HentFagsakErrors = {
  /**
   * Fagsak ikke tilgjengelig
   */
  404: unknown;
};

export type HentFagsakResponses = {
  /**
   * Returnerer fagsak
   */
  200: FagsakBackendDto;
};

export type HentFagsakResponse = HentFagsakResponses[keyof HentFagsakResponses];

export type HentFagsakMidlertidigStatusData = {
  body?: never;
  path?: never;
  query: {
    saksnummer: SaksnummerDto;
    gruppe?: ProsessTaskGruppeIdDto;
  };
  url: '/api/fagsak/status';
};

export type HentFagsakMidlertidigStatusErrors = {
  /**
   * ProsessTasks har feilet
   */
  418: AsyncPollingStatus;
};

export type HentFagsakMidlertidigStatusError =
  HentFagsakMidlertidigStatusErrors[keyof HentFagsakMidlertidigStatusErrors];

export type HentFagsakMidlertidigStatusResponses = {
  /**
   * Returnerer Status
   */
  200: AsyncPollingStatus;
};

export type HentFagsakMidlertidigStatusResponse =
  HentFagsakMidlertidigStatusResponses[keyof HentFagsakMidlertidigStatusResponses];

export type HentFullFagsakData = {
  body?: never;
  path?: never;
  query: {
    saksnummer: SaksnummerDto;
  };
  url: '/api/fagsak/full';
};

export type HentFullFagsakErrors = {
  /**
   * Fagsak ikke tilgjengelig
   */
  404: unknown;
};

export type HentFullFagsakResponses = {
  /**
   * Returnerer fagsak
   */
  200: FagsakFullDto;
};

export type HentFullFagsakResponse = HentFullFagsakResponses[keyof HentFullFagsakResponses];

export type LagreFagsakNotatData = {
  /**
   * Saksnummer og nytt notat
   */
  body?: LagreFagsakNotatDto;
  path?: never;
  query?: never;
  url: '/api/fagsak/notat';
};

export type LagreFagsakNotatResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type SokFagsakerData = {
  /**
   * Søkestreng kan være saksnummer, fødselsnummer eller D-nummer.
   */
  body?: SokefeltDto;
  path?: never;
  query?: never;
  url: '/api/fagsak/sok';
};

export type SokFagsakerResponses = {
  /**
   * default response
   */
  default: Array<FagsakSøkDto>;
};

export type SokFagsakerResponse = SokFagsakerResponses[keyof SokFagsakerResponses];

export type GetAvklartFamiliehendelseDtoData = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/behandling/familiehendelse';
};

export type GetAvklartFamiliehendelseDtoResponses = {
  /**
   * Returnerer info om familiehendelse, null hvis ikke eksisterer (GUI støtter ikke NOT_FOUND p.t.)
   */
  200: FamiliehendelseDto;
};

export type GetAvklartFamiliehendelseDtoResponse =
  GetAvklartFamiliehendelseDtoResponses[keyof GetAvklartFamiliehendelseDtoResponses];

export type GetFamiliehendelseGrunnlagDtoData = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/behandling/familiehendelse/v2';
};

export type GetFamiliehendelseGrunnlagDtoResponses = {
  /**
   * Returnerer hele FamilieHendelse grunnlaget
   */
  200: FamilieHendelseGrunnlagDto;
};

export type GetFamiliehendelseGrunnlagDtoResponse =
  GetFamiliehendelseGrunnlagDtoResponses[keyof GetFamiliehendelseGrunnlagDtoResponses];

export type FagsakData = {
  /**
   * Saksnummeret det skal hentes saksinformasjon om
   */
  body?: SaksnummerDto;
  path?: never;
  query?: never;
  url: '/api/fordel/fagsak/informasjon';
};

export type FagsakResponses = {
  /**
   * default response
   */
  default: FagsakInfomasjonDto;
};

export type FagsakResponse = FagsakResponses[keyof FagsakResponses];

export type FinnAlleSakerForBrukerV2Data = {
  /**
   * AktørId
   */
  body?: AktørIdDto;
  path?: never;
  query?: never;
  url: '/api/fordel/finnFagsaker/v2';
};

export type FinnAlleSakerForBrukerV2Responses = {
  /**
   * Liste av alle brukers saker, ellers tom liste
   */
  200: Array<SakInfoV2Dto>;
};

export type FinnAlleSakerForBrukerV2Response =
  FinnAlleSakerForBrukerV2Responses[keyof FinnAlleSakerForBrukerV2Responses];

export type InfoOmSakForInntektsmeldingData = {
  /**
   * AktørId
   */
  body?: SakInntektsmeldingDto;
  path?: never;
  query?: never;
  url: '/api/fordel/infoOmSakInntektsmelding';
};

export type InfoOmSakForInntektsmeldingResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type KnyttSakOgJournalpostData = {
  /**
   * Saksnummer og JournalpostId som skal knyttes sammen
   */
  body?: JournalpostKnyttningDto;
  path?: never;
  query?: never;
  url: '/api/fordel/fagsak/knyttJournalpost';
};

export type KnyttSakOgJournalpostResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type MottaJournalpostData = {
  /**
   * Krever saksnummer, journalpostId og behandlingstemaOffisiellKode
   */
  body?: JournalpostMottakDto;
  path?: never;
  query?: never;
  url: '/api/fordel/journalpost';
};

export type MottaJournalpostResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type OpprettSakData = {
  /**
   * Oppretter fagsak
   */
  body?: OpprettSakDto;
  path?: never;
  query?: never;
  url: '/api/fordel/fagsak/opprett';
};

export type OpprettSakResponses = {
  /**
   * default response
   */
  default: SaksnummerDto;
};

export type OpprettSakResponse = OpprettSakResponses[keyof OpprettSakResponses];

export type OpprettSakv2Data = {
  /**
   * Oppretter fagsak
   */
  body?: OpprettSakV2Dto;
  path?: never;
  query?: never;
  url: '/api/fordel/fagsak/opprett/v2';
};

export type OpprettSakv2Responses = {
  /**
   * default response
   */
  default: SaksnummerDto;
};

export type OpprettSakv2Response = OpprettSakv2Responses[keyof OpprettSakv2Responses];

export type SjekkSakForInntektsmeldingData = {
  /**
   * AktørId
   */
  body?: SakInntektsmeldingDto;
  path?: never;
  query?: never;
  url: '/api/fordel/sakInntektsmelding';
};

export type SjekkSakForInntektsmeldingResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type VurderFagsystemData = {
  /**
   * Krever behandlingstemaOffisiellKode
   */
  body: VurderFagsystemDto;
  path?: never;
  query?: never;
  url: '/api/fordel/vurderFagsystem';
};

export type VurderFagsystemResponses = {
  /**
   * default response
   */
  default: BehandlendeFagsystemDto;
};

export type VurderFagsystemResponse = VurderFagsystemResponses[keyof VurderFagsystemResponses];

export type VurderForKlageinstansData = {
  /**
   * Krever behandlingstemaOffisiellKode
   */
  body: VurderFagsystemDto;
  path?: never;
  query?: never;
  url: '/api/fordel/klageinstans';
};

export type VurderForKlageinstansResponses = {
  /**
   * default response
   */
  default: BehandlendeFagsystemDto;
};

export type VurderForKlageinstansResponse = VurderForKlageinstansResponses[keyof VurderForKlageinstansResponses];

export type HentBehandlingDtoForBrevData = {
  body?: never;
  path?: never;
  query: {
    /**
     * UUID for behandlingen
     */
    behandlingId: BehandlingIdDto;
  };
  url: '/api/formidling/ressurser';
};

export type HentBehandlingDtoForBrevResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type MottattDatoSøknadData = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/formidling/motattDatoSøknad';
};

export type MottattDatoSøknadResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type UtsattStartdatoData = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/formidling/utsattstart';
};

export type UtsattStartdatoResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type HentStatusInntektsmeldingerData = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/formidling/arbeidInntektsmelding/inntektsmelding-status';
};

export type HentStatusInntektsmeldingerResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type HentBeregningsgrunnlagFormidlingV2Data = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/formidling/beregningsgrunnlag/v2';
};

export type HentBeregningsgrunnlagFormidlingV2Responses = {
  /**
   * default response
   */
  default: unknown;
};

export type HentTilkjentYtelseDagytelseFormidlingData = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/formidling/tilkjentytelse/dagytelse';
};

export type HentTilkjentYtelseDagytelseFormidlingResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type HentTilkjentYtelseEngangsstonadFormidlingData = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/formidling/tilkjentytelse/engangsstonad';
};

export type HentTilkjentYtelseEngangsstonadFormidlingResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type FjernOverstyrtGrunnlagSvpBehandlingData = {
  body?: never;
  path?: never;
  query: {
    behandlingUuid: BehandlingIdDto;
  };
  url: '/api/forvaltningBehandling/fjernOverstyrtGrunnlagSvpBehandling';
};

export type FjernOverstyrtGrunnlagSvpBehandlingErrors = {
  /**
   * Oppgitt behandlinguuid er ukjent, ikke under behandling, svangerskapspenger eller avsluttet.
   */
  400: unknown;
  /**
   * Feilet pga ukjent feil.
   */
  500: unknown;
};

export type FjernOverstyrtGrunnlagSvpBehandlingResponses = {
  /**
   * Overstyrt grunnlag for behandling er fjernet.
   */
  200: string;
};

export type FjernOverstyrtGrunnlagSvpBehandlingResponse =
  FjernOverstyrtGrunnlagSvpBehandlingResponses[keyof FjernOverstyrtGrunnlagSvpBehandlingResponses];

export type HenleggBehandlingTekniskData = {
  body?: never;
  path?: never;
  query: {
    behandlingUuid: string;
  };
  url: '/api/forvaltningBehandling/henleggBehandlingTeknisk';
};

export type HenleggBehandlingTekniskErrors = {
  /**
   * Ukjent fagsak oppgitt.
   */
  400: unknown;
  /**
   * Feilet pga ukjent feil.
   */
  500: unknown;
};

export type HenleggBehandlingTekniskResponses = {
  /**
   * Avslutter fagsak.
   */
  200: string;
};

export type HenleggBehandlingTekniskResponse =
  HenleggBehandlingTekniskResponses[keyof HenleggBehandlingTekniskResponses];

export type HenleggVentendeBehandlingData = {
  body?: never;
  path?: never;
  query: {
    saksnummer: SaksnummerDto;
  };
  url: '/api/forvaltningBehandling/henleggVentendeBehandling';
};

export type HenleggVentendeBehandlingErrors = {
  /**
   * Ukjent fagsak oppgitt.
   */
  400: unknown;
  /**
   * Feilet pga ukjent feil.
   */
  500: unknown;
};

export type HenleggVentendeBehandlingResponses = {
  /**
   * Avslutter fagsak.
   */
  200: string;
};

export type HenleggVentendeBehandlingResponse =
  HenleggVentendeBehandlingResponses[keyof HenleggVentendeBehandlingResponses];

export type HenleggÅpenFørstegangsbehandlingOgOpprettNyData = {
  body?: never;
  path?: never;
  query: {
    saksnummer: SaksnummerDto;
  };
  url: '/api/forvaltningBehandling/henleggÅpenFørstegangsbehandlingOgOpprettNy';
};

export type HenleggÅpenFørstegangsbehandlingOgOpprettNyErrors = {
  /**
   * Oppgitt fagsak er ukjent, ikke under behandling, eller engangsstønad.
   */
  400: unknown;
  /**
   * Feilet pga ukjent feil.
   */
  500: unknown;
};

export type HenleggÅpenFørstegangsbehandlingOgOpprettNyResponses = {
  /**
   * Ny behandling er opprettet.
   */
  200: string;
};

export type HenleggÅpenFørstegangsbehandlingOgOpprettNyResponse =
  HenleggÅpenFørstegangsbehandlingOgOpprettNyResponses[keyof HenleggÅpenFørstegangsbehandlingOgOpprettNyResponses];

export type OppdaterBehandlingresultatMedVedtaksbrevTypeData = {
  body?: never;
  path?: never;
  query: {
    behandlingUuid: BehandlingIdDto;
    vedtaksbrev: 'AUTOMATISK' | 'FRITEKST' | 'INGEN' | '-';
    dryRun: boolean;
  };
  url: '/api/forvaltningBehandling/behandlingsresultat';
};

export type OppdaterBehandlingresultatMedVedtaksbrevTypeErrors = {
  /**
   * Oppgitt behandlinguuid er ukjent
   */
  400: unknown;
  /**
   * Feilet pga ukjent feil.
   */
  500: unknown;
};

export type OppdaterBehandlingresultatMedVedtaksbrevTypeResponses = {
  /**
   * Oppdatert behandlingsresultat.
   */
  200: string;
};

export type OppdaterBehandlingresultatMedVedtaksbrevTypeResponse =
  OppdaterBehandlingresultatMedVedtaksbrevTypeResponses[keyof OppdaterBehandlingresultatMedVedtaksbrevTypeResponses];

export type OpprettNyRevurderingBerørtBehandlingData = {
  body?: never;
  path?: never;
  query: {
    saksnummer: SaksnummerDto;
  };
  url: '/api/forvaltningBehandling/startNyRevurderingBerørtBehandling';
};

export type OpprettNyRevurderingBerørtBehandlingErrors = {
  /**
   * Oppgitt fagsak er ukjent, ikke under behandling, eller engangsstønad.
   */
  400: unknown;
  /**
   * Feilet pga ukjent feil.
   */
  500: unknown;
};

export type OpprettNyRevurderingBerørtBehandlingResponses = {
  /**
   * Ny behandling er opprettet.
   */
  200: string;
};

export type OpprettNyRevurderingBerørtBehandlingResponse =
  OpprettNyRevurderingBerørtBehandlingResponses[keyof OpprettNyRevurderingBerørtBehandlingResponses];

export type ReInnsendInntektsmeldingData = {
  body?: never;
  path?: never;
  query: {
    saksnummer: string;
    journalpostid: string;
  };
  url: '/api/forvaltningBehandling/reInnsendInntektsmelding';
};

export type ReInnsendInntektsmeldingErrors = {
  /**
   * Oppgitt fagsak er ukjent, ikke under behandling, eller engangsstønad.
   */
  400: unknown;
  /**
   * Feilet pga ukjent feil.
   */
  500: unknown;
};

export type ReInnsendInntektsmeldingResponses = {
  /**
   * Inntektsmelding reinnsendt.
   */
  200: string;
};

export type ReInnsendInntektsmeldingResponse =
  ReInnsendInntektsmeldingResponses[keyof ReInnsendInntektsmeldingResponses];

export type LagFortsettBehandlingData = {
  body?: never;
  path?: never;
  query: {
    behandlingUuid: string;
  };
  url: '/api/behandlingskontroll/taskFortsettBehandling';
};

export type LagFortsettBehandlingResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type HentBeregningsgrunnlagInputData = {
  body?: never;
  path?: never;
  query: {
    behandlingUuid: string;
  };
  url: '/api/forvaltningBeregning/hentBeregningsgrunnlagInput';
};

export type HentBeregningsgrunnlagInputResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type HentBeregningsgrunnlagInputLegacyData = {
  body?: never;
  path?: never;
  query: {
    behandlingUuid: string;
  };
  url: '/api/forvaltningBeregning/hentBeregningsgrunnlagInputLegacy';
};

export type HentBeregningsgrunnlagInputLegacyResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type HentGjeldendeSatserData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/api/forvaltningBeregning/satsHentGjeldende';
};

export type HentGjeldendeSatserResponses = {
  /**
   * Gjeldende satser
   */
  200: Array<BeregningSatsDto>;
};

export type HentGjeldendeSatserResponse = HentGjeldendeSatserResponses[keyof HentGjeldendeSatserResponses];

export type HentInfOmBehandlingerMedDiffData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/api/forvaltningBeregning/sjekkDiffInntektRegisterMotInntektsmelding';
};

export type HentInfOmBehandlingerMedDiffResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type HentRefusjonskravperioderInputData = {
  body?: never;
  path?: never;
  query: {
    behandlingUuid: string;
  };
  url: '/api/forvaltningBeregning/hentRefusjonskravperioderInput';
};

export type HentRefusjonskravperioderInputResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type LagreNySatsData = {
  body?: never;
  path?: never;
  query: {
    satsType: 'ENGANG' | 'GRUNNBELØP' | 'GSNITT';
    /**
     * YYYY-MM-DD
     */
    satsFom: string;
    /**
     * YYYY-MM-DD
     */
    satsTom?: string;
    /**
     * Minumum satsverdi er satt til 75000
     */
    satsVerdi: number;
  };
  url: '/api/forvaltningBeregning/satsLagreNy';
};

export type LagreNySatsResponses = {
  /**
   * Gjeldende satser
   */
  200: Array<BeregningSatsDto>;
};

export type LagreNySatsResponse = LagreNySatsResponses[keyof LagreNySatsResponses];

export type OpphørRefusjonInntektsmeldingData = {
  body: EndreInntektsmeldingDto;
  path?: never;
  query?: never;
  url: '/api/forvaltningBeregning/stoppRefusjon';
};

export type OpphørRefusjonInntektsmeldingResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type OpprettGreguleringEnkeltSakData = {
  body?: never;
  path?: never;
  query: {
    saksnummer: SaksnummerDto;
  };
  url: '/api/forvaltningBeregning/opprettGreguleringEnkeltSak';
};

export type OpprettGreguleringEnkeltSakErrors = {
  /**
   * Ukjent fagsak oppgitt.
   */
  400: unknown;
  /**
   * Feilet pga ukjent feil.
   */
  500: unknown;
};

export type OpprettGreguleringEnkeltSakResponses = {
  /**
   * Flyttet fagsak.
   */
  200: string;
};

export type OpprettGreguleringEnkeltSakResponse =
  OpprettGreguleringEnkeltSakResponses[keyof OpprettGreguleringEnkeltSakResponses];

export type AvsluttFagsakUtenBehandlingData = {
  body?: never;
  path?: never;
  query: {
    saksnummer: SaksnummerDto;
  };
  url: '/api/forvaltningFagsak/avsluttFagsakUtenBehandling';
};

export type AvsluttFagsakUtenBehandlingErrors = {
  /**
   * Ukjent fagsak oppgitt.
   */
  400: unknown;
  /**
   * Feilet pga ukjent feil.
   */
  500: unknown;
};

export type AvsluttFagsakUtenBehandlingResponses = {
  /**
   * Avslutter fagsak.
   */
  200: string;
};

export type AvsluttFagsakUtenBehandlingResponse =
  AvsluttFagsakUtenBehandlingResponses[keyof AvsluttFagsakUtenBehandlingResponses];

export type FlyttJournalpostTilFagsakData = {
  body?: never;
  path?: never;
  query: {
    saksnummer: string;
    journalpostid: string;
  };
  url: '/api/forvaltningFagsak/fagsak/flyttJournalpostFagsak';
};

export type FlyttJournalpostTilFagsakErrors = {
  /**
   * Feilet pga ukjent feil.
   */
  500: unknown;
};

export type FlyttJournalpostTilFagsakResponses = {
  /**
   * Task satt til ferdig.
   */
  200: unknown;
};

export type GjenaapneFagsakData = {
  body?: never;
  path?: never;
  query: {
    saksnummer: SaksnummerDto;
  };
  url: '/api/forvaltningFagsak/gjenAapneFagsakForVidereBruk';
};

export type GjenaapneFagsakErrors = {
  /**
   * Ukjent fagsak oppgitt.
   */
  400: unknown;
  /**
   * Feilet pga ukjent feil.
   */
  500: unknown;
};

export type GjenaapneFagsakResponses = {
  /**
   * Fagsak stengt.
   */
  200: string;
};

export type GjenaapneFagsakResponse = GjenaapneFagsakResponses[keyof GjenaapneFagsakResponses];

export type HentFagsakInformasjonData = {
  body?: never;
  path: {
    fagsakId: number;
  };
  query?: never;
  url: '/api/forvaltningFagsak/fagsak/{fagsakId}';
};

export type HentFagsakInformasjonResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type IdenthistorikkData = {
  /**
   * Søkestreng kan være aktørId, fødselsnummer eller D-nummer.
   */
  body?: SokefeltDto;
  path?: never;
  query?: never;
  url: '/api/forvaltningFagsak/fagsak/identhistorikk';
};

export type IdenthistorikkResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type KobleFraFagsakerData = {
  body?: never;
  path?: never;
  query: {
    saksnummer1: string;
    saksnummer2: string;
  };
  url: '/api/forvaltningFagsak/kobleFraFagsaker';
};

export type KobleFraFagsakerErrors = {
  /**
   * Ukjent fagsak oppgitt.
   */
  400: unknown;
  /**
   * Feilet pga ukjent feil.
   */
  500: unknown;
};

export type KobleFraFagsakerResponses = {
  /**
   * Fagsaker frakoblet.
   */
  200: string;
};

export type KobleFraFagsakerResponse = KobleFraFagsakerResponses[keyof KobleFraFagsakerResponses];

export type KobleSammenFagsakerData = {
  body?: never;
  path?: never;
  query: {
    saksnummer1: string;
    saksnummer2: string;
  };
  url: '/api/forvaltningFagsak/kobleSammenFagsaker';
};

export type KobleSammenFagsakerErrors = {
  /**
   * Ukjent fagsak oppgitt.
   */
  400: unknown;
  /**
   * Feilet pga ukjent feil.
   */
  500: unknown;
};

export type KobleSammenFagsakerResponses = {
  /**
   * Fagsaker koblet.
   */
  200: string;
};

export type KobleSammenFagsakerResponse = KobleSammenFagsakerResponses[keyof KobleSammenFagsakerResponses];

export type OppdaterAktoerIdData = {
  body: ByttAktørRequestDto;
  path?: never;
  query?: never;
  url: '/api/forvaltningFagsak/fagsak/oppdaterAktoerId';
};

export type OppdaterAktoerIdErrors = {
  /**
   * AktørId er uendret.
   */
  400: unknown;
  /**
   * Feilet pga ukjent feil.
   */
  500: unknown;
};

export type OppdaterAktoerIdResponses = {
  /**
   * Task satt til ferdig.
   */
  200: unknown;
};

export type OppdaterAktoerIdFraPdlData = {
  body?: never;
  path?: never;
  query: {
    saksnummer: SaksnummerDto;
  };
  url: '/api/forvaltningFagsak/fagsak/oppdaterAktoerIdFraPdl';
};

export type OppdaterAktoerIdFraPdlErrors = {
  /**
   * Saksnummer er ugyldig.
   */
  400: unknown;
  /**
   * Feilet pga ukjent feil.
   */
  500: unknown;
};

export type OppdaterAktoerIdFraPdlResponses = {
  /**
   * Task satt til ferdig.
   */
  200: unknown;
};

export type OppdaterPersongalleriForTilgangData = {
  body?: never;
  path?: never;
  query: {
    saksnummer: SaksnummerDto;
  };
  url: '/api/forvaltningFagsak/fagsak/oppdater-personer-tilgang';
};

export type OppdaterPersongalleriForTilgangErrors = {
  /**
   * Ukjent fagsak oppgitt.
   */
  400: unknown;
  /**
   * Feilet pga ukjent feil.
   */
  500: unknown;
};

export type OppdaterPersongalleriForTilgangResponses = {
  /**
   * Avslutter fagsak.
   */
  200: string;
};

export type OppdaterPersongalleriForTilgangResponse =
  OppdaterPersongalleriForTilgangResponses[keyof OppdaterPersongalleriForTilgangResponses];

export type SettFagsakFraAvsluttetTilUnderBehandlingData = {
  body?: never;
  path?: never;
  query: {
    saksnummer: SaksnummerDto;
  };
  url: '/api/forvaltningFagsak/settFagsakFraAvsluttetTilUnderBehandling';
};

export type SettFagsakFraAvsluttetTilUnderBehandlingErrors = {
  /**
   * Ukjent fagsak oppgitt, eller fagsak i feil tilstand
   */
  400: unknown;
  /**
   * Feilet pga ukjent feil.
   */
  500: unknown;
};

export type SettFagsakFraAvsluttetTilUnderBehandlingResponses = {
  /**
   * Fagsak endret.
   */
  200: string;
};

export type SettFagsakFraAvsluttetTilUnderBehandlingResponse =
  SettFagsakFraAvsluttetTilUnderBehandlingResponses[keyof SettFagsakFraAvsluttetTilUnderBehandlingResponses];

export type StengFagsakData = {
  body?: never;
  path?: never;
  query: {
    saksnummer: SaksnummerDto;
  };
  url: '/api/forvaltningFagsak/stengFagsakForVidereBruk';
};

export type StengFagsakErrors = {
  /**
   * Ukjent fagsak oppgitt.
   */
  400: unknown;
  /**
   * Feilet pga ukjent feil.
   */
  500: unknown;
};

export type StengFagsakResponses = {
  /**
   * Fagsak stengt.
   */
  200: string;
};

export type StengFagsakResponse = StengFagsakResponses[keyof StengFagsakResponses];

export type KvitterOkData = {
  /**
   * Identifikasjon av oppdrag som kvitteres OK. Sett oppdaterProsessTask til false kun når prosesstasken allerede er flyttet til FERDIG
   */
  body: KvitteringDto;
  path?: never;
  query?: never;
  url: '/api/forvaltningOppdrag/kvitter-oppdrag-ok';
};

export type KvitterOkResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type PatchK27Data = {
  body: K27PatchDto;
  path?: never;
  query?: never;
  url: '/api/forvaltningOppdrag/patch-k27';
};

export type PatchK27Responses = {
  /**
   * default response
   */
  default: unknown;
};

export type PatchOppdragData = {
  body: OppdragPatchDto;
  path?: never;
  query?: never;
  url: '/api/forvaltningOppdrag/patch-oppdrag';
};

export type PatchOppdragResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type PatchOppdragOgRekjørData = {
  body: OppdragPatchDto;
  path?: never;
  query?: never;
  url: '/api/forvaltningOppdrag/patch-oppdrag-hardt-og-rekjoer';
};

export type PatchOppdragOgRekjørResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type HentOppgittOpptjeningData = {
  body?: never;
  path?: never;
  query: {
    behandlingUuid: string;
  };
  url: '/api/forvaltningOpptjening/hentOppgittOpptjening';
};

export type HentOppgittOpptjeningResponses = {
  /**
   * default response
   */
  default: OppgittOpptjeningDto;
};

export type HentOppgittOpptjeningResponse = HentOppgittOpptjeningResponses[keyof HentOppgittOpptjeningResponses];

export type LeggTilOppgittFrilansData = {
  body?: never;
  path?: never;
  query: {
    behandlingUuid: string;
    /**
     * YYYY-MM-DD
     */
    frilansFom: string;
    /**
     * YYYY-MM-DD
     */
    frilansTom?: string;
    /**
     * YYYY-MM-DD
     */
    stpOpptjening: string;
  };
  url: '/api/forvaltningOpptjening/leggTilOppgittFrilans';
};

export type LeggTilOppgittFrilansResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type LeggTilOppgittNæringData = {
  body?: {
    behandlingUuid: string;
    typeKode: 'ANNEN' | 'DAGMAMMA' | 'FISKE' | 'JORDBRUK_SKOGBRUK';
    /**
     * YYYY-MM-DD
     */
    fom: string;
    /**
     * YYYY-MM-DD
     */
    tom?: string;
    orgnummer?: string;
    regnskapNavn?: string;
    regnskapTlf?: string;
    nyoppstartet?: 'JA' | 'NEI';
    varigEndring?: 'JA' | 'NEI';
    nyIArbeidslivet?: 'JA' | 'NEI';
    erRelasjon?: 'JA' | 'NEI';
    /**
     * YYYY-MM-DD
     */
    endringsDato?: string;
    begrunnelse?: string;
    bruttoBeløp?: number;
  };
  path?: never;
  query?: never;
  url: '/api/forvaltningOpptjening/leggTilOppgittNæring';
};

export type LeggTilOppgittNæringResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type LeggTilOppgittNæringFjerneAndreOppgitteOrgnummerData = {
  body?: {
    behandlingUuid: string;
    typeKode: 'ANNEN' | 'DAGMAMMA' | 'FISKE' | 'JORDBRUK_SKOGBRUK';
    /**
     * YYYY-MM-DD
     */
    fom: string;
    /**
     * YYYY-MM-DD
     */
    tom?: string;
    orgnummer?: string;
    regnskapNavn?: string;
    regnskapTlf?: string;
    nyoppstartet?: 'JA' | 'NEI';
    varigEndring?: 'JA' | 'NEI';
    nyIArbeidslivet?: 'JA' | 'NEI';
    erRelasjon?: 'JA' | 'NEI';
    /**
     * YYYY-MM-DD
     */
    endringsDato?: string;
    begrunnelse?: string;
    bruttoBeløp?: number;
  };
  path?: never;
  query?: never;
  url: '/api/forvaltningOpptjening/leggTilOppgittNæringFjerneAndreOppgitteOrgnummer';
};

export type LeggTilOppgittNæringFjerneAndreOppgitteOrgnummerResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type ReInnhentAlleIayRegisterDataData = {
  body?: never;
  path?: never;
  query: {
    behandlingUuid: string;
  };
  url: '/api/forvaltningOpptjening/reInnhentAlleIAYRegisterData';
};

export type ReInnhentAlleIayRegisterDataResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type FjernOverstyrtFhData = {
  body?: never;
  path?: never;
  query: {
    behandlingUuid: string;
  };
  url: '/api/forvaltningSteg/fjernFHValgHoppTilbake';
};

export type FjernOverstyrtFhResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type FjernStartpunktData = {
  body?: never;
  path?: never;
  query: {
    behandlingUuid: string;
  };
  url: '/api/forvaltningSteg/fjernStartpunkt';
};

export type FjernStartpunktResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type HoppTilbakeData = {
  body?: never;
  path?: never;
  query: {
    behandlingUuid: string;
    målSteg:
      | 'REGSØK'
      | 'INSØK'
      | 'VURDERKOMPLETT'
      | 'INREG'
      | 'VURDERKOMPLETTBEH'
      | 'INREG_AVSL'
      | 'KOFAK'
      | 'VURDEROP'
      | 'VURDERMV'
      | 'VURDERSAMLET'
      | 'BERYT'
      | 'FORBRES'
      | 'SIMOPP'
      | 'VURDER_FARESIGNALER'
      | 'FORVEDSTEG'
      | 'FVEDSTEG'
      | 'IVEDSTEG'
      | 'VURDER_FK_UI'
      | 'KLAGEUI'
      | 'VURDER_FK_OI'
      | 'KLAGEOI'
      | 'ANKE'
      | 'ANKE_MERKNADER'
      | 'VURDINNSYN'
      | 'INPER'
      | 'VURDERSFV'
      | 'DEKNINGSGRAD'
      | 'FORS_BESTEBEREGNING'
      | 'KONTROLLER_OMSORG_RETT'
      | 'FAKTA_LØPENDE_OMSORG'
      | 'GRUNNLAG_UTTAK'
      | 'KOFAKUT'
      | 'KONTROLLER_AKTIVITETSKRAV'
      | 'FAKTA_UTTAK'
      | 'FAKTA_UTTAK_DOKUMENTASJON'
      | 'VURDER_TLRG'
      | 'VURDERSPV'
      | 'VRSLREV'
      | 'VURDERSRB'
      | 'KO_ARB_IM'
      | 'VURDER_ARB_FORHOLD_PERMISJON'
      | 'VURDER_OPPTJ_PERIODE'
      | 'VURDER_OPPTJ_FAKTA'
      | 'VURDER_OPPTJ'
      | 'FASTSETT_STP_BER'
      | 'KOFAKBER'
      | 'FORS_BERGRUNN'
      | 'FORS_BERGRUNN_2'
      | 'VURDER_VILKAR_BERGRUNN'
      | 'VURDER_REF_BERGRUNN'
      | 'FORDEL_BERGRUNN'
      | 'FAST_BERGRUNN'
      | 'KOFAK_LOP_MEDL'
      | 'SØKNADSFRIST_FP'
      | 'VURDER_UTTAK'
      | 'VURDER_TILBAKETREKK'
      | 'BERYT_OPPDRAG'
      | 'KOARB'
      | 'VURDER_FORUTGÅENDE_MEDLEMSKAPVILKÅR'
      | 'VULOMED';
  };
  url: '/api/forvaltningSteg/generell';
};

export type HoppTilbakeResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type HoppTilbakeTil5085Data = {
  body?: never;
  path?: never;
  query: {
    behandlingUuid: string;
  };
  url: '/api/forvaltningSteg/5085';
};

export type HoppTilbakeTil5085Responses = {
  /**
   * default response
   */
  default: unknown;
};

export type BeregnTilretteleggingsperioderData = {
  body?: never;
  path?: never;
  query: {
    behandlingUuid: string;
  };
  url: '/api/forvaltningSvangerskapspenger/beregnTilretteleggingsperioder';
};

export type BeregnTilretteleggingsperioderResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type EndreTermindatoData = {
  body?: {
    /**
     * Begrunnelse, fx FAGSYSTEM-nr
     */
    begrunnelse?: string;
  };
  path?: never;
  query: {
    /**
     * Saksnummer
     */
    saksnummer: string;
    /**
     * Termindato (YYYY-MM-DD)
     */
    termindato: string;
    /**
     * Utstedt dato (YYYY-MM-DD)
     */
    utstedtdato: string;
  };
  url: '/api/forvaltningSoknad/endreTermindato';
};

export type EndreTermindatoResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type ManglendeFødselsdatoData = {
  body?: {
    /**
     * Begrunnelse, fx FAGSYSTEM-nr
     */
    begrunnelse?: string;
  };
  path?: never;
  query: {
    /**
     * Saksnummer
     */
    saksnummer: string;
    /**
     * Fødselsdato (YYYY-MM-DD)
     */
    fødselsdato: string;
    /**
     * Dødsdato (YYYY-MM-DD)
     */
    dødsdato?: string;
  };
  url: '/api/forvaltningSoknad/manglendeFødselsdato';
};

export type ManglendeFødselsdatoResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type ManglendeTermindatoData = {
  body?: {
    /**
     * Begrunnelse, fx FAGSYSTEM-nr
     */
    begrunnelse?: string;
  };
  path?: never;
  query: {
    /**
     * Saksnummer
     */
    saksnummer: string;
    /**
     * Termindato (YYYY-MM-DD)
     */
    termindato: string;
    /**
     * Utstedt dato (YYYY-MM-DD)
     */
    utstedtdato: string;
  };
  url: '/api/forvaltningSoknad/manglendeTermindato';
};

export type ManglendeTermindatoResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type SettNorskIdentAnnenpartData = {
  body?: {
    /**
     * Begrunnelse, fx FAGSYSTEM-nr
     */
    begrunnelse?: string;
  };
  path?: never;
  query: {
    /**
     * Saksnummer
     */
    saksnummer: string;
    /**
     * FNR annen part
     */
    identAnnenPart: string;
  };
  url: '/api/forvaltningSoknad/settNorskIdentAnnenpart';
};

export type SettNorskIdentAnnenpartResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type SettUtlandskIdentAnnenpartData = {
  body?: {
    /**
     * Begrunnelse, fx FAGSYSTEM-nr
     */
    begrunnelse?: string;
  };
  path?: never;
  query: {
    /**
     * Saksnummer
     */
    saksnummer: string;
    /**
     * FNR annen part
     */
    identAnnenPart: string;
  };
  url: '/api/forvaltningSoknad/settUtlandskIdentAnnenpart';
};

export type SettUtlandskIdentAnnenpartResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type FerdigstillOppgave1Data = {
  /**
   * Oppgave som skal settes ferdig
   */
  body: ProsessTaskIdDto;
  path?: never;
  query?: never;
  url: '/api/forvaltningTeknisk/sett-oppgave-ferdigstilt';
};

export type FerdigstillOppgave1Errors = {
  /**
   * Fant ikke aktuell oppgave.
   */
  400: unknown;
  /**
   * Feilet pga ukjent feil.
   */
  500: unknown;
};

export type FerdigstillOppgave1Responses = {
  /**
   * Oppgave satt til ferdig.
   */
  200: unknown;
};

export type FjernFagsakProsesstaskAvsluttetBehandlingData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/api/forvaltningTeknisk/fjern-fagsak-prosesstask-avsluttet';
};

export type FjernFagsakProsesstaskAvsluttetBehandlingResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type HentAlleÅpneOppgaverData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/api/forvaltningTeknisk/hent-alle-aapne-oppgaver';
};

export type HentAlleÅpneOppgaverErrors = {
  /**
   * Fant ikke aktuell oppgave.
   */
  400: unknown;
  /**
   * Feilet pga ukjent feil.
   */
  500: unknown;
};

export type HentAlleÅpneOppgaverResponses = {
  /**
   * Oppgave satt til ferdig.
   */
  200: unknown;
};

export type SetAksjonspunktAvbruttData = {
  body?: never;
  path?: never;
  query: {
    behandlingUuid: string;
    aksjonspunktKode: string;
  };
  url: '/api/forvaltningTeknisk/sett-aksjonspunkt-avbrutt';
};

export type SetAksjonspunktAvbruttErrors = {
  /**
   * Fant ikke aktuelt aksjonspunkt.
   */
  400: unknown;
  /**
   * Feilet pga ukjent feil.
   */
  500: unknown;
};

export type SetAksjonspunktAvbruttResponses = {
  /**
   * Aksjonspunkt avbrutt.
   */
  200: unknown;
};

export type SetBehandlingKøetData = {
  body?: never;
  path?: never;
  query: {
    behandlingUuid: BehandlingIdDto;
  };
  url: '/api/forvaltningTeknisk/sett-behandling-koet';
};

export type SetBehandlingKøetErrors = {
  /**
   * Fant ikke aktuelt aksjonspunkt.
   */
  400: unknown;
  /**
   * Feilet pga ukjent feil.
   */
  500: unknown;
};

export type SetBehandlingKøetResponses = {
  /**
   * Aksjonspunkt avbrutt.
   */
  200: unknown;
};

export type SynkPostnummerData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/api/forvaltningTeknisk/synk-postnummer';
};

export type SynkPostnummerResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type BeregnKontoerData = {
  body?: never;
  path?: never;
  query: {
    behandlingUuid: string;
  };
  url: '/api/forvaltningUttak/beregn-kontoer';
};

export type BeregnKontoerResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type SettStartdatoData = {
  body?: {
    /**
     * YYYY-MM-DD
     */
    startdato: string;
  };
  path?: never;
  query: {
    behandlingUuid: string;
  };
  url: '/api/forvaltningUttak/startdato';
};

export type SettStartdatoResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type AvstemOverlappForPeriodeData = {
  body?: {
    /**
     * key (secret)
     */
    key: string;
  };
  path?: never;
  query: {
    /**
     * fom (YYYY-MM-DD)
     */
    fom: string;
    /**
     * tom (YYYY-MM-DD)
     */
    tom: string;
    /**
     * tidsrom for avstemming av 1 dag (sekunder)
     */
    tidsrom: number;
    /**
     * true gir saker med vedtak fattet i periode, false gir saker opprettet i periode
     */
    vedtak?: boolean;
  };
  url: '/api/forvaltningUttrekk/avstemOverlappForPeriode';
};

export type AvstemOverlappForPeriodeResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type AvstemSakForOverlappData = {
  body?: never;
  path?: never;
  query: {
    saksnummer: SaksnummerDto;
  };
  url: '/api/forvaltningUttrekk/avstemSakOverlapp';
};

export type AvstemSakForOverlappResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type FlyttBehandlingTilStegData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/api/forvaltningUttrekk/flyttBehandlingTilSteg';
};

export type FlyttBehandlingTilStegResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type HentAvstemtSakOverlappTrexData = {
  body?: never;
  path?: never;
  query: {
    saksnummer: SaksnummerDto;
  };
  url: '/api/forvaltningUttrekk/hentAvstemtSakOverlapp';
};

export type HentAvstemtSakOverlappTrexResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type InfotrygdRestanseFpData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/api/forvaltningUttrekk/infotrygdRestanseFP';
};

export type InfotrygdRestanseFpResponses = {
  /**
   * Restanse
   */
  200: Array<InfotrygdRestanseDto>;
};

export type InfotrygdRestanseFpResponse = InfotrygdRestanseFpResponses[keyof InfotrygdRestanseFpResponses];

export type InfotrygdRestanseSvpData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/api/forvaltningUttrekk/infotrygdRestanseSVP';
};

export type InfotrygdRestanseSvpResponses = {
  /**
   * Restanse
   */
  200: Array<InfotrygdRestanseDto>;
};

export type InfotrygdRestanseSvpResponse = InfotrygdRestanseSvpResponses[keyof InfotrygdRestanseSvpResponses];

export type ListFagsakUtenBehandlingData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/api/forvaltningUttrekk/listFagsakUtenBehandling';
};

export type ListFagsakUtenBehandlingResponses = {
  /**
   * Fagsaker uten behandling
   */
  200: Array<SaksnummerDto>;
};

export type ListFagsakUtenBehandlingResponse =
  ListFagsakUtenBehandlingResponses[keyof ListFagsakUtenBehandlingResponses];

export type OpenAutopunktData = {
  body?: never;
  path?: never;
  query: {
    aksjonspunktKode: string;
  };
  url: '/api/forvaltningUttrekk/openAutopunkt';
};

export type OpenAutopunktResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type OpenIkkeLopendeSakerData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/api/forvaltningUttrekk/openIkkeLopendeSaker';
};

export type OpenIkkeLopendeSakerResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type SlettTidligereAvstemmingData = {
  body?: {
    /**
     * key (secret)
     */
    key: string;
  };
  path?: never;
  query: {
    /**
     * fom (YYYY-MM-DD)
     */
    fom: string;
    /**
     * tom (YYYY-MM-DD)
     */
    tom: string;
    /**
     * tidsrom for avstemming av 1 dag (sekunder)
     */
    tidsrom: number;
    /**
     * true gir saker med vedtak fattet i periode, false gir saker opprettet i periode
     */
    vedtak?: boolean;
  };
  url: '/api/forvaltningUttrekk/slettTidligereAvstemmingOverlapp';
};

export type SlettTidligereAvstemmingResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type OpprettTaskData = {
  body?: TaskInput;
  path?: never;
  query?: never;
  url: '/api/fpoversiktMigrering/opprettTask';
};

export type OpprettTaskResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type GenererVedtakJsonData = {
  body?: never;
  path?: never;
  query: {
    behandlingUuid: string;
  };
  url: '/api/forvaltning-stonadsstatistikk/for-behandling';
};

export type GenererVedtakJsonResponses = {
  /**
   * default response
   */
  default: StønadsstatistikkVedtak;
};

export type GenererVedtakJsonResponse = GenererVedtakJsonResponses[keyof GenererVedtakJsonResponses];

export type OpprettTaskForPeriodeData = {
  body?: MigreringTaskInput;
  path?: never;
  query?: never;
  url: '/api/forvaltning-stonadsstatistikk/opprettTaskForPeriode';
};

export type OpprettTaskForPeriodeResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type HentInntektsmeldingerData = {
  body?: never;
  path?: never;
  query: {
    /**
     * Saksnummer for fagsak
     */
    saksnummer: SaksnummerDto;
  };
  url: '/api/fpoversikt/inntektsmeldinger';
};

export type HentInntektsmeldingerResponses = {
  /**
   * default response
   */
  default: Array<FpSakInntektsmeldingDto>;
};

export type HentInntektsmeldingerResponse = HentInntektsmeldingerResponses[keyof HentInntektsmeldingerResponses];

export type HentSakData = {
  body?: never;
  path?: never;
  query: {
    /**
     * Saksnummer for fagsak
     */
    saksnummer: SaksnummerDto;
  };
  url: '/api/fpoversikt/sak';
};

export type HentSakResponses = {
  /**
   * default response
   */
  default: Sak;
};

export type HentSakResponse = HentSakResponses[keyof HentSakResponses];

export type HentmanglendeVedleggData = {
  body?: never;
  path?: never;
  query: {
    /**
     * Saksnummer for fagsak
     */
    saksnummer: SaksnummerDto;
  };
  url: '/api/fpoversikt/manglendeVedlegg';
};

export type HentmanglendeVedleggResponses = {
  /**
   * default response
   */
  default: Array<
    | 'I000007'
    | 'I000023'
    | 'I000032'
    | 'I000036'
    | 'I000037'
    | 'I000038'
    | 'I000039'
    | 'I000041'
    | 'I000042'
    | 'I000044'
    | 'I000045'
    | 'I000051'
    | 'I000060'
    | 'I000061'
    | 'I000062'
    | 'I000063'
    | 'I000065'
    | 'I000066'
    | 'I000109'
    | 'I000110'
    | 'I000111'
    | 'I000112'
    | 'I000114'
    | 'I000116'
    | 'I000117'
    | 'I000118'
    | 'I000119'
    | 'I000120'
    | 'I000121'
    | 'I000122'
    | 'I000123'
    | 'I000124'
    | 'I000130'
    | 'I000131'
    | 'I000132'
    | 'I000133'
    | 'I000140'
    | 'I000141'
  >;
};

export type HentmanglendeVedleggResponse = HentmanglendeVedleggResponses[keyof HentmanglendeVedleggResponses];

export type GrovSorterData = {
  /**
   * Liste med aktør IDer som skal sorteres
   */
  body?: Array<AktørIdDto>;
  path?: never;
  query?: never;
  url: '/api/hendelser/grovsorter';
};

export type GrovSorterResponses = {
  /**
   * default response
   */
  default: Array<string>;
};

export type GrovSorterResponse = GrovSorterResponses[keyof GrovSorterResponses];

export type MottaHendelseData = {
  /**
   * Hendelse fra Fpabonnent
   */
  body?: HendelseWrapperDto;
  path?: never;
  query?: never;
  url: '/api/hendelser/motta';
};

export type MottaHendelseResponses = {
  /**
   * default response
   */
  default: EnkelRespons;
};

export type MottaHendelseResponse = MottaHendelseResponses[keyof MottaHendelseResponses];

export type PingData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/api/hendelser/ping';
};

export type PingResponses = {
  /**
   * default response
   */
  default: EnkelRespons;
};

export type PingResponse = PingResponses[keyof PingResponses];

export type SokInfotrygdData = {
  /**
   * Søkestreng kan være aktørId, fødselsnummer eller D-nummer.
   */
  body?: SokefeltDto;
  path?: never;
  query?: never;
  url: '/api/infotrygd/sok';
};

export type SokInfotrygdResponses = {
  /**
   * Returnerer grunnlag
   */
  200: InfotrygdVedtakDto;
};

export type SokInfotrygdResponse = SokInfotrygdResponses[keyof SokInfotrygdResponses];

export type HentGruppertKodelisteData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/api/kodeverk';
};

export type HentGruppertKodelisteResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type HentBehandlingResultatForBackend1Data = {
  body?: never;
  path?: never;
  query: {
    /**
     * behandlingUUID
     */
    uuid: UuidDto;
  };
  url: '/api/los/los-behandling';
};

export type HentBehandlingResultatForBackend1Responses = {
  /**
   * Returnerer behandling
   */
  200: LosBehandlingDto;
};

export type HentBehandlingResultatForBackend1Response =
  HentBehandlingResultatForBackend1Responses[keyof HentBehandlingResultatForBackend1Responses];

export type HentFagsakEgenskaperData = {
  body?: never;
  path?: never;
  query: {
    saksnummer: SaksnummerDto;
  };
  url: '/api/los/los-egenskap';
};

export type HentFagsakEgenskaperResponses = {
  /**
   * Returnerer behandling
   */
  200: LosFagsakEgenskaperDto;
};

export type HentFagsakEgenskaperResponse = HentFagsakEgenskaperResponses[keyof HentFagsakEgenskaperResponses];

export type NøkkeltallFristUtløperData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/api/los/los-fristutlop';
};

export type NøkkeltallFristUtløperResponses = {
  /**
   * default response
   */
  default: Array<NøkkeltallBehandlingVentefristUtløper>;
};

export type NøkkeltallFristUtløperResponse = NøkkeltallFristUtløperResponses[keyof NøkkeltallFristUtløperResponses];

export type NøkkeltallFørsteUttakPrMånedData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/api/los/los-nokkeltall';
};

export type NøkkeltallFørsteUttakPrMånedResponses = {
  /**
   * default response
   */
  default: Array<NøkkeltallBehandlingFørsteUttak>;
};

export type NøkkeltallFørsteUttakPrMånedResponse =
  NøkkeltallFørsteUttakPrMånedResponses[keyof NøkkeltallFørsteUttakPrMånedResponses];

export type GetAInntektSammenligningUrlData = {
  body?: never;
  path?: never;
  query?: {
    saksnummer?: SaksnummerDto;
  };
  url: '/api/register/redirect-to/a-inntekt';
};

export type GetAaregUrlData = {
  body?: never;
  path?: never;
  query?: {
    saksnummer?: SaksnummerDto;
  };
  url: '/api/register/redirect-to/aa-reg';
};

export type HentInitielleRessurserData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/api/init-fetch';
};

export type HentInitielleRessurserResponses = {
  /**
   * default response
   */
  default: InitLinksDto;
};

export type HentInitielleRessurserResponse = HentInitielleRessurserResponses[keyof HentInitielleRessurserResponses];

export type HentVedtaksdokumentData = {
  body?: never;
  path?: never;
  query: {
    /**
     * BehandlingId for vedtaksdokument
     */
    behandlingId: BehandlingIdDto;
  };
  url: '/api/vedtak/hent-vedtaksdokument';
};

export type HentVedtaksdokumentResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type RegenererIkkeGyldigeVedtaksXmlData = {
  /**
   * Datointervall i vedtak tabell for hvor det skal genereres ny vedtaksxml og maksAntall som behandles
   */
  body: GenererVedtaksXmlDto;
  path?: never;
  query?: never;
  url: '/api/vedtak/regenerer';
};

export type RegenererIkkeGyldigeVedtaksXmlResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type ValiderVedtaksXmlData = {
  /**
   * Datointervall i vedtak tabell for hvilke vedtakxml som skal valideres og maksAntall som behandles
   */
  body: GenererVedtaksXmlDto;
  path?: never;
  query?: never;
  url: '/api/vedtak/validate';
};

export type ValiderVedtaksXmlResponses = {
  /**
   * default response
   */
  default: unknown;
};

export type FpVedtakHendelserData = {
  body?: never;
  path?: never;
  query: {
    /**
     * Siste sekvensId lest
     */
    sistLesteSekvensId: SekvensIdParam;
    /**
     * max antall returnert
     */
    maxAntall?: MaxAntallParam;
    /**
     * Filtrerer på type hendelse
     */
    type?: HendelseTypeParam;
    /**
     * aktoerId
     */
    aktoerId?: AktørParam;
  };
  url: '/api/feed/vedtak/foreldrepenger';
};

export type FpVedtakHendelserResponses = {
  /**
   * Returnerer hendelser om foreldrepenger-vedtak
   */
  200: FeedDto;
};

export type FpVedtakHendelserResponse = FpVedtakHendelserResponses[keyof FpVedtakHendelserResponses];

export type SvpVedtakHendelserData = {
  body?: never;
  path?: never;
  query: {
    /**
     * Siste sekvensId lest
     */
    sistLesteSekvensId: SekvensIdParam;
    /**
     * max antall returnert
     */
    maxAntall?: MaxAntallParam;
    /**
     * Filtrerer på type hendelse
     */
    type?: HendelseTypeParam;
    /**
     * aktoerId
     */
    aktoerId?: AktørParam;
  };
  url: '/api/feed/vedtak/svangerskapspenger';
};

export type SvpVedtakHendelserResponses = {
  /**
   * Returnerer hendelser om svangerskapspenger-vedtak
   */
  200: FeedDto;
};

export type SvpVedtakHendelserResponse = SvpVedtakHendelserResponses[keyof SvpVedtakHendelserResponses];

export type HentAktørIdListeTilknyttetSakData = {
  body?: never;
  path?: never;
  query: {
    saksnummer: SaksnummerDto;
  };
  url: '/api/pip/aktoer-for-sak';
};

export type HentAktørIdListeTilknyttetSakResponses = {
  /**
   * default response
   */
  default: Array<string>;
};

export type HentAktørIdListeTilknyttetSakResponse =
  HentAktørIdListeTilknyttetSakResponses[keyof HentAktørIdListeTilknyttetSakResponses];

export type HentFullInfoForSakData = {
  body?: never;
  path?: never;
  query: {
    saksnummer: SaksnummerDto;
  };
  url: '/api/pip/full-for-sak';
};

export type HentFullInfoForSakResponses = {
  /**
   * default response
   */
  default: SakOgPersonerDto;
};

export type HentFullInfoForSakResponse = HentFullInfoForSakResponses[keyof HentFullInfoForSakResponses];

export type HentFullInfoForSakErData = {
  body: Array<string>;
  path?: never;
  query?: never;
  url: '/api/pip/full-for-sak';
};

export type HentFullInfoForSakErResponses = {
  /**
   * default response
   */
  default: Array<SakOgPersonerDto>;
};

export type HentFullInfoForSakErResponse = HentFullInfoForSakErResponses[keyof HentFullInfoForSakErResponses];

export type HentSaksIdentData = {
  body?: never;
  path?: never;
  query: {
    saksnummer: SaksnummerDto;
  };
  url: '/api/pip/ident-for-sak';
};

export type HentSaksIdentResponses = {
  /**
   * default response
   */
  default: string;
};

export type HentSaksIdentResponse = HentSaksIdentResponses[keyof HentSaksIdentResponses];

export type HentSaksnummerTilknyttetBehandlingData = {
  body?: never;
  path?: never;
  query: {
    behandlingUuid: UuidDto;
  };
  url: '/api/pip/saksnummer-for-behandling';
};

export type HentSaksnummerTilknyttetBehandlingResponses = {
  /**
   * default response
   */
  default: string;
};

export type HentSaksnummerTilknyttetBehandlingResponse =
  HentSaksnummerTilknyttetBehandlingResponses[keyof HentSaksnummerTilknyttetBehandlingResponses];

export type CreateProsessTaskData = {
  /**
   * Informasjon for restart en eksisterende prosesstask
   */
  body?: ProsessTaskOpprettInputDto;
  path?: never;
  query?: never;
  url: '/api/prosesstask/create';
};

export type CreateProsessTaskErrors = {
  /**
   * Feilet pga ukjent feil eller tekniske/funksjonelle feil
   */
  500: unknown;
};

export type CreateProsessTaskResponses = {
  /**
   * Prosesstaskens oppdatert informasjon
   */
  202: ProsessTaskDataDto;
};

export type CreateProsessTaskResponse = CreateProsessTaskResponses[keyof CreateProsessTaskResponses];

export type FinnFeiletProsessTaskData = {
  body?: never;
  path: {
    prosessTaskId: number;
  };
  query?: never;
  url: '/api/prosesstask/feil/{prosessTaskId}';
};

export type FinnFeiletProsessTaskErrors = {
  /**
   * Feil input
   */
  400: unknown;
  /**
   * Tom respons når angitt prosesstask-id ikke finnes
   */
  404: unknown;
};

export type FinnFeiletProsessTaskResponses = {
  /**
   * Angitt prosesstask-id finnes
   */
  200: FeiletProsessTaskDataDto;
};

export type FinnFeiletProsessTaskResponse = FinnFeiletProsessTaskResponses[keyof FinnFeiletProsessTaskResponses];

export type FinnProsessTasksData = {
  body?: never;
  path: {
    /**
     * Liste av statuser som skal hentes.
     */
    prosessTaskStatus: 'FEILET' | 'VENTER_SVAR' | 'SUSPENDERT' | 'VETO' | 'KLAR';
  };
  query?: never;
  url: '/api/prosesstask/list/{prosessTaskStatus}';
};

export type FinnProsessTasksResponses = {
  /**
   * Liste over prosesstasker, eller tom liste når angitt/default søkefilter ikke finner noen prosesstasker
   */
  200: ProsessTaskDataDto;
};

export type FinnProsessTasksResponse = FinnProsessTasksResponses[keyof FinnProsessTasksResponses];

export type RestartProsessTaskData = {
  body?: never;
  path: {
    prosessTaskId: number;
    prosessTaskStatus: 'FEILET' | 'VENTER_SVAR' | 'SUSPENDERT';
  };
  query?: never;
  url: '/api/prosesstask/launch/{prosessTaskId}/{prosessTaskStatus}';
};

export type RestartProsessTaskErrors = {
  /**
   * Feilet pga ukjent feil eller tekniske/funksjonelle feil
   */
  500: unknown;
};

export type RestartProsessTaskResponses = {
  /**
   * Prosesstaskens oppdatert informasjon
   */
  200: ProsessTaskRestartResultatDto;
};

export type RestartProsessTaskResponse = RestartProsessTaskResponses[keyof RestartProsessTaskResponses];

export type RetryAllProsessTaskData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/api/prosesstask/retryall';
};

export type RetryAllProsessTaskErrors = {
  /**
   * Feilet pga ukjent feil eller tekniske/funksjonelle feil
   */
  500: unknown;
};

export type RetryAllProsessTaskResponses = {
  /**
   * Response med liste av prosesstasks som restartes
   */
  200: ProsessTaskRetryAllResultatDto;
};

export type RetryAllProsessTaskResponse = RetryAllProsessTaskResponses[keyof RetryAllProsessTaskResponses];

export type SearchProsessTasksData = {
  /**
   * Søkefilter for å begrense resultatet av returnerte prosesstask.
   */
  body?: SokeFilterDto;
  path?: never;
  query?: never;
  url: '/api/prosesstask/search';
};

export type SearchProsessTasksResponses = {
  /**
   * Liste over prosesstasker, eller tom liste når angitt/default søkefilter ikke finner noen prosesstasker
   */
  200: ProsessTaskDataDto;
};

export type SearchProsessTasksResponse = SearchProsessTasksResponses[keyof SearchProsessTasksResponses];

export type SetFeiletProsessTaskFerdigData = {
  body?: never;
  path: {
    prosessTaskId: number;
    prosessTaskStatus: 'FEILET' | 'VENTER_SVAR' | 'SUSPENDERT' | 'VETO' | 'KLAR';
  };
  query?: never;
  url: '/api/prosesstask/setferdig/{prosessTaskId}/{prosessTaskStatus}';
};

export type SetFeiletProsessTaskFerdigErrors = {
  /**
   * Feilet pga ukjent feil eller tekniske/funksjonelle feil
   */
  500: unknown;
};

export type SetFeiletProsessTaskFerdigResponses = {
  /**
   * Angitt prosesstask-id satt til status FERDIG
   */
  200: unknown;
};

export type ClientOptions = {
  baseUrl: `${string}://${string}/fpsak` | (string & {});
};
