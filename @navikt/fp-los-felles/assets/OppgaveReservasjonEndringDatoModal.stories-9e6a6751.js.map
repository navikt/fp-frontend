{"version":3,"file":"OppgaveReservasjonEndringDatoModal.stories-9e6a6751.js","sources":["../../src/endreReservasjon/OppgaveReservasjonEndringDatoModal.tsx"],"sourcesContent":["import React, { MouseEvent, FunctionComponent, useCallback, useMemo } from 'react';\nimport { useIntl, FormattedMessage } from 'react-intl';\nimport { useForm } from 'react-hook-form';\nimport dayjs from 'dayjs';\nimport { Button, Modal as NavModal, Heading } from '@navikt/ds-react';\nimport { ISO_DATE_FORMAT } from '@navikt/ft-utils';\nimport { dateAfterOrEqual, dateBeforeOrEqual, hasValidDate } from '@navikt/ft-form-validators';\nimport { Form, Datepicker } from '@navikt/ft-form-hooks';\n\nimport Oppgave from '../typer/oppgaveTsType';\n\nconst thirtyDaysFromNow = () => {\n  const result = new Date();\n  result.setDate(new Date().getDate() + 30);\n  return result;\n};\n\ntype FormValues = {\n  reserverTil: string;\n};\n\ninterface OwnProps {\n  showModal: boolean;\n  closeModal: (event: MouseEvent<HTMLButtonElement>) => void;\n  reserverTilDefault?: string;\n  oppgaveId: number;\n  endreReserverasjonState: () => void;\n  hentReserverteOppgaver: (params: any, keepData: boolean) => void;\n  endreOppgavereservasjon: (input: { oppgaveId: number; reserverTil: string }) => Promise<Oppgave[] | undefined>;\n}\n\n/**\n * OppgaveReservasjonEndringDatoModal.\n */\nconst OppgaveReservasjonEndringDatoModal: FunctionComponent<OwnProps> = ({\n  showModal,\n  closeModal,\n  reserverTilDefault,\n  oppgaveId,\n  hentReserverteOppgaver,\n  endreReserverasjonState,\n  endreOppgavereservasjon,\n}) => {\n  const intl = useIntl();\n\n  const endreOppgaveReservasjonFn = useCallback(\n    (reserverTil: string) =>\n      endreOppgavereservasjon({ oppgaveId, reserverTil }).then(() => {\n        endreReserverasjonState();\n        hentReserverteOppgaver({}, true);\n      }),\n    [],\n  );\n\n  const defaultValues = useMemo(\n    () => ({\n      reserverTil: reserverTilDefault ? dayjs(reserverTilDefault).format(ISO_DATE_FORMAT) : '',\n    }),\n    [reserverTilDefault],\n  );\n\n  const søkFormMethods = useForm<FormValues>({\n    defaultValues,\n  });\n\n  return (\n    <Form<FormValues> formMethods={søkFormMethods} onSubmit={values => endreOppgaveReservasjonFn(values.reserverTil)}>\n      <NavModal\n        width=\"small\"\n        open={showModal}\n        aria-label={intl.formatMessage({ id: 'OppgaveReservasjonEndringDatoModal.Header' })}\n        onClose={closeModal as () => void}\n      >\n        <NavModal.Header>\n          <Heading size=\"small\">\n            <FormattedMessage id=\"OppgaveReservasjonEndringDatoModal.Header\" />\n          </Heading>\n        </NavModal.Header>\n        <NavModal.Body>\n          <Datepicker\n            label=\"\"\n            name=\"reserverTil\"\n            validate={[hasValidDate, dateAfterOrEqual(new Date()), dateBeforeOrEqual(thirtyDaysFromNow())]}\n            disabledDays={{ fromDate: new Date(), toDate: thirtyDaysFromNow() }}\n          />\n        </NavModal.Body>\n        <NavModal.Footer>\n          <Button size=\"small\">\n            <FormattedMessage id=\"OppgaveReservasjonEndringDatoModal.Ok\" />\n          </Button>\n          <Button size=\"small\" variant=\"secondary\" onClick={closeModal} type=\"button\">\n            <FormattedMessage id=\"OppgaveReservasjonEndringDatoModal.Avbryt\" />\n          </Button>\n        </NavModal.Footer>\n      </NavModal>\n    </Form>\n  );\n};\n\nexport default OppgaveReservasjonEndringDatoModal;\n"],"names":["thirtyDaysFromNow","result","OppgaveReservasjonEndringDatoModal","showModal","closeModal","reserverTilDefault","oppgaveId","hentReserverteOppgaver","endreReserverasjonState","endreOppgavereservasjon","intl","useIntl","endreOppgaveReservasjonFn","useCallback","reserverTil","defaultValues","useMemo","dayjs","ISO_DATE_FORMAT","søkFormMethods","useForm","jsx","Form","values","jsxs","NavModal","Heading","FormattedMessage","Datepicker","hasValidDate","dateAfterOrEqual","dateBeforeOrEqual","Button","OppgaveReservasjonEndringDatoModal$1"],"mappings":"oTAWA,MAAAA,EAAA,IAAA,CACE,MAAAC,EAAA,IAAA,KACA,OAAAA,EAAA,QAAA,IAAA,KAAA,EAAA,QAAA,EAAA,EAAA,EACAA,CACF,EAmBAC,EAAA,CAAA,CAAyE,UAAAC,EACvE,WAAAC,EACA,mBAAAC,EACA,UAAAC,EACA,uBAAAC,EACA,wBAAAC,EACA,wBAAAC,CAEF,IAAA,CACE,MAAAC,EAAAC,IAEAC,EAAAC,EAAA,YAAkCC,GAAAL,EAAA,CAAA,UAAAH,EAAA,YAAAQ,CAAA,CAAA,EAAA,KAAA,IAAA,CAG5BN,IACAD,EAAA,CAAA,EAAA,EAAA,CAA+B,CAAA,EAChC,CAAA,CACF,EAGHQ,EAAAC,EAAA,QAAsB,KAAA,CACb,YAAAX,EAAAY,EAAAZ,CAAA,EAAA,OAAAa,CAAA,EAAA,EACiF,GACxF,CAAAb,CAAA,CACmB,EAGrBc,EAAAC,EAAA,CAA2C,cAAAL,CACzC,CAAA,EAGF,OAAAM,EAAAC,EAAA,CAAA,YAAAH,EAAA,SAAAI,GAAAX,EAAAW,EAAA,WAAA,EAAA,SAAAC,EAEIC,EAAC,CAAA,MAAA,QACO,KAAAtB,EACA,aAAAO,EAAA,cAAA,CAAA,GAAA,2CAAA,CAAA,EAC4E,QAAAN,EACzE,SAAA,CAETiB,EAAAI,EAAA,OAAA,CAAA,SAAAJ,EAAAK,EAAA,CAAA,KAAA,QAAA,SAAAL,EAAAM,EAAA,CAAA,GAAA,2CAAA,CAAA,CAAA,CAAA,EAAA,EAIAN,EAAAI,EAAA,KAAA,CAAA,SAAAJ,EAEEO,EAAC,CAAA,MAAA,GACO,KAAA,cACD,SAAA,CAAAC,EAAAC,EAAA,IAAA,IAAA,EAAAC,EAAA/B,EAAA,CAAA,CAAA,EACwF,aAAA,CAAA,SAAA,IAAA,KAAA,OAAAA,GAAA,CAC3B,CAAA,EAAA,EAEtEwB,EAAAC,EAAA,OAAA,CAAA,SAAA,CAEEJ,EAAAW,EAAA,CAAA,KAAA,QAAA,SAAAX,EAAAM,EAAA,CAAA,GAAA,uCAAA,CAAA,CAAA,CAAA,EAEAN,EAAAW,EAAA,CAAA,KAAA,QAAA,QAAA,YAAA,QAAA5B,EAAA,KAAA,SAAA,SAAAiB,EAAAM,EAAA,CAAA,GAAA,2CAAA,CAAA,EAAA,CAGA,EAAA,CACF,CAAA,CAAA,CAAA,CAAA,CAIR,EAEAM,EAAA/B;;;;;;"}