import{r as a,R as e}from"./index-DVXBtNgz.js";import{u as V,a as E,M as c,L as $,b as g,O as M,F as Z,f as J,h as T,C as K,r as I,B as y,i as Q,j as h,w as W,Z as X,k as D,l as q,g as Y,e as v,m as ee}from"./nb_NO-0DAKBKye.js";import"./v4-CQkTLCs1.js";import"./dayjs.min-Dkhc0ShP.js";import"./tslib.es6-CMwweBXX.js";import"./index-Cbx7Fas8.js";var n=(t=>(t.NOT_STARTED="NOT_STARTED",t.LOADING="LOADING",t.SUCCESS="SUCCESS",t.ERROR="ERROR",t))(n||{});const te={};a.createContext(te);a.createContext(void 0);const ne={errors:[]};a.createContext(ne);a.createContext(void 0);n.NOT_STARTED;n.NOT_STARTED;n.NOT_STARTED;const re="_modal_1pn1d_1",ae="_submitButton_1pn1d_5",se="_cancelButton_1pn1d_10",oe="_buttonDiv_1pn1d_14",p={modal:re,submitButton:ae,cancelButton:se,buttonDiv:oe},le=D(3),ie=q(500),ue=D(7),de=q(7),me=(t,o,r)=>t===n.SUCCESS&&!r?o.formatMessage({id:"LeggTilSaksbehandlerForm.FinnesIkke"}):r?`${r.navn}, ${r.avdelingsnavn.join(", ")}`:"",A=({showModal:t,closeModal:o,oppgaveId:r,toggleMenu:b,hentReserverteOppgaver:k,flyttOppgavereservasjon:P,hentSaksbehandler:B,hentSaksbehandlerState:u,saksbehandler:d,resetHentSaksbehandler:H})=>{const m=V(),L=a.useCallback(s=>B({brukerIdent:s}),[]),U=a.useCallback((s,G)=>P({oppgaveId:r,brukerIdent:s,begrunnelse:G}).then(()=>k({},!0)),[]);a.useEffect(()=>()=>{H()},[]);const S=E(),z=S.watch("brukerIdent"),R=E(),f=R.watch("begrunnelse");return e.createElement(c,{className:p.modal,open:t,"aria-label":m.formatMessage({id:"FlyttReservasjonModal.FlyttReservasjon"}),onClose:o},e.createElement(c.Header,null,e.createElement($,{size:"small"},e.createElement(g,{id:"FlyttReservasjonModal.FlyttReservasjon"}))),e.createElement(c.Body,null,e.createElement(M,{formMethods:S,onSubmit:s=>L(s.brukerIdent)},e.createElement(Z,null,e.createElement(J,null,e.createElement(T,null,e.createElement(K,{name:"brukerIdent",label:m.formatMessage({id:"FlyttReservasjonModal.Brukerident"}),validate:[I,ue,de],autoFocus:!0,autoComplete:!0})),e.createElement(T,{className:p.buttonDiv},e.createElement(y,{size:"small",variant:"primary",loading:u===n.LOADING,disabled:!z||u===n.LOADING},e.createElement(g,{id:"FlyttReservasjonModal.Sok"}))))),u===n.SUCCESS&&e.createElement(e.Fragment,null,e.createElement(Q,{size:"small"},me(u,m,d)),e.createElement(h,{sixteenPx:!0}))),e.createElement(h,{sixteenPx:!0}),e.createElement(M,{formMethods:R,onSubmit:s=>{b(),U(d?d.brukerIdent:"",s.begrunnelse)}},e.createElement(W,{name:"begrunnelse",label:m.formatMessage({id:"FlyttReservasjonModal.Begrunn"}),validate:[I,ie,le,X],maxLength:500}),e.createElement(h,{sixteenPx:!0}),e.createElement(c.Footer,null,e.createElement(y,{className:p.submitButton,size:"small",variant:"primary",disabled:!d||!f||f.length<3},e.createElement(g,{id:"FlyttReservasjonModal.Ok"})),e.createElement(y,{className:p.cancelButton,size:"small",variant:"secondary",onClick:o,type:"button"},e.createElement(g,{id:"FlyttReservasjonModal.Avbryt"}))))))},N=A;A.__docgenInfo={description:`FlyttReservasjonModal

Modal som lar en søke opp en saksbehandler som saken skal flyttes til. En kan også begrunne hvorfor saken skal flyttes.`,methods:[],displayName:"FlyttReservasjonModal",props:{showModal:{required:!0,tsType:{name:"boolean"},description:""},oppgaveId:{required:!0,tsType:{name:"number"},description:""},closeModal:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},toggleMenu:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},hentReserverteOppgaver:{required:!0,tsType:{name:"signature",type:"function",raw:"(params: any, keepData: boolean) => void",signature:{arguments:[{type:{name:"any"},name:"params"},{type:{name:"boolean"},name:"keepData"}],return:{name:"void"}}},description:""},flyttOppgavereservasjon:{required:!0,tsType:{name:"signature",type:"function",raw:"(params: { oppgaveId: number; brukerIdent: string; begrunnelse: string }) => Promise<void>",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ oppgaveId: number; brukerIdent: string; begrunnelse: string }",signature:{properties:[{key:"oppgaveId",value:{name:"number",required:!0}},{key:"brukerIdent",value:{name:"string",required:!0}},{key:"begrunnelse",value:{name:"string",required:!0}}]}},name:"params"}],return:{name:"Promise",elements:[{name:"void"}],raw:"Promise<void>"}}},description:""},hentSaksbehandler:{required:!0,tsType:{name:"signature",type:"function",raw:"(params: { brukerIdent: string }) => Promise<SaksbehandlerForFlytting | undefined>",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ brukerIdent: string }",signature:{properties:[{key:"brukerIdent",value:{name:"string",required:!0}}]}},name:"params"}],return:{name:"Promise",elements:[{name:"union",raw:"SaksbehandlerForFlytting | undefined",elements:[{name:"Readonly",elements:[{name:"signature",type:"object",raw:`{
  brukerIdent: string;
  navn: string;
  avdelingsnavn: string[];
}`,signature:{properties:[{key:"brukerIdent",value:{name:"string",required:!0}},{key:"navn",value:{name:"string",required:!0}},{key:"avdelingsnavn",value:{name:"Array",elements:[{name:"string"}],raw:"string[]",required:!0}}]}}],raw:`Readonly<{
  brukerIdent: string;
  navn: string;
  avdelingsnavn: string[];
}>`},{name:"undefined"}]}],raw:"Promise<SaksbehandlerForFlytting | undefined>"}}},description:""},hentSaksbehandlerState:{required:!0,tsType:{name:"RestApiState"},description:""},saksbehandler:{required:!1,tsType:{name:"Readonly",elements:[{name:"signature",type:"object",raw:`{
  brukerIdent: string;
  navn: string;
  avdelingsnavn: string[];
}`,signature:{properties:[{key:"brukerIdent",value:{name:"string",required:!0}},{key:"navn",value:{name:"string",required:!0}},{key:"avdelingsnavn",value:{name:"Array",elements:[{name:"string"}],raw:"string[]",required:!0}}]}}],raw:`Readonly<{
  brukerIdent: string;
  navn: string;
  avdelingsnavn: string[];
}>`},description:""},resetHentSaksbehandler:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""}}};const ce=Y(ee),he={title:"los/avdelingsleder/behandlingskoer/FlyttReservasjonModal",component:N,decorators:[ce]},x=({saksbehandler:t,hentReserverteOppgaver:o})=>{const[r,b]=a.useState(!1),k=()=>(b(!0),Promise.resolve(t));return e.createElement(N,{showModal:!0,oppgaveId:1,closeModal:v("button-click"),toggleMenu:v("button-click"),hentReserverteOppgaver:o,flyttOppgavereservasjon:()=>Promise.resolve(),hentSaksbehandler:k,hentSaksbehandlerState:r?n.SUCCESS:n.NOT_STARTED,saksbehandler:t,resetHentSaksbehandler:()=>{}})},l=x.bind({});l.args={hentReserverteOppgaver:v("button-click"),saksbehandler:void 0};const i=x.bind({});i.args={hentReserverteOppgaver:v("button-click"),saksbehandler:{brukerIdent:"R232323",navn:"Espen Utvikler",avdelingsnavn:["NAV Viken"]}};var F,O,j;l.parameters={...l.parameters,docs:{...(F=l.parameters)==null?void 0:F.docs,source:{originalSource:`({
  saksbehandler,
  hentReserverteOppgaver
}) => {
  const [harHentet, setHentet] = useState(false);
  const hentSaksbehandler = () => {
    setHentet(true);
    return Promise.resolve(saksbehandler);
  };
  return <FlyttReservasjonModal showModal oppgaveId={1} closeModal={action('button-click')} toggleMenu={action('button-click')} hentReserverteOppgaver={hentReserverteOppgaver} flyttOppgavereservasjon={() => Promise.resolve()} hentSaksbehandler={hentSaksbehandler} hentSaksbehandlerState={harHentet ? RestApiState.SUCCESS : RestApiState.NOT_STARTED} saksbehandler={saksbehandler} resetHentSaksbehandler={() => undefined} />;
}`,...(j=(O=l.parameters)==null?void 0:O.docs)==null?void 0:j.source}}};var w,C,_;i.parameters={...i.parameters,docs:{...(w=i.parameters)==null?void 0:w.docs,source:{originalSource:`({
  saksbehandler,
  hentReserverteOppgaver
}) => {
  const [harHentet, setHentet] = useState(false);
  const hentSaksbehandler = () => {
    setHentet(true);
    return Promise.resolve(saksbehandler);
  };
  return <FlyttReservasjonModal showModal oppgaveId={1} closeModal={action('button-click')} toggleMenu={action('button-click')} hentReserverteOppgaver={hentReserverteOppgaver} flyttOppgavereservasjon={() => Promise.resolve()} hentSaksbehandler={hentSaksbehandler} hentSaksbehandlerState={harHentet ? RestApiState.SUCCESS : RestApiState.NOT_STARTED} saksbehandler={saksbehandler} resetHentSaksbehandler={() => undefined} />;
}`,...(_=(C=i.parameters)==null?void 0:C.docs)==null?void 0:_.source}}};const Se=["Default","MedTreffPåSøk"];export{l as Default,i as MedTreffPåSøk,Se as __namedExportsOrder,he as default};
