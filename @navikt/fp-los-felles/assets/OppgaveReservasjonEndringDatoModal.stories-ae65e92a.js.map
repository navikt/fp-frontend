{"version":3,"file":"OppgaveReservasjonEndringDatoModal.stories-ae65e92a.js","sources":["../../../../node_modules/@navikt/ds-react/esm/typography/Heading.js","../../../../node_modules/@navikt/ds-react/esm/panel/Panel.js","../../src/endreReservasjon/OppgaveReservasjonEndringDatoModal.tsx"],"sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { forwardRef } from \"react\";\nimport cl from \"clsx\";\n/**\n * Part of a set of components for displaying text with consistent typography.\n *\n * @see [üìù Documentation](https://aksel.nav.no/komponenter/core/typography)\n * @see üè∑Ô∏è {@link HeadingProps}\n * @see [ü§ñ OverridableComponent](https://aksel.nav.no/grunnleggende/kode/overridablecomponent) support\n *\n * @example\n * ```jsx\n *     <Heading level=\"1\" size=\"xlarge\">\n *       Pengest√∏tte n√•r du er syk\n *     </Heading>\n * ```\n */\nexport const Heading = forwardRef((_a, ref) => {\n    var { level = \"1\", size, spacing = false, className, as } = _a, rest = __rest(_a, [\"level\", \"size\", \"spacing\", \"className\", \"as\"]);\n    let HeadingTag = as !== null && as !== void 0 ? as : `h${level}`;\n    return (React.createElement(HeadingTag, Object.assign({}, rest, { ref: ref, className: cl(className, \"navds-heading\", `navds-heading--${size}`, {\n            \"navds-typo--spacing\": spacing,\n        }) })));\n});\nexport default Heading;\n//# sourceMappingURL=Heading.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { forwardRef } from \"react\";\nimport cl from \"clsx\";\n/**\n * A component that displays a bordered panel with heading and body.\n *\n * @see [üìù Documentation](https://aksel.nav.no/komponenter/core/panel)\n * @see üè∑Ô∏è {@link PanelProps}\n * @see [ü§ñ OverridableComponent](https://aksel.nav.no/grunnleggende/kode/overridablecomponent) support\n *\n * @example\n * ```jsx\n * <Panel border>\n *   <Heading spacing level=\"2\" size=\"large\">\n *     S√∏k om √∏konomisk sosialhjelp\n *   </Heading>\n *   <BodyLong>\n *     Du kan s√∏ke om det du trenger √∏konomisk st√∏tte til.\n *   </BodyLong>\n * </Panel>\n * ```\n */\nexport const Panel = forwardRef((_a, ref) => {\n    var { children, className, border = false, as: Component = \"div\" } = _a, rest = __rest(_a, [\"children\", \"className\", \"border\", \"as\"]);\n    return (React.createElement(Component, Object.assign({ ref: ref, className: cl(\"navds-panel\", className, {\n            \"navds-panel--border\": border,\n        }) }, rest), children));\n});\nexport default Panel;\n//# sourceMappingURL=Panel.js.map","import React, { MouseEvent, FunctionComponent, useCallback, useMemo } from 'react';\nimport { useIntl, FormattedMessage } from 'react-intl';\nimport { useForm } from 'react-hook-form';\nimport dayjs from 'dayjs';\nimport { Panel, Button, Modal as NavModal, Heading } from '@navikt/ds-react';\nimport { ISO_DATE_FORMAT } from '@navikt/ft-utils';\nimport { dateAfterOrEqual, dateBeforeOrEqual, hasValidDate } from '@navikt/ft-form-validators';\nimport { Form, Datepicker } from '@navikt/ft-form-hooks';\nimport { FlexColumn, FlexContainer, FlexRow, VerticalSpacer } from '@navikt/ft-ui-komponenter';\n\nimport Oppgave from '../typer/oppgaveTsType';\n\nconst thirtyDaysFromNow = () => {\n  const result = new Date();\n  result.setDate(new Date().getDate() + 30);\n  return result;\n};\n\ntype FormValues = {\n  reserverTil: string;\n};\n\ninterface OwnProps {\n  showModal: boolean;\n  closeModal: (event: MouseEvent<HTMLButtonElement>) => void;\n  reserverTilDefault?: string;\n  oppgaveId: number;\n  endreReserverasjonState: () => void;\n  hentReserverteOppgaver: (params: any, keepData: boolean) => void;\n  endreOppgavereservasjon: (input: { oppgaveId: number; reserverTil: string }) => Promise<Oppgave[] | undefined>;\n}\n\n/**\n * OppgaveReservasjonEndringDatoModal.\n */\nconst OppgaveReservasjonEndringDatoModal: FunctionComponent<OwnProps> = ({\n  showModal,\n  closeModal,\n  reserverTilDefault,\n  oppgaveId,\n  hentReserverteOppgaver,\n  endreReserverasjonState,\n  endreOppgavereservasjon,\n}) => {\n  const intl = useIntl();\n\n  const endreOppgaveReservasjonFn = useCallback(\n    (reserverTil: string) =>\n      endreOppgavereservasjon({ oppgaveId, reserverTil }).then(() => {\n        endreReserverasjonState();\n        hentReserverteOppgaver({}, true);\n      }),\n    [],\n  );\n\n  const defaultValues = useMemo(\n    () => ({\n      reserverTil: reserverTilDefault ? dayjs(reserverTilDefault).format(ISO_DATE_FORMAT) : '',\n    }),\n    [reserverTilDefault],\n  );\n\n  const s√∏kFormMethods = useForm<FormValues>({\n    defaultValues,\n  });\n\n  return (\n    <NavModal\n      open={showModal}\n      closeButton={false}\n      aria-label={intl.formatMessage({ id: 'OppgaveReservasjonEndringDatoModal.Header' })}\n      onClose={closeModal as () => void}\n    >\n      <NavModal.Content>\n        <Form<FormValues>\n          formMethods={s√∏kFormMethods}\n          onSubmit={values => endreOppgaveReservasjonFn(values.reserverTil)}\n        >\n          <Panel>\n            <Heading size=\"small\">\n              <FormattedMessage id=\"OppgaveReservasjonEndringDatoModal.Header\" />\n            </Heading>\n            <VerticalSpacer eightPx />\n            <Datepicker\n              label=\"\"\n              name=\"reserverTil\"\n              validate={[hasValidDate, dateAfterOrEqual(new Date()), dateBeforeOrEqual(thirtyDaysFromNow())]}\n              disabledDays={{ fromDate: new Date(), toDate: thirtyDaysFromNow() }}\n              strategy=\"fixed\"\n            />\n            <VerticalSpacer sixteenPx />\n            <FlexContainer>\n              <FlexRow>\n                <FlexColumn>\n                  <Button size=\"small\" variant=\"secondary\" autoFocus>\n                    <FormattedMessage id=\"OppgaveReservasjonEndringDatoModal.Ok\" />\n                  </Button>\n                </FlexColumn>\n                <FlexColumn>\n                  <Button size=\"small\" variant=\"secondary\" onClick={closeModal} type=\"button\">\n                    <FormattedMessage id=\"OppgaveReservasjonEndringDatoModal.Avbryt\" />\n                  </Button>\n                </FlexColumn>\n              </FlexRow>\n            </FlexContainer>\n          </Panel>\n        </Form>\n      </NavModal.Content>\n    </NavModal>\n  );\n};\n\nexport default OppgaveReservasjonEndringDatoModal;\n"],"names":["__rest","this","s","e","t","p","i","Heading","forwardRef","_a","ref","level","size","spacing","className","as","rest","HeadingTag","React","cl","Heading$1","Panel","children","border","Component","Panel$1","thirtyDaysFromNow","result","OppgaveReservasjonEndringDatoModal","showModal","closeModal","reserverTilDefault","oppgaveId","hentReserverteOppgaver","endreReserverasjonState","endreOppgavereservasjon","intl","useIntl","endreOppgaveReservasjonFn","useCallback","reserverTil","defaultValues","useMemo","dayjs","ISO_DATE_FORMAT","s√∏kFormMethods","useForm","jsx","NavModal","Form","values","jsxs","FormattedMessage","VerticalSpacer","Datepicker","hasValidDate","dateAfterOrEqual","dateBeforeOrEqual","FlexContainer","FlexRow","FlexColumn","Button","OppgaveReservasjonEndringDatoModal$1"],"mappings":"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","x_google_ignoreList":[0,1]}