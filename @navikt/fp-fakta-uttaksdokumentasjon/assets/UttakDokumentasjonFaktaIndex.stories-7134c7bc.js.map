{"version":3,"file":"UttakDokumentasjonFaktaIndex.stories-7134c7bc.js","sources":["../../../kodeverk/src/aksjonspunktCodes.ts","../../../kodeverk/src/aksjonspunktStatus.ts","../../../../node_modules/@navikt/aksel-icons/dist/react/esm/Checkmark.js","../../../../node_modules/@navikt/aksel-icons/dist/react/esm/FileXMark.js","../../../../node_modules/@navikt/aksel-icons/dist/react/esm/Pencil.js","../../../../node_modules/@navikt/aksel-icons/dist/react/esm/Scissors.js","../../../../node_modules/@navikt/aksel-icons/dist/react/esm/XMarkOctagon.js","../../../fakta-felles/src/components/FaktaBegrunnelseTextFieldNew.tsx","../../../fakta-felles/src/components/FaktaSubmitButtonNew.tsx","../../src/components/UttakDokumentasjonFaktaDetailForm.tsx","../../src/components/UttakDokumentasjonFaktaTable.tsx","../../src/components/UttakDokumentasjonFaktaForm.tsx","../../src/UttakDokumentasjonFaktaIndex.tsx"],"sourcesContent":["// TODO Fjern denne fila og heller legg aksjonspunkta på pakkene dei blir brukt i\n\nexport type OverstyringAksjonspunkter =\n  | AksjonspunktCode.OVERSTYR_SOKNADSFRISTVILKAR\n  | AksjonspunktCode.OVERSTYR_ADOPSJONSVILKAR\n  | AksjonspunktCode.OVERSTYR_FODSELSVILKAR\n  | AksjonspunktCode.OVERSTYR_MEDLEMSKAPSVILKAR\n  | AksjonspunktCode.OVERSTYR_LØPENDE_MEDLEMSKAPSVILKAR\n  | AksjonspunktCode.OVERSTYRING_AV_ADOPSJONSVILKÅRET_FP\n  | AksjonspunktCode.OVERSTYR_FODSELSVILKAR_FAR_MEDMOR\n  | AksjonspunktCode.OVERSTYRING_AV_OPPTJENINGSVILKARET;\n\nenum AksjonspunktCode {\n  TERMINBEKREFTELSE = '5001',\n  ADOPSJONSDOKUMENTAJON = '5004',\n  OM_ADOPSJON_GJELDER_EKTEFELLES_BARN = '5005',\n  OM_SOKER_ER_MANN_SOM_ADOPTERER_ALENE = '5006',\n  SOKNADSFRISTVILKARET = '5007',\n  OMSORGSOVERTAKELSE = '5008',\n  MANUELL_VURDERING_AV_OMSORGSVILKARET = '5011',\n  REGISTRER_PAPIRSOKNAD_ENGANGSSTONAD = '5012',\n  MANUELL_VURDERING_AV_FORELDREANSVARSVILKARET_2_LEDD = '5013',\n  MANUELL_VURDERING_AV_FORELDREANSVARSVILKARET_4_LEDD = '5014',\n  FORESLA_VEDTAK = '5015',\n  FATTER_VEDTAK = '5016',\n  SOKERS_OPPLYSNINGSPLIKT_MANU = '5017',\n  VEDTAK_UTEN_TOTRINNSKONTROLL = '5018',\n  AVKLAR_LOVLIG_OPPHOLD = '5019',\n  AVKLAR_OM_BRUKER_ER_BOSATT = '5020',\n  AVKLAR_OM_BRUKER_HAR_GYLDIG_PERIODE = '5021',\n  AVKLAR_OPPHOLDSRETT = '5023',\n  VARSEL_REVURDERING_ETTERKONTROLL = '5025',\n  VARSEL_REVURDERING_MANUELL = '5026',\n  SJEKK_MANGLENDE_FODSEL = '5027',\n  FORESLA_VEDTAK_MANUELT = '5028',\n  KONTROLLER_STOR_ETTERBETALING_SØKER = '5029',\n  AVKLAR_VERGE = '5030',\n  AVKLAR_OM_STONAD_GJELDER_SAMME_BARN = '5031',\n  AVKLAR_OM_STONAD_TIL_ANNEN_FORELDER_GJELDER_SAMME_BARN = '5032',\n  VURDERE_ANNEN_YTELSE = '5033',\n  VURDERE_DOKUMENT = '5034',\n  BEHANDLE_KLAGE_NFP = '5035',\n  BEHANDLE_KLAGE_NK = '5036',\n  VURDER_INNSYN = '5037',\n  REGISTRER_PAPIRSOKNAD_FORELDREPENGER = '5040',\n  VURDER_ARBEIDSFORHOLD_PERMISJON = '5041',\n  VURDER_SOKNADSFRIST_FORELDREPENGER = '5043',\n  KONTROLLER_AUTOMATISK_BESTEBEREGNING = '5048',\n  VURDER_PERIODER_MED_OPPTJENING = '5051',\n  AVKLAR_FORTSATT_MEDLEMSKAP = '5053',\n  AVKLAR_VILKAR_FOR_FORELDREANSVAR = '5054',\n  KONTROLLER_REVURDERINGSBEHANDLING_VARSEL_VED_UGUNST = '5055',\n  KONTROLL_AV_MAUNELT_OPPRETTET_REVURDERINGSBEHANDLING = '5056',\n  REGISTRER_PAPIR_ENDRINGSØKNAD_FORELDREPENGER = '5057',\n  REGISTRER_PAPIRSOKNAD_SVANGERSKAPSPENGER = '5096',\n  MANUELL_KONTROLL_AV_OM_BRUKER_HAR_ALENEOMSORG = '5060',\n  MANUELL_KONTROLL_AV_OM_BRUKER_HAR_OMSORG = '5061',\n  MANUELL_KONTROLL_AV_BESTEBEREGNING = '5062',\n  FAKTA_UTTAK_GRADERING_UKJENT_AKTIVITET_KODE = '5063',\n  FAKTA_UTTAK_INGEN_PERIODER_KODE = '5064',\n  FAKTA_UTTAK_MANUELT_SATT_STARTDATO_ULIK_SØKNAD_STARTDATO_KODE = '5065',\n  FAKTA_UTTAK_GRADERING_AKTIVITET_UTEN_BEREGNINGSGRUNNLAG_KODE = '5066',\n  TETTE_SAKER = '5067',\n  AUTOMATISK_MARKERING_AV_UTENLANDSSAK = '5068',\n  ANNENPART_EØS = '5069',\n  FASTSETT_UTTAKPERIODER = '5071',\n  TILKNYTTET_STORTINGET = '5072',\n  KONTROLLER_REALITETSBEHANDLING_ELLER_KLAGE = '5073',\n  VURDER_UTTAK_DOKUMENTASJON = '5074',\n  KONTROLLER_OPPLYSNINGER_OM_FORDELING_AV_STØNADSPERIODEN = '5075',\n  KONTROLLER_OPPLYSNINGER_OM_DØD = '5076',\n  KONTROLLER_OPPLYSNINGER_OM_SØKNADSFRIST = '5077',\n  KONTROLLER_TILSTØTENDE_YTELSER_INNVILGET = '5078',\n  KONTROLLER_TILSTØTENDE_YTELSER_OPPHØRT = '5079',\n  VURDERING_AV_FORMKRAV_KLAGE_NFP = '5082',\n  VURDER_FORMKRAV_NK = '5083',\n  VURDER_FEILUTBETALING = '5084',\n  VURDER_ARBEIDSFORHOLD_INNTEKTSMELDING = '5085',\n  AVKLAR_ANNEN_FORELDER_RETT = '5086',\n  SOKERS_OPPLYSNINGSPLIKT_OVST = '6002',\n  OVERSTYR_FODSELSVILKAR = '6003',\n  OVERSTYR_ADOPSJONSVILKAR = '6004',\n  OVERSTYR_MEDLEMSKAPSVILKAR = '6005',\n  OVERSTYR_SOKNADSFRISTVILKAR = '6006',\n  OVERSTYR_BEREGNING = '6007',\n  OVERSTYRING_AV_UTTAKPERIODER = '6008',\n  OVERSTYR_FODSELSVILKAR_FAR_MEDMOR = '6009',\n  OVERSTYRING_AV_ADOPSJONSVILKÅRET_FP = '6010',\n  OVERSTYRING_AV_OPPTJENINGSVILKARET = '6011',\n  VURDER_OPPTJENINGSVILKARET = '5089',\n  OVERSTYR_LØPENDE_MEDLEMSKAPSVILKAR = '6012',\n  OVERSTYR_AVKLAR_STARTDATO = '6045',\n  OVERSTYR_FAKTA_UTTAK = '6065',\n  AUTO_MANUELT_SATT_PÅ_VENT = '7001',\n  AUTO_VENT_PÅ_FODSELREGISTRERING = '7002',\n  AUTO_VENTER_PÅ_KOMPLETT_SOKNAD = '7003',\n  AUTO_VENT_GRADERING_UTEN_BEREGNINGSGRUNNLAG = '7019',\n  AUTO_VENT_ANKE_OVERSENDT_TIL_TRYGDERETTEN = '7033',\n  FODSELTILRETTELEGGING = '5091',\n  SVANGERSKAPSVILKARET = '5092',\n  VURDER_FARESIGNALER = '5095',\n  FASTSETT_BEREGNINGSGRUNNLAG_ARBEIDSTAKER_FRILANS = '5038',\n  VURDER_VARIG_ENDRET_ELLER_NYOPPSTARTET_NAERING_SELVSTENDIG_NAERINGSDRIVENDE = '5039',\n  FASTSETT_BRUTTO_BEREGNINGSGRUNNLAG_SELVSTENDIG_NAERINGSDRIVENDE = '5042',\n  FASTSETT_BEREGNINGSGRUNNLAG_TIDSBEGRENSET_ARBEIDSFORHOLD = '5047',\n  FASTSETT_BEREGNINGSGRUNNLAG_SN_NY_I_ARBEIDSLIVET = '5049',\n  VURDER_GRADERING_UTEN_BEREGNINGSGRUNNLAG = '5050',\n  VURDER_FAKTA_FOR_ATFL_SN = '5058',\n  AVKLAR_AKTIVITETER = '5052',\n  OVERSTYRING_AV_BEREGNINGSAKTIVITETER = '6014',\n  OVERSTYRING_AV_BEREGNINGSGRUNNLAG = '6015',\n  FORDEL_BEREGNINGSGRUNNLAG = '5046',\n  VURDER_REFUSJON_BERGRUNN = '5059',\n  // Oppstår ikke lenger, brukes kun til å vise tidligere løst aksjonspunkt\n  AVKLAR_ARBEIDSFORHOLD = '5080',\n  VURDER_TILBAKETREKK = '5090',\n}\n\nconst uttakAksjonspunkter = [\n  AksjonspunktCode.OVERSTYRING_AV_UTTAKPERIODER,\n  AksjonspunktCode.FASTSETT_UTTAKPERIODER,\n  AksjonspunktCode.TILKNYTTET_STORTINGET,\n  AksjonspunktCode.TETTE_SAKER,\n  AksjonspunktCode.ANNENPART_EØS,\n  AksjonspunktCode.KONTROLLER_REALITETSBEHANDLING_ELLER_KLAGE,\n  AksjonspunktCode.KONTROLLER_OPPLYSNINGER_OM_FORDELING_AV_STØNADSPERIODEN,\n  AksjonspunktCode.KONTROLLER_OPPLYSNINGER_OM_DØD,\n  AksjonspunktCode.KONTROLLER_OPPLYSNINGER_OM_SØKNADSFRIST,\n  AksjonspunktCode.KONTROLLER_TILSTØTENDE_YTELSER_INNVILGET,\n  AksjonspunktCode.KONTROLLER_TILSTØTENDE_YTELSER_OPPHØRT,\n];\n\nconst faktaUttakAksjonspunkter = [\n  AksjonspunktCode.OVERSTYR_FAKTA_UTTAK,\n  AksjonspunktCode.FAKTA_UTTAK_GRADERING_UKJENT_AKTIVITET_KODE,\n  AksjonspunktCode.FAKTA_UTTAK_INGEN_PERIODER_KODE,\n  AksjonspunktCode.FAKTA_UTTAK_MANUELT_SATT_STARTDATO_ULIK_SØKNAD_STARTDATO_KODE,\n  AksjonspunktCode.FAKTA_UTTAK_GRADERING_AKTIVITET_UTEN_BEREGNINGSGRUNNLAG_KODE,\n];\n\nconst aksjonspunktIsOfType =\n  (validAksjonspunktCodes: string[]) =>\n  (aksjonspunktCode: string): boolean =>\n    validAksjonspunktCodes.includes(aksjonspunktCode);\n\ntype Aksjonspunkt = Readonly<{\n  definisjon: string;\n  status: string;\n  begrunnelse?: string;\n  vilkarType?: string;\n  toTrinnsBehandling?: boolean;\n  toTrinnsBehandlingGodkjent?: boolean;\n  vurderPaNyttArsaker?: string[];\n  besluttersBegrunnelse?: string;\n  aksjonspunktType?: string;\n  kanLoses: boolean;\n  endretAv?: string;\n  endretTidspunkt?: string;\n}>;\n\nexport const hasAksjonspunkt = (aksjonspunktKode: string, aksjonspunkter: Aksjonspunkt[]): boolean =>\n  aksjonspunkter.some(ap => ap.definisjon === aksjonspunktKode);\n\nexport const isUttakAksjonspunkt = aksjonspunktIsOfType(uttakAksjonspunkter);\n\nexport const isFaktaUttakAksjonspunkt = aksjonspunktIsOfType(faktaUttakAksjonspunkter);\n\nexport default AksjonspunktCode;\n","const aksjonspunktStatus = {\n  OPPRETTET: 'OPPR',\n  UTFORT: 'UTFO',\n  AVBRUTT: 'AVBR',\n};\n\nexport default aksjonspunktStatus;\n\nexport const isAksjonspunktOpen = (statusKode: string): boolean => statusKode === aksjonspunktStatus.OPPRETTET;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nimport { useId } from \"./util/useId\";\nconst SvgCheckmark = forwardRef((_a, ref) => {\n    var { title, titleId: _titleId } = _a, props = __rest(_a, [\"title\", \"titleId\"]);\n    let titleId = useId();\n    titleId = title ? (_titleId ? _titleId : \"title-\" + titleId) : undefined;\n    return (React.createElement(\"svg\", Object.assign({ width: \"1em\", height: \"1em\", viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", focusable: false, role: \"img\", ref: ref, \"aria-labelledby\": titleId }, props),\n        title ? React.createElement(\"title\", { id: titleId }, title) : null,\n        React.createElement(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M18.998 6.94a.75.75 0 0 1 .063 1.058l-8 9a.75.75 0 0 1-1.091.032l-5-5a.75.75 0 1 1 1.06-1.06l4.438 4.437 7.471-8.405A.75.75 0 0 1 19 6.939Z\", fill: \"currentColor\" })));\n});\nexport default SvgCheckmark;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nimport { useId } from \"./util/useId\";\nconst SvgFileXMark = forwardRef((_a, ref) => {\n    var { title, titleId: _titleId } = _a, props = __rest(_a, [\"title\", \"titleId\"]);\n    let titleId = useId();\n    titleId = title ? (_titleId ? _titleId : \"title-\" + titleId) : undefined;\n    return (React.createElement(\"svg\", Object.assign({ width: \"1em\", height: \"1em\", viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", focusable: false, role: \"img\", ref: ref, \"aria-labelledby\": titleId }, props),\n        title ? React.createElement(\"title\", { id: titleId }, title) : null,\n        React.createElement(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M6.75 19.25V4.75h6.5V7.5c0 .69.56 1.25 1.25 1.25h2.75v10.5H6.75Zm9.44-12-1.44-1.44v1.44h1.44Zm-9.69-4c-.69 0-1.25.56-1.25 1.25v15c0 .69.56 1.25 1.25 1.25h11c.69 0 1.25-.56 1.25-1.25V8a.75.75 0 0 0-.22-.53l-4-4a.75.75 0 0 0-.53-.22H6.5Zm7.53 8.72a.75.75 0 0 1 0 1.06l-.97.97.97.97a.75.75 0 1 1-1.06 1.06l-.97-.97-.97.97a.75.75 0 1 1-1.06-1.06l.97-.97-.97-.97a.75.75 0 1 1 1.06-1.06l.97.97.97-.97a.75.75 0 0 1 1.06 0Z\", fill: \"currentColor\" })));\n});\nexport default SvgFileXMark;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nimport { useId } from \"./util/useId\";\nconst SvgPencil = forwardRef((_a, ref) => {\n    var { title, titleId: _titleId } = _a, props = __rest(_a, [\"title\", \"titleId\"]);\n    let titleId = useId();\n    titleId = title ? (_titleId ? _titleId : \"title-\" + titleId) : undefined;\n    return (React.createElement(\"svg\", Object.assign({ width: \"1em\", height: \"1em\", viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", focusable: false, role: \"img\", ref: ref, \"aria-labelledby\": titleId }, props),\n        title ? React.createElement(\"title\", { id: titleId }, title) : null,\n        React.createElement(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M19.638 4.417a3.252 3.252 0 0 0-4.608-.008l-9.378 9.379a.75.75 0 0 0-.191.324l-1.414 4.95a.75.75 0 0 0 .925.927l4.94-1.398a.75.75 0 0 0 .327-.191l9.39-9.391a3.252 3.252 0 0 0 .01-4.592ZM16.091 5.47a1.752 1.752 0 0 1 2.478 2.478l-.23.23-2.477-2.479.229-.23ZM14.8 6.76 6.85 14.71l-.991 3.47 3.457-.979 7.963-7.963-2.478-2.478Z\", fill: \"currentColor\" })));\n});\nexport default SvgPencil;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nimport { useId } from \"./util/useId\";\nconst SvgScissors = forwardRef((_a, ref) => {\n    var { title, titleId: _titleId } = _a, props = __rest(_a, [\"title\", \"titleId\"]);\n    let titleId = useId();\n    titleId = title ? (_titleId ? _titleId : \"title-\" + titleId) : undefined;\n    return (React.createElement(\"svg\", Object.assign({ width: \"1em\", height: \"1em\", viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", focusable: false, role: \"img\", ref: ref, \"aria-labelledby\": titleId }, props),\n        title ? React.createElement(\"title\", { id: titleId }, title) : null,\n        React.createElement(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M4.25 7.5a1.75 1.75 0 1 1 3.5 0 1.75 1.75 0 0 1-3.5 0Zm3.72 2.585A3.25 3.25 0 1 1 9.1 8.478l1.456.822 6.506-1.952a1.75 1.75 0 0 1 .79-.05l2.771.462a.75.75 0 0 1 .234 1.4l-5.336 2.89 5.326 2.785a.75.75 0 0 1-.224 1.405l-2.77.462a1.75 1.75 0 0 1-.791-.05l-6.46-1.938-1.5.813a3.25 3.25 0 1 1-1.132-1.612 3.252 3.252 0 0 0 0-3.83Zm4.494 3.621 1.467-.795 4.24 2.217-.565.094a.25.25 0 0 1-.113-.007l-5.03-1.509ZM7.39 15.438A1.742 1.742 0 0 1 7.75 16.5a1.75 1.75 0 1 1-.359-1.062Zm2.493-2.04a4.773 4.773 0 0 0 .11-2.363l7.499-2.25a.25.25 0 0 1 .113-.007l.616.103-8.338 4.516Z\", fill: \"currentColor\" })));\n});\nexport default SvgScissors;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nimport { useId } from \"./util/useId\";\nconst SvgXMarkOctagon = forwardRef((_a, ref) => {\n    var { title, titleId: _titleId } = _a, props = __rest(_a, [\"title\", \"titleId\"]);\n    let titleId = useId();\n    titleId = title ? (_titleId ? _titleId : \"title-\" + titleId) : undefined;\n    return (React.createElement(\"svg\", Object.assign({ width: \"1em\", height: \"1em\", viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", focusable: false, role: \"img\", ref: ref, \"aria-labelledby\": titleId }, props),\n        title ? React.createElement(\"title\", { id: titleId }, title) : null,\n        React.createElement(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M7.742 2.47a.75.75 0 0 1 .53-.22h7.456a.75.75 0 0 1 .53.22l5.272 5.272c.141.14.22.331.22.53v7.456a.75.75 0 0 1-.22.53l-5.272 5.272a.75.75 0 0 1-.53.22H8.272a.75.75 0 0 1-.53-.22L2.47 16.258a.75.75 0 0 1-.22-.53V8.272a.75.75 0 0 1 .22-.53L7.742 2.47Zm.84 1.28L3.75 8.583v6.834l4.833 4.833h6.834l4.833-4.833V8.583L15.417 3.75H8.583Zm.448 4.22a.75.75 0 0 0-1.06 1.06L10.94 12l-2.97 2.97a.75.75 0 1 0 1.06 1.06L12 13.06l2.97 2.97a.75.75 0 1 0 1.06-1.06L13.06 12l2.97-2.97a.75.75 0 0 0-1.06-1.06L12 10.94 9.03 7.97Z\", fill: \"currentColor\" })));\n});\nexport default SvgXMarkOctagon;\n","import React, { FunctionComponent } from 'react';\nimport { RawIntlProvider } from 'react-intl';\n\nimport { decodeHtmlEntity, createIntl } from '@navikt/ft-utils';\nimport { hasValidText, maxLength, minLength, required } from '@navikt/ft-form-validators';\nimport { TextAreaField } from '@navikt/ft-form-hooks';\nimport { Aksjonspunkt } from '@navikt/fp-types';\n\nimport styles from './faktaBegrunnelseTextField.module.css';\n\nimport messages from '../../i18n/nb_NO.json';\n\nconst intl = createIntl(messages);\n\nconst minLength3 = minLength(3);\nconst maxLength1500 = maxLength(1500);\n\ntype OwnProps = {\n  isReadOnly: boolean;\n  isSubmittable: boolean;\n  hasBegrunnelse: boolean;\n  label?: string;\n  hasVurderingText?: boolean;\n  name?: string;\n};\n\nexport type FormValues = {\n  [key: string]: any;\n};\n\ntype TransformedValues = {\n  begrunnelse: string;\n};\n\ninterface StaticFunctions {\n  buildInitialValues: (aksjonspunkt?: Aksjonspunkt[] | Aksjonspunkt, begrunnelseFieldName?: string) => FormValues;\n  transformValues: (values: FormValues, name?: string) => TransformedValues;\n}\n\n/**\n * FaktaBegrunnelseTextField\n */\nconst FaktaBegrunnelseTextField: FunctionComponent<OwnProps> & StaticFunctions = ({\n  isReadOnly,\n  isSubmittable,\n  hasBegrunnelse,\n  label,\n  hasVurderingText = false,\n  name = 'begrunnelse',\n}) => {\n  const code = hasVurderingText ? 'FaktaBegrunnelseTextField.Vurdering' : 'FaktaBegrunnelseTextField.BegrunnEndringene';\n  const textAreaLabel = label || intl.formatMessage({ id: code });\n  return (\n    <RawIntlProvider value={intl}>\n      {(isSubmittable || hasBegrunnelse) && (\n        <div className={styles.begrunnelseTextField}>\n          <TextAreaField\n            name={name}\n            label={isReadOnly ? '' : textAreaLabel}\n            validate={[required, minLength3, maxLength1500, hasValidText]}\n            maxLength={1500}\n            readOnly={isReadOnly}\n          />\n        </div>\n      )}\n    </RawIntlProvider>\n  );\n};\n\nconst getBegrunnelse = (aksjonspunkt?: Aksjonspunkt[] | Aksjonspunkt): string | undefined => {\n  if (aksjonspunkt && Array.isArray(aksjonspunkt)) {\n    return aksjonspunkt.length > 0 ? aksjonspunkt[0].begrunnelse : '';\n  }\n  return !!aksjonspunkt && !Array.isArray(aksjonspunkt) ? aksjonspunkt.begrunnelse : '';\n};\n\nFaktaBegrunnelseTextField.buildInitialValues = (\n  aksjonspunkt?: Aksjonspunkt[] | Aksjonspunkt,\n  begrunnelseFieldName = 'begrunnelse',\n): FormValues => ({\n  [begrunnelseFieldName]: decodeHtmlEntity(getBegrunnelse(aksjonspunkt)),\n});\n\nFaktaBegrunnelseTextField.transformValues = (values: FormValues, name = 'begrunnelse'): TransformedValues => ({\n  begrunnelse: values[name] as string,\n});\n\nexport default FaktaBegrunnelseTextField;\n","import React, { FunctionComponent } from 'react';\nimport { RawIntlProvider, FormattedMessage } from 'react-intl';\nimport { Button } from '@navikt/ds-react';\n\nimport { createIntl } from '@navikt/ft-utils';\nimport { ariaCheck } from '@navikt/ft-form-validators';\n\nimport messages from '../../i18n/nb_NO.json';\n\nconst intl = createIntl(messages);\n\nconst isDisabled = (isDirty: boolean, isSubmitting: boolean, isSubmittable: boolean): boolean => {\n  if (!isSubmittable || isSubmitting) {\n    return true;\n  }\n  return !isDirty;\n};\n\ninterface OwnProps {\n  buttonText?: string;\n  isReadOnly: boolean;\n  isSubmittable: boolean;\n  onClick?: (event: React.MouseEvent) => void;\n  isSubmitting: boolean;\n  isDirty: boolean;\n}\n\n/**\n * FaktaSubmitButton\n */\nexport const FaktaSubmitButton: FunctionComponent<OwnProps> = ({\n  isReadOnly,\n  isSubmittable,\n  buttonText,\n  onClick,\n  isSubmitting,\n  isDirty,\n}) => (\n  <RawIntlProvider value={intl}>\n    {!isReadOnly && (\n      <Button\n        size=\"small\"\n        variant=\"primary\"\n        loading={isSubmitting}\n        disabled={isDisabled(isDirty, isSubmitting, isSubmittable)}\n        onClick={onClick || ariaCheck}\n        type={onClick ? 'button' : 'submit'}\n      >\n        {!!buttonText && buttonText}\n        {!buttonText && <FormattedMessage id=\"SubmitButton.ConfirmInformation\" />}\n      </Button>\n    )}\n  </RawIntlProvider>\n);\n\nexport default FaktaSubmitButton;\n","import React, { FunctionComponent, useState } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { useFieldArray, useForm } from 'react-hook-form';\nimport dayjs from 'dayjs';\nimport { BodyShort, Button, Label } from '@navikt/ds-react';\nimport { required } from '@navikt/ft-form-validators';\nimport { PencilIcon, ScissorsIcon } from '@navikt/aksel-icons';\nimport { ISO_DATE_FORMAT } from '@navikt/ft-utils';\nimport { Form, RadioGroupPanel } from '@navikt/ft-form-hooks';\nimport {\n  AvsnittSkiller,\n  DateLabel,\n  FlexColumn,\n  FlexContainer,\n  FlexRow,\n  VerticalSpacer,\n} from '@navikt/ft-ui-komponenter';\n\nimport { DokumentasjonVurderingBehov, UttakVurdering } from '@navikt/fp-types';\n\nimport DelOppPeriodeModal from './DelOppPeriodeModal';\n\nimport styles from './uttakDokumentasjonFaktaDetailForm.module.css';\n\ntype FormValues = {\n  perioder: DokumentasjonVurderingBehov[];\n};\n\ninterface OwnProps {\n  valgtDokBehov: DokumentasjonVurderingBehov;\n  readOnly: boolean;\n  oppdaterDokBehov: (dokBehov: { perioder: DokumentasjonVurderingBehov[] }) => void;\n  avbrytEditeringAvAktivitetskrav: () => void;\n}\n\nconst UttakDokumentasjonFaktaDetailForm: FunctionComponent<OwnProps> = ({\n  valgtDokBehov,\n  readOnly,\n  avbrytEditeringAvAktivitetskrav,\n  oppdaterDokBehov,\n}) => {\n  const intl = useIntl();\n\n  const [sistOppdeltPeriodeIndex, setSistOppdeltPeriodeIndex] = useState<number>();\n  const [valgtPeriodeIndex, settValgtPeriodeIndex] = useState<number | undefined>();\n\n  const formMethods = useForm<FormValues>({\n    defaultValues: {\n      perioder: [valgtDokBehov],\n    },\n  });\n\n  const { fields, append, update, remove } = useFieldArray({\n    control: formMethods.control,\n    name: 'perioder',\n  });\n\n  const perioder = formMethods.watch('perioder');\n\n  const lagNyPeriode = (dato: string) => {\n    if (valgtPeriodeIndex !== undefined) {\n      const periode = perioder[valgtPeriodeIndex];\n      const nyPeriode = {\n        ...periode,\n        tom: dato,\n      };\n      update(valgtPeriodeIndex, nyPeriode);\n      append({\n        ...periode,\n        fom: dayjs(dato).add(1, 'day').format(ISO_DATE_FORMAT),\n        tom: periode.tom,\n        vurdering: undefined,\n      });\n\n      settValgtPeriodeIndex(undefined);\n      setSistOppdeltPeriodeIndex(valgtPeriodeIndex);\n    }\n  };\n\n  const oppdaterOgNullstillPerioder = (dato: string) => {\n    if (valgtPeriodeIndex !== undefined) {\n      settValgtPeriodeIndex(undefined);\n\n      for (let i = fields.length - 1; i > valgtPeriodeIndex + 1; i -= 1) {\n        remove(i);\n      }\n\n      update(valgtPeriodeIndex, {\n        ...perioder[valgtPeriodeIndex],\n        tom: dato,\n      });\n      update(valgtPeriodeIndex + 1, {\n        ...perioder[valgtPeriodeIndex + 1],\n        fom: dayjs(dato).add(1, 'day').format(ISO_DATE_FORMAT),\n        tom: valgtDokBehov.tom,\n      });\n\n      setSistOppdeltPeriodeIndex(valgtPeriodeIndex);\n    }\n  };\n\n  const vurderingsalternativer = [\n    {\n      value: UttakVurdering.GODKJENT,\n      label: intl.formatMessage({ id: 'UttakDokumentasjonFaktaDetailForm.Godkjent' }),\n    },\n    {\n      value: UttakVurdering.IKKE_GODKJENT,\n      label: intl.formatMessage({ id: 'UttakDokumentasjonFaktaDetailForm.IkkeGodkjent' }),\n    },\n  ];\n\n  if (valgtDokBehov.årsak.includes('AKTIVITETSKRAV')) {\n    vurderingsalternativer.push({\n      value: UttakVurdering.IKKE_DOKUMENTERT,\n      label: intl.formatMessage({ id: 'UttakDokumentasjonFaktaDetailForm.IkkeDokumentert' }),\n    });\n  }\n\n  return (\n    <>\n      <Form formMethods={formMethods} onSubmit={oppdaterDokBehov}>\n        <VerticalSpacer eightPx />\n        {fields.map((field, index) => (\n          <React.Fragment key={field.id}>\n            {index > 0 && (\n              <>\n                <VerticalSpacer fourtyPx />\n                <AvsnittSkiller dividerParagraf className={styles.skiller} />\n                <VerticalSpacer twentyPx />\n              </>\n            )}\n            {!readOnly && perioder[index].fom !== perioder[index].tom && fields.length === 1 && (\n              <div className={styles.marginBtn}>\n                <Button\n                  size=\"small\"\n                  variant=\"tertiary\"\n                  type=\"button\"\n                  onClick={() => settValgtPeriodeIndex(index)}\n                  icon={<ScissorsIcon />}\n                >\n                  <FormattedMessage id=\"UttakDokumentasjonFaktaDetailForm.DelOppPeriode\" />\n                </Button>\n              </div>\n            )}\n            {fields.length > 1 && (\n              <FlexContainer>\n                <Label size=\"medium\">\n                  <FormattedMessage\n                    id=\"UttakDokumentasjonFaktaDetailForm.PeriodeMedIndex\"\n                    values={{ index: index + 1 }}\n                  />\n                </Label>\n                <FlexRow>\n                  <FlexColumn>\n                    <Label size=\"small\">\n                      <FormattedMessage id=\"UttakDokumentasjonFaktaDetailForm.Fom\" />\n                    </Label>\n                  </FlexColumn>\n                  <FlexColumn className={styles.fomDato}>\n                    {perioder[index].fom && (\n                      <BodyShort size=\"small\">\n                        <DateLabel dateString={perioder[index].fom} />\n                      </BodyShort>\n                    )}\n                  </FlexColumn>\n                  <FlexColumn>\n                    <Label size=\"small\">\n                      <FormattedMessage id=\"UttakDokumentasjonFaktaDetailForm.Tom\" />\n                    </Label>\n                  </FlexColumn>\n                  <FlexColumn className={styles.tomDato}>\n                    {perioder[index].tom && (\n                      <BodyShort size=\"small\">\n                        <DateLabel dateString={perioder[index].tom} />\n                      </BodyShort>\n                    )}\n                  </FlexColumn>\n                  {sistOppdeltPeriodeIndex && sistOppdeltPeriodeIndex >= index && (\n                    <FlexColumn className={styles.redigerKnapp}>\n                      <Button\n                        size=\"small\"\n                        variant=\"tertiary\"\n                        icon={<PencilIcon aria-hidden />}\n                        onClick={() => settValgtPeriodeIndex(index)}\n                        type=\"button\"\n                        disabled={!perioder[index].tom}\n                      >\n                        <FormattedMessage id=\"UttakDokumentasjonFaktaDetailForm.RedigerPeriode\" />\n                      </Button>\n                    </FlexColumn>\n                  )}\n                </FlexRow>\n                {perioder[index].fom !== perioder[index].tom && fields.length > 1 && index === fields.length - 1 && (\n                  <>\n                    <VerticalSpacer sixteenPx />\n                    <div className={styles.marginBtn}>\n                      <Button\n                        size=\"small\"\n                        variant=\"tertiary\"\n                        type=\"button\"\n                        onClick={() => settValgtPeriodeIndex(index)}\n                        icon={<ScissorsIcon />}\n                      >\n                        <FormattedMessage id=\"UttakDokumentasjonFaktaDetailForm.DelOppPeriode\" />\n                      </Button>\n                    </div>\n                    <VerticalSpacer eightPx />\n                  </>\n                )}\n              </FlexContainer>\n            )}\n            <VerticalSpacer twentyPx />\n            <RadioGroupPanel\n              name={`perioder.${index}.vurdering`}\n              label={<FormattedMessage id=\"UttakDokumentasjonFaktaDetailForm.Vurdering\" />}\n              validate={[required]}\n              isReadOnly={readOnly}\n              isHorizontal\n              radios={vurderingsalternativer}\n            />\n          </React.Fragment>\n        ))}\n        <VerticalSpacer fourtyPx />\n        {!readOnly && (\n          <FlexContainer>\n            <FlexRow>\n              <FlexColumn>\n                <Button\n                  size=\"small\"\n                  variant=\"secondary\"\n                  loading={false}\n                  disabled={!formMethods.formState.isDirty || readOnly}\n                >\n                  <FormattedMessage id=\"UttakDokumentasjonFaktaDetailForm.Oppdater\" />\n                </Button>\n              </FlexColumn>\n              <FlexColumn>\n                <Button\n                  size=\"small\"\n                  variant=\"tertiary\"\n                  onClick={avbrytEditeringAvAktivitetskrav}\n                  disabled={readOnly}\n                  type=\"button\"\n                >\n                  <FormattedMessage id=\"UttakDokumentasjonFaktaDetailForm.Avbryt\" />\n                </Button>\n              </FlexColumn>\n            </FlexRow>\n            <VerticalSpacer sixteenPx />\n          </FlexContainer>\n        )}\n      </Form>\n      {valgtPeriodeIndex !== undefined && (\n        <DelOppPeriodeModal\n          periode={perioder[valgtPeriodeIndex]}\n          originalTom={valgtDokBehov.tom}\n          submit={dato =>\n            valgtPeriodeIndex + 1 < fields.length ? oppdaterOgNullstillPerioder(dato) : lagNyPeriode(dato)\n          }\n          cancel={() => settValgtPeriodeIndex(undefined)}\n          visSlettEtterfølgendePerioder={valgtPeriodeIndex < fields.length - 1}\n        />\n      )}\n    </>\n  );\n};\n\nexport default UttakDokumentasjonFaktaDetailForm;\n","import React, { FunctionComponent, useCallback, useEffect, useState } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { dateFormat } from '@navikt/ft-utils';\nimport { CheckmarkIcon, FileXMarkIcon, XMarkOctagonIcon } from '@navikt/aksel-icons';\nimport { ExpandableTableRow, Table, TableColumn, TableRow } from '@navikt/ft-ui-komponenter';\n\nimport { DokumentasjonVurderingBehov, UttakVurdering, UttakÅrsak, UttakType } from '@navikt/fp-types';\n\nimport UttakDokumentasjonFaktaDetailForm from './UttakDokumentasjonFaktaDetailForm';\n\nimport styles from './uttakDokumentasjonFaktaTable.module.css';\n\nconst UTTAK_ÅRSAK_TEKSTER = {\n  [UttakÅrsak.INNLEGGELSE_SØKER]: 'UttakDokumentasjonFaktaTable.InnleggelseSoker',\n  [UttakÅrsak.INNLEGGELSE_BARN]: 'UttakDokumentasjonFaktaTable.InnleggelseBarn',\n  [UttakÅrsak.HV_ØVELSE]: 'UttakDokumentasjonFaktaTable.HvOvelse',\n  [UttakÅrsak.NAV_TILTAK]: 'UttakDokumentasjonFaktaTable.NavTiltak',\n  [UttakÅrsak.SYKDOM_SØKER]: 'UttakDokumentasjonFaktaTable.SykdomSoker',\n  [UttakÅrsak.SYKDOM_ANNEN_FORELDER]: 'UttakDokumentasjonFaktaTable.SykdomAnnenForelder',\n  [UttakÅrsak.INNLEGGELSE_ANNEN_FORELDER]: 'UttakDokumentasjonFaktaTable.InnleggelseAnnenForelder',\n  [UttakÅrsak.BARE_SØKER_RETT]: 'UttakDokumentasjonFaktaTable.BareSokerRett',\n  [UttakÅrsak.ALENEOMSORG]: 'UttakDokumentasjonFaktaTable.Aleneomsorg',\n  [UttakÅrsak.AKTIVITETSKRAV_ARBEID]: 'UttakDokumentasjonFaktaTable.AktivitetskravArbeid',\n  [UttakÅrsak.AKTIVITETSKRAV_UTDANNING]: 'UttakDokumentasjonFaktaTable.AktivitetskravUtdanning',\n  [UttakÅrsak.AKTIVITETSKRAV_KVALPROG]: 'UttakDokumentasjonFaktaTable.AktivitetskravKvalprog',\n  [UttakÅrsak.AKTIVITETSKRAV_INTROPROG]: 'UttakDokumentasjonFaktaTable.AktivitetskravIntroprog',\n  [UttakÅrsak.AKTIVITETSKRAV_TRENGER_HJELP]: 'UttakDokumentasjonFaktaTable.AktivitetskravTrengerHjelp',\n  [UttakÅrsak.AKTIVITETSKRAV_INNLAGT]: 'UttakDokumentasjonFaktaTable.AktivitetskravInnlagt',\n  [UttakÅrsak.AKTIVITETSKRAV_ARBEID_OG_UTDANNING]: 'UttakDokumentasjonFaktaTable.AktivitetskravArbeidUtdanning',\n  [UttakÅrsak.AKTIVITETSKRAV_IKKE_OPPGITT]: 'UttakDokumentasjonFaktaTable.AktivitetskravIkkeOppgitt',\n  [UttakÅrsak.TIDLIG_OPPSTART_FAR]: 'UttakDokumentasjonFaktaTable.TidligOppstartFar',\n};\n\nconst finnType = (type: UttakType) => {\n  if (type === UttakType.UTSETTELSE) {\n    return <FormattedMessage id=\"UttakDokumentasjonFaktaTable.Utsettelse\" />;\n  }\n  if (type === UttakType.OVERFØRING) {\n    return <FormattedMessage id=\"UttakDokumentasjonFaktaTable.Overforing\" />;\n  }\n  return <FormattedMessage id=\"UttakDokumentasjonFaktaTable.Uttak\" />;\n};\n\nconst HEADER_TEXT_CODES = [\n  'UttakDokumentasjonFaktaTable.Periode',\n  'UttakDokumentasjonFaktaTable.AvklaringBehov',\n  'UttakDokumentasjonFaktaTable.Arsak',\n  'UttakDokumentasjonFaktaTable.Vurdering',\n  'EMPTY1',\n];\n\ninterface OwnProps {\n  dokumentasjonVurderingBehov: DokumentasjonVurderingBehov[];\n  oppdaterDokBehov: (dokBehov: DokumentasjonVurderingBehov[]) => void;\n  readOnly: boolean;\n  setDirty: (isDirty: boolean) => void;\n  harAksjonspunkt: boolean;\n}\n\nconst UttakDokumentasjonFaktaTable: FunctionComponent<OwnProps> = ({\n  dokumentasjonVurderingBehov,\n  oppdaterDokBehov,\n  readOnly,\n  setDirty,\n  harAksjonspunkt,\n}) => {\n  const [valgtDokBehovFomDatoer, setDokBehovFomDatoer] = useState<string[]>([]);\n\n  const velgDokBehovFomDato = useCallback(\n    (fom?: string) => {\n      if (fom) {\n        if (valgtDokBehovFomDatoer.includes(fom)) {\n          setDokBehovFomDatoer(foms => foms.filter(f => f !== fom));\n        } else {\n          setDokBehovFomDatoer(foms => foms.concat(fom));\n        }\n      }\n    },\n    [valgtDokBehovFomDatoer, setDokBehovFomDatoer],\n  );\n\n  useEffect(() => velgDokBehovFomDato(dokumentasjonVurderingBehov?.find(oa => !oa.vurdering)?.fom), []);\n\n  const oppdaterPeriode = useCallback(\n    (oppdatertKrav: { perioder: DokumentasjonVurderingBehov[] }) => {\n      const { perioder } = oppdatertKrav;\n      const oppdaterteDokBehov = dokumentasjonVurderingBehov\n        .filter(aKrav => aKrav.fom !== perioder[0].fom)\n        .concat(perioder)\n        .sort((a1, a2) => a1.fom.localeCompare(a2.fom));\n\n      oppdaterDokBehov(oppdaterteDokBehov);\n\n      setDokBehovFomDatoer(fomDatoer => {\n        const åpneRaderMinusDenSomErOppdatert = fomDatoer.filter(fom => fom !== perioder[0].fom);\n        const nySomSkalÅpnes = oppdaterteDokBehov.find(oa => !oa.vurdering)?.fom;\n        return nySomSkalÅpnes\n          ? åpneRaderMinusDenSomErOppdatert.concat(nySomSkalÅpnes)\n          : åpneRaderMinusDenSomErOppdatert;\n      });\n      setDirty(true);\n    },\n    [dokumentasjonVurderingBehov],\n  );\n\n  return (\n    <Table headerTextCodes={HEADER_TEXT_CODES} noHover hasGrayHeader>\n      {dokumentasjonVurderingBehov.map(behov => {\n        const kolonner = (\n          <>\n            <TableColumn>{`${dateFormat(behov.fom)} - ${dateFormat(behov.tom)}`}</TableColumn>\n            <TableColumn>{finnType(behov.type)}</TableColumn>\n            <TableColumn>\n              {UTTAK_ÅRSAK_TEKSTER[behov.årsak] ? <FormattedMessage id={UTTAK_ÅRSAK_TEKSTER[behov.årsak]} /> : ''}\n            </TableColumn>\n            <TableColumn>\n              {behov.vurdering === UttakVurdering.GODKJENT && (\n                <>\n                  <CheckmarkIcon />\n                  <div className={styles.ikon}>\n                    <FormattedMessage id=\"UttakDokumentasjonFaktaTable.Godkjent\" />\n                  </div>\n                </>\n              )}\n              {behov.vurdering === UttakVurdering.IKKE_GODKJENT && (\n                <>\n                  <XMarkOctagonIcon />\n                  <div className={styles.ikon}>\n                    <FormattedMessage id=\"UttakDokumentasjonFaktaTable.IkkeGodkjent\" />\n                  </div>\n                </>\n              )}\n              {behov.vurdering === UttakVurdering.IKKE_DOKUMENTERT && (\n                <>\n                  <FileXMarkIcon />\n                  <div className={styles.ikon}>\n                    <FormattedMessage id=\"UttakDokumentasjonFaktaTable.ManglerDok\" />\n                  </div>\n                </>\n              )}\n            </TableColumn>\n          </>\n        );\n\n        if (harAksjonspunkt) {\n          return (\n            <ExpandableTableRow\n              key={behov.fom + behov.tom}\n              isApLeftBorder={!behov.vurdering}\n              showContent={valgtDokBehovFomDatoer.includes(behov.fom)}\n              toggleContent={() => velgDokBehovFomDato(behov.fom)}\n              content={\n                valgtDokBehovFomDatoer.includes(behov.fom) && (\n                  <UttakDokumentasjonFaktaDetailForm\n                    key={behov.fom}\n                    valgtDokBehov={behov}\n                    readOnly={readOnly}\n                    oppdaterDokBehov={oppdaterPeriode}\n                    avbrytEditeringAvAktivitetskrav={() => velgDokBehovFomDato(behov.fom)}\n                  />\n                )\n              }\n            >\n              {kolonner}\n            </ExpandableTableRow>\n          );\n        }\n        return <TableRow key={behov.fom + behov.tom}>{kolonner}</TableRow>;\n      })}\n    </Table>\n  );\n};\n\nexport default UttakDokumentasjonFaktaTable;\n","import React, { FunctionComponent, useCallback, useEffect, useMemo, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { Form } from '@navikt/ft-form-hooks';\nimport { Button, Heading } from '@navikt/ds-react';\nimport { AksjonspunktHelpTextHTML, VerticalSpacer } from '@navikt/ft-ui-komponenter';\n\nimport { AksjonspunktCode, aksjonspunktStatus } from '@navikt/fp-kodeverk';\nimport { Aksjonspunkt, DokumentasjonVurderingBehov } from '@navikt/fp-types';\nimport { FaktaBegrunnelseTextFieldNew } from '@navikt/fp-fakta-felles';\nimport { VurderDokumentasjonAp } from '@navikt/fp-types-avklar-aksjonspunkter';\n\nimport UttakDokumentasjonFaktaTable from './UttakDokumentasjonFaktaTable';\n\ninterface OwnProps {\n  aksjonspunkter: Aksjonspunkt[];\n  dokumentasjonVurderingBehov: DokumentasjonVurderingBehov[];\n  submitCallback: (aksjonspunkter: VurderDokumentasjonAp) => Promise<void>;\n  readOnly: boolean;\n  submittable: boolean;\n  formData: { dokBehov: DokumentasjonVurderingBehov[]; begrunnelse: string };\n  setFormData: (data: { dokBehov: DokumentasjonVurderingBehov[]; begrunnelse: string }) => void;\n}\n\nconst UttakDokumentasjonFaktaForm: FunctionComponent<OwnProps> = ({\n  aksjonspunkter,\n  dokumentasjonVurderingBehov,\n  readOnly,\n  submittable,\n  submitCallback,\n  formData,\n  setFormData,\n}) => {\n  const intl = useIntl();\n\n  const [erBekreftKnappTrykket, settBekreftKnappTrykket] = useState(false);\n  const [dokBehov, oppdaterDokBehov] = useState<DokumentasjonVurderingBehov[]>(\n    formData?.dokBehov || dokumentasjonVurderingBehov,\n  );\n\n  const bekreft = useCallback(\n    (begrunnelse: string) => {\n      settBekreftKnappTrykket(true);\n      submitCallback({\n        kode: AksjonspunktCode.VURDER_UTTAK_DOKUMENTASJON,\n        vurderingBehov: dokBehov,\n        begrunnelse,\n      });\n    },\n    [dokBehov],\n  );\n\n  const lagretBegrunnelse = aksjonspunkter.length > 0 ? aksjonspunkter[0].begrunnelse : undefined;\n  const formMethods = useForm<{ begrunnelse: string }>({\n    defaultValues: {\n      begrunnelse: formData?.begrunnelse || lagretBegrunnelse,\n    },\n  });\n\n  useEffect(\n    () => () => {\n      setFormData({ dokBehov, begrunnelse: formMethods.getValues('begrunnelse') });\n    },\n    [],\n  );\n\n  const begrunnelse = formMethods.watch('begrunnelse');\n\n  const isSubmittable = useMemo(\n    () => submittable && dokBehov?.every(a => a.vurdering) && !!begrunnelse,\n    [dokBehov, begrunnelse],\n  );\n\n  const [isDirty, setDirty] = useState<boolean>(false);\n\n  return (\n    <>\n      <Heading size=\"small\">\n        <FormattedMessage id=\"UttakDokumentasjonFaktaForm.Overskrift\" />\n      </Heading>\n      <VerticalSpacer thirtyTwoPx />\n      {aksjonspunkter.some(a => a.status === aksjonspunktStatus.OPPRETTET) && (\n        <>\n          <AksjonspunktHelpTextHTML>\n            {[intl.formatMessage({ id: 'UttakDokumentasjonFaktaForm.AksjonspunktHjelpetekst' })]}\n          </AksjonspunktHelpTextHTML>\n          <VerticalSpacer twentyPx />\n        </>\n      )}\n      <UttakDokumentasjonFaktaTable\n        harAksjonspunkt={aksjonspunkter.length > 0}\n        dokumentasjonVurderingBehov={dokBehov}\n        oppdaterDokBehov={oppdaterDokBehov}\n        setDirty={setDirty}\n        readOnly={readOnly}\n      />\n      <VerticalSpacer twentyPx />\n      <Form formMethods={formMethods} onSubmit={(values: { begrunnelse: string }) => bekreft(values.begrunnelse)}>\n        <FaktaBegrunnelseTextFieldNew\n          name=\"begrunnelse\"\n          label={intl.formatMessage({ id: 'UttakDokumentasjonFaktaForm.Begrunnelse' })}\n          isSubmittable\n          isReadOnly={readOnly}\n          hasBegrunnelse\n        />\n        <VerticalSpacer sixteenPx />\n        {!readOnly && (\n          <Button\n            size=\"small\"\n            variant=\"primary\"\n            disabled={!isSubmittable || (!isDirty && !formMethods.formState.isDirty) || erBekreftKnappTrykket}\n            loading={erBekreftKnappTrykket}\n          >\n            <FormattedMessage id=\"UttakDokumentasjonFaktaForm.Bekreft\" />\n          </Button>\n        )}\n      </Form>\n    </>\n  );\n};\n\nexport default UttakDokumentasjonFaktaForm;\n","import React, { FunctionComponent, useMemo } from 'react';\nimport { RawIntlProvider } from 'react-intl';\nimport dayjs from 'dayjs';\n\nimport { StandardFaktaPanelProps, DokumentasjonVurderingBehov } from '@navikt/fp-types';\nimport { createIntl } from '@navikt/ft-utils';\n\nimport UttakDokumentasjonFaktaForm from './components/UttakDokumentasjonFaktaForm';\nimport messages from '../i18n/nb_NO.json';\n\nconst intl = createIntl(messages);\n\ninterface OwnProps {\n  harApneAksjonspunkter: boolean;\n  dokumentasjonVurderingBehov: DokumentasjonVurderingBehov[];\n}\n\nconst UttakDokumentasjonFaktaIndex: FunctionComponent<OwnProps & StandardFaktaPanelProps> = ({\n  dokumentasjonVurderingBehov,\n  submitCallback,\n  readOnly,\n  submittable,\n  aksjonspunkter,\n  formData,\n  setFormData,\n}) => {\n  const sorterteBehov = useMemo(\n    () => [...dokumentasjonVurderingBehov].sort((krav1, krav2) => dayjs(krav1.fom).diff(dayjs(krav2.fom))),\n    [dokumentasjonVurderingBehov],\n  );\n  return (\n    <RawIntlProvider value={intl}>\n      <UttakDokumentasjonFaktaForm\n        aksjonspunkter={aksjonspunkter}\n        dokumentasjonVurderingBehov={sorterteBehov}\n        submitCallback={submitCallback}\n        readOnly={readOnly || aksjonspunkter.length === 0}\n        submittable={submittable}\n        formData={formData}\n        setFormData={setFormData}\n      />\n    </RawIntlProvider>\n  );\n};\n\nexport default UttakDokumentasjonFaktaIndex;\n"],"names":["AksjonspunktCode","aksjonspunktStatus","__rest","this","s","e","t","p","i","SvgCheckmark","forwardRef","_a","ref","title","_titleId","props","titleId","useId","React.createElement","CheckmarkIcon","SvgFileXMark","FileXMarkIcon","SvgPencil","PencilIcon","SvgScissors","ScissorsIcon","SvgXMarkOctagon","XMarkOctagonIcon","intl","createIntl","messages","minLength3","minLength","maxLength1500","maxLength","FaktaBegrunnelseTextField","isReadOnly","isSubmittable","hasBegrunnelse","label","hasVurderingText","name","code","textAreaLabel","jsx","RawIntlProvider","styles","TextAreaField","required","hasValidText","getBegrunnelse","aksjonspunkt","begrunnelseFieldName","decodeHtmlEntity","values","isDisabled","isDirty","isSubmitting","FaktaSubmitButton","buttonText","onClick","jsxs","Button","ariaCheck","FormattedMessage","UttakDokumentasjonFaktaDetailForm","valgtDokBehov","readOnly","avbrytEditeringAvAktivitetskrav","oppdaterDokBehov","useIntl","sistOppdeltPeriodeIndex","setSistOppdeltPeriodeIndex","useState","valgtPeriodeIndex","settValgtPeriodeIndex","formMethods","useForm","fields","append","update","remove","useFieldArray","perioder","lagNyPeriode","dato","periode","nyPeriode","dayjs","ISO_DATE_FORMAT","oppdaterOgNullstillPerioder","vurderingsalternativer","UttakVurdering","Fragment","Form","VerticalSpacer","field","index","React","AvsnittSkiller","FlexContainer","Label","FlexRow","FlexColumn","BodyShort","DateLabel","RadioGroupPanel","DelOppPeriodeModal","UTTAK_ÅRSAK_TEKSTER","UttakÅrsak","finnType","type","UttakType","HEADER_TEXT_CODES","UttakDokumentasjonFaktaTable","dokumentasjonVurderingBehov","setDirty","harAksjonspunkt","valgtDokBehovFomDatoer","setDokBehovFomDatoer","velgDokBehovFomDato","useCallback","fom","foms","f","useEffect","oa","oppdaterPeriode","oppdatertKrav","oppdaterteDokBehov","aKrav","a1","a2","fomDatoer","åpneRaderMinusDenSomErOppdatert","nySomSkalÅpnes","Table","behov","kolonner","TableColumn","dateFormat","ExpandableTableRow","TableRow","UttakDokumentasjonFaktaForm","aksjonspunkter","submittable","submitCallback","formData","setFormData","erBekreftKnappTrykket","settBekreftKnappTrykket","dokBehov","bekreft","begrunnelse2","lagretBegrunnelse","begrunnelse","useMemo","a","Heading","AksjonspunktHelpTextHTML","FaktaBegrunnelseTextFieldNew","UttakDokumentasjonFaktaIndex","sorterteBehov","krav1","krav2","UttakDokumentasjonFaktaIndex$1"],"mappings":"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","x_google_ignoreList":[2,3,4,5,6]}