{"version":3,"file":"LeggTilSaksbehandlerForm-5013a2ee.js","sources":["../../src/saksbehandlere/components/LeggTilSaksbehandlerForm.tsx"],"sourcesContent":["import React, { FunctionComponent, useState, useMemo } from 'react';\nimport { useIntl, FormattedMessage } from 'react-intl';\nimport { useForm } from 'react-hook-form';\nimport { BodyShort, Button, HStack, Label } from '@navikt/ds-react';\nimport { Form, InputField } from '@navikt/ft-form-hooks';\nimport { required } from '@navikt/ft-form-validators';\nimport { VerticalSpacer } from '@navikt/ft-ui-komponenter';\nimport { RestApiState } from '@navikt/fp-rest-api-hooks';\n\nimport Saksbehandler from '../../typer/saksbehandlerAvdelingTsType';\nimport { RestApiPathsKeys, restApiHooks } from '../../data/fplosRestApi';\n\nimport styles from './leggTilSaksbehandlerForm.module.css';\n\nconst erSaksbehandlerLagtTilAllerede = (\n  saksbehandler?: Saksbehandler,\n  avdelingensSaksbehandlere: Saksbehandler[] = [],\n) =>\n  avdelingensSaksbehandlere instanceof Array &&\n  avdelingensSaksbehandlere.some(\n    s => saksbehandler && s.brukerIdent.toLowerCase() === saksbehandler.brukerIdent.toLowerCase(),\n  );\n\ninterface OwnProps {\n  valgtAvdelingEnhet: string;\n  avdelingensSaksbehandlere: Saksbehandler[];\n  hentAvdelingensSaksbehandlere: (params: { avdelingEnhet: string }) => void;\n}\n\ntype FormValues = {\n  brukerIdent: string;\n};\n\n/**\n * LeggTilSaksbehandlerForm\n */\nconst LeggTilSaksbehandlerForm: FunctionComponent<OwnProps> = ({\n  valgtAvdelingEnhet,\n  avdelingensSaksbehandlere,\n  hentAvdelingensSaksbehandlere,\n}) => {\n  const intl = useIntl();\n  const [leggerTilNySaksbehandler, setLeggetTilNySaksbehandler] = useState(false);\n\n  const {\n    data: saksbehandler,\n    startRequest: finnSaksbehandler,\n    state,\n    resetRequestData: resetSaksbehandlerSok,\n  } = restApiHooks.useRestApiRunner(RestApiPathsKeys.SAKSBEHANDLER_SOK);\n\n  const { startRequest: leggTilSaksbehandler } = restApiHooks.useRestApiRunner(\n    RestApiPathsKeys.OPPRETT_NY_SAKSBEHANDLER,\n  );\n\n  const erLagtTilAllerede = erSaksbehandlerLagtTilAllerede(saksbehandler, avdelingensSaksbehandlere);\n\n  const leggTilSaksbehandlerFn = (resetFormValues: () => void) => {\n    if (saksbehandler) {\n      setLeggetTilNySaksbehandler(true);\n      leggTilSaksbehandler({\n        brukerIdent: saksbehandler.brukerIdent,\n        avdelingEnhet: valgtAvdelingEnhet,\n      }).then(() => {\n        resetSaksbehandlerSok();\n        resetFormValues();\n        setLeggetTilNySaksbehandler(false);\n        hentAvdelingensSaksbehandlere({ avdelingEnhet: valgtAvdelingEnhet });\n      });\n    }\n  };\n\n  const resetSaksbehandlerSokFn = (resetFormValues: () => void) => {\n    resetSaksbehandlerSok();\n    resetFormValues();\n  };\n\n  const formattedText = useMemo((): string => {\n    if (state === RestApiState.SUCCESS && !saksbehandler) {\n      return intl.formatMessage({ id: 'LeggTilSaksbehandlerForm.FinnesIkke' });\n    }\n    if (!saksbehandler) {\n      return '';\n    }\n\n    const brukerinfo = `${saksbehandler.navn}, ${saksbehandler.avdelingsnavn.join(', ')}`;\n    return erLagtTilAllerede\n      ? `${brukerinfo} (${intl.formatMessage({ id: 'LeggTilSaksbehandlerForm.FinnesAllerede' })})`\n      : brukerinfo;\n  }, [state, saksbehandler, erLagtTilAllerede]);\n\n  const formMethods = useForm<FormValues>();\n\n  return (\n    <Form<FormValues>\n      formMethods={formMethods}\n      onSubmit={(values: { brukerIdent: string }) => finnSaksbehandler({ brukerIdent: values.brukerIdent })}\n    >\n      <Label size=\"small\">\n        <FormattedMessage id=\"LeggTilSaksbehandlerForm.LeggTil\" />\n      </Label>\n      <VerticalSpacer eightPx />\n      <HStack gap=\"4\">\n        <InputField\n          name=\"brukerIdent\"\n          label={intl.formatMessage({ id: 'LeggTilSaksbehandlerForm.Brukerident' })}\n          validate={[required]}\n        />\n        <div className={styles.button}>\n          <Button\n            size=\"small\"\n            variant=\"secondary\"\n            loading={formMethods.formState.isSubmitting}\n            disabled={formMethods.formState.isSubmitting || leggerTilNySaksbehandler}\n            tabIndex={0}\n          >\n            <FormattedMessage id=\"LeggTilSaksbehandlerForm.Sok\" />\n          </Button>\n        </div>\n      </HStack>\n      {state === RestApiState.SUCCESS && (\n        <>\n          <VerticalSpacer eightPx />\n          <BodyShort size=\"small\">{formattedText}</BodyShort>\n          <VerticalSpacer sixteenPx />\n          <HStack gap=\"4\">\n            <Button\n              size=\"small\"\n              variant=\"primary\"\n              autoFocus\n              onClick={() => leggTilSaksbehandlerFn(formMethods.reset)}\n              loading={leggerTilNySaksbehandler}\n              disabled={leggerTilNySaksbehandler || erLagtTilAllerede || !saksbehandler}\n              type=\"button\"\n            >\n              <FormattedMessage id=\"LeggTilSaksbehandlerForm.LeggTilIListen\" />\n            </Button>\n            <Button\n              size=\"small\"\n              variant=\"secondary\"\n              tabIndex={0}\n              disabled={leggerTilNySaksbehandler}\n              onClick={() => resetSaksbehandlerSokFn(formMethods.reset)}\n              type=\"button\"\n            >\n              <FormattedMessage id=\"LeggTilSaksbehandlerForm.Nullstill\" />\n            </Button>\n          </HStack>\n        </>\n      )}\n    </Form>\n  );\n};\n\nexport default LeggTilSaksbehandlerForm;\n"],"names":["erSaksbehandlerLagtTilAllerede","saksbehandler","avdelingensSaksbehandlere","s","LeggTilSaksbehandlerForm","valgtAvdelingEnhet","hentAvdelingensSaksbehandlere","intl","useIntl","leggerTilNySaksbehandler","setLeggetTilNySaksbehandler","useState","finnSaksbehandler","state","resetSaksbehandlerSok","restApiHooks","RestApiPathsKeys","leggTilSaksbehandler","erLagtTilAllerede","leggTilSaksbehandlerFn","resetFormValues","resetSaksbehandlerSokFn","formattedText","useMemo","RestApiState","brukerinfo","formMethods","useForm","jsxs","Form","values","jsx","Label","FormattedMessage","VerticalSpacer","HStack","InputField","required","styles","Button","Fragment","BodyShort","LeggTilSaksbehandlerForm$1"],"mappings":"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"}