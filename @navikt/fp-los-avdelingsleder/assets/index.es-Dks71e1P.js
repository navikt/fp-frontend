import{e as k,n as i,s as f}from"./iframe-B0b5WPMQ.js";function p(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var d={exports:{}},c=d.exports,m;function h(){return m||(m=1,function(e,t){(function(r,a){e.exports=a()})(c,function(){return function(r,a){a.prototype.isSameOrAfter=function(s,o){return this.isSame(s,o)||this.isAfter(s,o)}}})}(d)),d.exports}var I=h();const x=p(I);var u={exports:{}},O=u.exports,g;function D(){return g||(g=1,function(e,t){(function(r,a){e.exports=a()})(O,function(){return function(r,a){a.prototype.isSameOrBefore=function(s,o){return this.isSame(s,o)||this.isBefore(s,o)}}})}(u)),u.exports}var F=D();const y=p(F),S="Dato må være før eller lik {limit}",L="Dato må være etter eller lik {limit}",N="Perioder kan ikke overlappe i tid",M="Perioder kan ikke overlappe i tid (uttak, utsettelse, gradering, overforing, opphold)",P="Dato må være lik {value}",q="Dato må skrives slik: dd.mm.åååå",T="Periode må skrives slik: dd.mm.åååå - dd.mm.åååå",j="Tallet kan ikke inneholde mer enn to desimaler",b="Tallet kan ikke ha desimaler",A="Feltet kan kun inneholde tall",E="Ugyldig fødselsnummer",U="Feltet må være et fødselsnummer (11 siffer)",$="Ugyldig organisasjonsnummer.",B="Ugyldig organisasjonsnummer eller fødselsnummer",R="Startdato må være før eller lik sluttdato",Z="Periode er utenfor opptjeningsperioden",_="Ugyldig saksnummer eller fødselsnummer",V="Feltet inneholder ugyldige tegn: {text}",W="Feltet inneholder en ugyldig verdi: {value}",w="Feltet kan ikke inneholde mellomrom",z="Feltet må fylles ut",C="Du kan skrive maksimalt {length} tegn",H="Du må skrive minst {length} tegn",J="Du kan skrive maksimalt {length} tegn eller et fødselsnummer (11 siffer)",G="Feltet må være mindre eller lik {length}",K="Feltet må være større eller lik {length}",Q="Fødselsnummer til den andre forelderen kan ikke være det samme som søker",X={DateNotBeforeOrEqual:S,DateNotAfterOrEqual:L,DateRangesOverlapping:N,DateRangesOverlappingPeriodTypes:M,DatesNotEqual:P,InvalidDate:q,InvalidDatesInPeriod:T,InvalidDecimal:j,InvalidInteger:b,InvalidNumber:A,InvalidFodselsnr:E,InvalidFodselsnrFormat:U,InvalidOrgnr:$,InvalidOrgnrOrFodselsnr:B,InvalidPeriod:R,InvalidPeriodRange:Z,InvalidSaksnrOrFodselsnrFormat:_,InvalidText:V,InvalidValue:W,IllegalWhiteSpace:w,IsRequired:z,MaxLength:C,MinLength:H,MaxLengthOrFodselsnr:J,MaxValue:G,MinValue:K,SammeFodselsnrSomSoker:Q},{formatMessage:n}=k(X),Y=e=>n({id:"DateNotBeforeOrEqual"},{limit:e}),ee=e=>n({id:"DateNotAfterOrEqual"},{limit:e}),te=()=>n({id:"InvalidDate"}),re=e=>n({id:"InvalidInteger"},{text:e}),ne=e=>n({id:"InvalidNumber"},{text:e}),v=e=>n({id:"InvalidText"},{text:e}),le=()=>n({id:"IsRequired"}),ae=e=>n({id:"MaxLength"},{length:e}),ie=e=>n({id:"MinLength"},{length:e}),se=/(19|20)\d{2}-(0?[1-9]|1[0-2])-(0?[1-9]|1\d|2\d|3[01])$/,oe=/^-?\d+([,.]\d+)?$/,de=/^\s*-?\d+\s*$/,ue=/^[\p{N}\p{L}\p{Z}.'\-/%§!?@_()+:;,="&\n]*$/u,me=/[\p{N}\p{L}\p{Z}.'\-/%§!?@_()+:;,="&\n]*/gu,ge=/^[0-9\p{L}\p{Z}.'-]*$/u,fe=/[0-9\p{L}\p{Z}.'-]*/gu,l=e=>e==null||e.toString().trim().length===0,pe=()=>i().startOf("day");i.extend(x);i.extend(y);const Ie=e=>l(e)?le():void 0,xe=e=>t=>l(t)||t.toString().trim().length>=e?null:ie(e),Oe=e=>t=>l(t)||t.toString().trim().length<=e?null:ae(e),ve=e=>l(e)||oe.test(e)?null:ne(e),ke=e=>l(e)||de.test(e)?null:re(e),De=e=>ve(e)||ke(e),Fe=(e="")=>l(e)||se.test(e)?null:te(),ye=e=>t=>{const r=i(e).endOf("day");return l(t)||i(t).isSameOrBefore(r)?null:Y(r.format(f))},ce=e=>t=>{const r=i(e).startOf("day");return l(t)||i(t).isSameOrAfter(r)?null:ee(r.format(f))},Se=e=>ce(pe())(e),Le=e=>{if(!ue.test(e)){const t=e.replace(me,"");return v(t.replace(/[\t]/g,"Tabulatortegn"))}return null},Ne=e=>{if(!ge.test(e)){const t=e.replace(fe,"");return v(t.replace(/[\t]/g,"Tabulatortegn"))}return null};export{Ne as D,Se as F,Le as N,Fe as O,ye as V,xe as a,Oe as o,Ie as t,De as v};
