{"version":3,"file":"fplosRestApi-afc43ca3.js","sources":["../../src/data/fplosRestApi.tsx"],"sourcesContent":["import { RestApiConfigBuilder, createRequestApi, RestKey } from '@navikt/fp-rest-api';\nimport { RestApiHooks } from '@navikt/fp-rest-api-hooks';\nimport { AlleKodeverk } from '@navikt/fp-types';\nimport { Oppgave } from '@navikt/fp-los-felles';\n\nimport Avdeling from '../typer/avdelingTsType';\nimport SakslisteAvdeling from '../typer/sakslisteAvdelingTsType';\nimport SaksbehandlerAvdeling from '../typer/saksbehandlerAvdelingTsType';\nimport OppgaverForAvdeling from '../typer/oppgaverForAvdelingTsType';\nimport OppgaveForDato from '../typer/oppgaverForDatoTsType';\nimport OppgaverManueltPaVent from '../typer/oppgaverManueltPaVentTsType';\nimport OppgaverForForsteStonadsdag from '../typer/oppgaverForForsteStonadsdagTsType';\nimport OppgaverSomErApneEllerPaVent from '../typer/oppgaverSomErApneEllerPaVentTsType';\nimport Reservasjon from '../typer/reservasjonTsType';\nimport SaksbehandlerForFlytting from '../typer/saksbehandlerForFlyttingTsType';\n\nexport const RestApiGlobalStatePathsKeys = {\n  KODEVERK_LOS: new RestKey<AlleKodeverk, void>('KODEVERK_LOS'),\n};\n\nexport const RestApiPathsKeys = {\n  AVDELINGER: new RestKey<Avdeling[], void>('AVDELINGER'),\n  OPPHEV_OPPGAVERESERVASJON: new RestKey<void, { oppgaveId: number; begrunnelse: string }>('OPPHEV_OPPGAVERESERVASJON'),\n  FLYTT_RESERVASJON: new RestKey<void, { oppgaveId: number; brukerIdent: string; begrunnelse: string }>(\n    'FLYTT_RESERVASJON',\n  ),\n  BEHANDLINGSKO_OPPGAVE_ANTALL: new RestKey<number, { sakslisteId: number }>('BEHANDLINGSKO_OPPGAVE_ANTALL'),\n  SAKSLISTER_FOR_AVDELING: new RestKey<SakslisteAvdeling[], { avdelingEnhet: string }>('SAKSLISTER_FOR_AVDELING'),\n  SAKSBEHANDLERE_FOR_AVDELING: new RestKey<SaksbehandlerAvdeling[], { avdelingEnhet: string }>(\n    'SAKSBEHANDLERE_FOR_AVDELING',\n  ),\n  OPPGAVE_AVDELING_ANTALL: new RestKey<number, { avdelingEnhet: string }>('OPPGAVE_AVDELING_ANTALL'),\n  OPPGAVE_ANTALL: new RestKey<number, { sakslisteId: number; avdelingEnhet: string }>('OPPGAVE_ANTALL'),\n  SAKSBEHANDLER_SOK: new RestKey<SaksbehandlerAvdeling, { brukerIdent: string }>('SAKSBEHANDLER_SOK'),\n  FLYTT_RESERVASJON_SAKSBEHANDLER_SOK: new RestKey<SaksbehandlerForFlytting, { brukerIdent: string }>(\n    'FLYTT_RESERVASJON_SAKSBEHANDLER_SOK',\n  ),\n  ENDRE_OPPGAVERESERVASJON: new RestKey<Oppgave[], { oppgaveId: number; reserverTil: string }>(\n    'ENDRE_OPPGAVERESERVASJON',\n  ),\n  OPPRETT_NY_SAKSBEHANDLER: new RestKey<void, { brukerIdent: string; avdelingEnhet: string }>(\n    'OPPRETT_NY_SAKSBEHANDLER',\n  ),\n  SLETT_SAKSBEHANDLER: new RestKey<void, { brukerIdent: string; avdelingEnhet: string }>('SLETT_SAKSBEHANDLER'),\n  HENT_OPPGAVER_FOR_AVDELING: new RestKey<OppgaverForAvdeling[], { avdelingEnhet: string }>(\n    'HENT_OPPGAVER_FOR_AVDELING',\n  ),\n  HENT_OPPGAVER_PER_DATO: new RestKey<OppgaveForDato[], { avdelingEnhet: string }>('HENT_OPPGAVER_PER_DATO'),\n  HENT_OPPGAVER_PER_FORSTE_STONADSDAG: new RestKey<OppgaverForForsteStonadsdag[], { avdelingEnhet: string }>(\n    'HENT_OPPGAVER_PER_FORSTE_STONADSDAG',\n  ),\n  HENT_OPPGAVER_MANUELT_PA_VENT: new RestKey<OppgaverManueltPaVent[], { avdelingEnhet: string }>(\n    'HENT_OPPGAVER_MANUELT_PA_VENT',\n  ),\n  HENT_OPPGAVER_APNE_ELLER_PA_VENT: new RestKey<OppgaverSomErApneEllerPaVent[], { avdelingEnhet: string }>(\n    'HENT_OPPGAVER_APNE_ELLER_PA_VENT',\n  ),\n  RESERVASJONER_FOR_AVDELING: new RestKey<Reservasjon[], { avdelingEnhet: string }>('RESERVASJONER_FOR_AVDELING'),\n  AVDELINGSLEDER_OPPHEVER_RESERVASJON: new RestKey<void, { oppgaveId: number }>('AVDELINGSLEDER_OPPHEVER_RESERVASJON'),\n  OPPRETT_NY_SAKSLISTE: new RestKey<{ sakslisteId: string }, { avdelingEnhet: string }>('OPPRETT_NY_SAKSLISTE'),\n  SLETT_SAKSLISTE: new RestKey<void, { sakslisteId: number; avdelingEnhet: string }>('SLETT_SAKSLISTE'),\n  LAGRE_SAKSLISTE_NAVN: new RestKey<void, { sakslisteId: number; navn: string; avdelingEnhet: string }>(\n    'LAGRE_SAKSLISTE_NAVN',\n  ),\n  LAGRE_SAKSLISTE_BEHANDLINGSTYPE: new RestKey<\n    void,\n    {\n      sakslisteId: number;\n      avdelingEnhet: string;\n      behandlingType: string;\n      checked: boolean;\n    }\n  >('LAGRE_SAKSLISTE_BEHANDLINGSTYPE'),\n  LAGRE_SAKSLISTE_FAGSAK_YTELSE_TYPE: new RestKey<\n    void,\n    {\n      sakslisteId: number;\n      avdelingEnhet: string;\n      fagsakYtelseType: string;\n      checked: boolean;\n    }\n  >('LAGRE_SAKSLISTE_FAGSAK_YTELSE_TYPE'),\n  LAGRE_SAKSLISTE_SORTERING: new RestKey<\n    void,\n    {\n      sakslisteId: number;\n      sakslisteSorteringValg: string;\n      avdelingEnhet: string;\n    }\n  >('LAGRE_SAKSLISTE_SORTERING'),\n  LAGRE_SAKSLISTE_SORTERING_DYNAMISK_PERIDE: new RestKey<\n    void,\n    {\n      sakslisteId: number;\n      avdelingEnhet: string;\n    }\n  >('LAGRE_SAKSLISTE_SORTERING_DYNAMISK_PERIDE'),\n  LAGRE_SAKSLISTE_SORTERING_TIDSINTERVALL_DATO: new RestKey<\n    void,\n    {\n      sakslisteId: number;\n      avdelingEnhet: string;\n      fomDato: string;\n      tomDato: string;\n    }\n  >('LAGRE_SAKSLISTE_SORTERING_TIDSINTERVALL_DATO'),\n  LAGRE_SAKSLISTE_SORTERING_INTERVALL: new RestKey<\n    void,\n    {\n      sakslisteId: number;\n      fra: number;\n      til: number;\n      avdelingEnhet: string;\n    }\n  >('LAGRE_SAKSLISTE_SORTERING_INTERVALL'),\n  LAGRE_SAKSLISTE_ANDRE_KRITERIER: new RestKey<\n    void,\n    {\n      sakslisteId: number;\n      avdelingEnhet: string;\n      andreKriterierType: string;\n      checked: boolean;\n      inkluder: boolean;\n    }\n  >('LAGRE_SAKSLISTE_ANDRE_KRITERIER'),\n  LAGRE_SAKSLISTE_SAKSBEHANDLER: new RestKey<\n    void,\n    {\n      sakslisteId: number;\n      brukerIdent: string;\n      checked: boolean;\n      avdelingEnhet: string;\n    }\n  >('LAGRE_SAKSLISTE_SAKSBEHANDLER'),\n};\n\nexport const endpoints = new RestApiConfigBuilder()\n  .withGet('/fplos/api/kodeverk', RestApiGlobalStatePathsKeys.KODEVERK_LOS)\n\n  // Avdelingsleder\n  .withGet('/fplos/api/avdelingsleder/avdelinger', RestApiPathsKeys.AVDELINGER)\n  .withGet('/fplos/api/avdelingsleder/sakslister', RestApiPathsKeys.SAKSLISTER_FOR_AVDELING)\n  .withGet('/fplos/api/avdelingsleder/saksbehandlere', RestApiPathsKeys.SAKSBEHANDLERE_FOR_AVDELING)\n  .withGet('/fplos/api/avdelingsleder/oppgaver/avdelingantall', RestApiPathsKeys.OPPGAVE_AVDELING_ANTALL)\n  .withGet('/fplos/api/avdelingsleder/oppgaver/antall', RestApiPathsKeys.OPPGAVE_ANTALL)\n  .withPost('/fplos/api/avdelingsleder/sakslister', RestApiPathsKeys.OPPRETT_NY_SAKSLISTE)\n  .withPost('/fplos/api/avdelingsleder/sakslister/slett', RestApiPathsKeys.SLETT_SAKSLISTE)\n  .withPost('/fplos/api/avdelingsleder/sakslister/navn', RestApiPathsKeys.LAGRE_SAKSLISTE_NAVN)\n  .withPost('/fplos/api/avdelingsleder/sakslister/behandlingstype', RestApiPathsKeys.LAGRE_SAKSLISTE_BEHANDLINGSTYPE)\n  .withPost('/fplos/api/avdelingsleder/sakslister/ytelsetyper', RestApiPathsKeys.LAGRE_SAKSLISTE_FAGSAK_YTELSE_TYPE)\n  .withPost('/fplos/api/avdelingsleder/sakslister/sortering', RestApiPathsKeys.LAGRE_SAKSLISTE_SORTERING)\n  .withPost(\n    '/fplos/api/avdelingsleder/sakslister/sortering-tidsintervall-type',\n    RestApiPathsKeys.LAGRE_SAKSLISTE_SORTERING_DYNAMISK_PERIDE,\n  )\n  .withPost(\n    '/fplos/api/avdelingsleder/sakslister/sortering-tidsintervall-dato',\n    RestApiPathsKeys.LAGRE_SAKSLISTE_SORTERING_TIDSINTERVALL_DATO,\n  )\n  .withPost(\n    '/fplos/api/avdelingsleder/sakslister/sortering-numerisk-intervall',\n    RestApiPathsKeys.LAGRE_SAKSLISTE_SORTERING_INTERVALL,\n  )\n  .withPost('/fplos/api/avdelingsleder/sakslister/andre-kriterier', RestApiPathsKeys.LAGRE_SAKSLISTE_ANDRE_KRITERIER)\n  .withPost('/fplos/api/avdelingsleder/sakslister/saksbehandler', RestApiPathsKeys.LAGRE_SAKSLISTE_SAKSBEHANDLER)\n  .withPost('/fplos/api/avdelingsleder/saksbehandlere/søk', RestApiPathsKeys.SAKSBEHANDLER_SOK)\n  .withPost('/fplos/api/avdelingsleder/saksbehandlere', RestApiPathsKeys.OPPRETT_NY_SAKSBEHANDLER)\n  .withPost('/fplos/api/avdelingsleder/saksbehandlere/slett', RestApiPathsKeys.SLETT_SAKSBEHANDLER)\n  .withGet(\n    '/fplos/api/avdelingsleder/nøkkeltall/behandlinger-under-arbeid',\n    RestApiPathsKeys.HENT_OPPGAVER_FOR_AVDELING,\n  )\n  .withGet(\n    '/fplos/api/avdelingsleder/nøkkeltall/behandlinger-under-arbeid-historikk',\n    RestApiPathsKeys.HENT_OPPGAVER_PER_DATO,\n  )\n  .withGet(\n    '/fplos/api/avdelingsleder/nøkkeltall/behandlinger-manuelt-vent-historikk',\n    RestApiPathsKeys.HENT_OPPGAVER_MANUELT_PA_VENT,\n  )\n  .withGet(\n    '/fplos/api/avdelingsleder/nøkkeltall/behandlinger-første-stønadsdag',\n    RestApiPathsKeys.HENT_OPPGAVER_PER_FORSTE_STONADSDAG,\n  )\n  .withGet('/fplos/api/avdelingsleder/nøkkeltall/åpne-behandlinger', RestApiPathsKeys.HENT_OPPGAVER_APNE_ELLER_PA_VENT)\n  .withGet('/fplos/api/avdelingsleder/reservasjoner', RestApiPathsKeys.RESERVASJONER_FOR_AVDELING)\n  .withPost('/fplos/api/avdelingsleder/reservasjoner/opphev', RestApiPathsKeys.AVDELINGSLEDER_OPPHEVER_RESERVASJON)\n\n  // Same URL som saksbehandlar brukar\n  .withPost('/fplos/api/saksbehandler/oppgaver/flytt', RestApiPathsKeys.FLYTT_RESERVASJON)\n  .withPost('/fplos/api/saksbehandler/oppgaver/flytt/søk', RestApiPathsKeys.FLYTT_RESERVASJON_SAKSBEHANDLER_SOK)\n  .withPost('/fplos/api/saksbehandler/oppgaver/reservasjon/endre', RestApiPathsKeys.ENDRE_OPPGAVERESERVASJON)\n\n  .build();\n\nexport const requestApi = createRequestApi(endpoints);\n\nexport const restApiHooks = RestApiHooks.initHooks(requestApi);\n"],"names":["RestApiGlobalStatePathsKeys","RestKey","RestApiPathsKeys","endpoints","RestApiConfigBuilder","requestApi","createRequestApi","restApiHooks","RestApiHooks"],"mappings":"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"}