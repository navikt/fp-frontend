{"version":3,"file":"ReservasjonerTabell-994e80f0.js","sources":["../../../../node_modules/@navikt/aksel-icons/dist/react/esm/PersonGroup.js","../../../kodeverk/src/kodeverkTyper.ts","../../../kodeverk/src/kodeverkUtils.ts","../../src/reservasjoner/components/ReservasjonerTabell.tsx"],"sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nimport { useId } from \"./util/useId\";\nconst SvgPersonGroup = forwardRef((_a, ref) => {\n    var { title, titleId: _titleId } = _a, props = __rest(_a, [\"title\", \"titleId\"]);\n    let titleId = useId();\n    titleId = title ? (_titleId ? _titleId : \"title-\" + titleId) : undefined;\n    return (React.createElement(\"svg\", Object.assign({ width: \"1em\", height: \"1em\", viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", focusable: false, role: \"img\", ref: ref, \"aria-labelledby\": titleId }, props),\n        title ? React.createElement(\"title\", { id: titleId }, title) : null,\n        React.createElement(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M9 3.75a3.75 3.75 0 1 0 0 7.5 3.75 3.75 0 0 0 0-7.5ZM3.75 7.5a5.25 5.25 0 1 1 10.5 0 5.25 5.25 0 0 1-10.5 0ZM9 15.75A5.25 5.25 0 0 0 3.75 21a.75.75 0 0 1-1.5 0 6.75 6.75 0 0 1 13.5 0 .75.75 0 0 1-1.5 0A5.25 5.25 0 0 0 9 15.75Zm7.214-10.824a.75.75 0 1 0-.428 1.438A2.752 2.752 0 0 1 15 11.75a.75.75 0 0 0-.75.75v1a.75.75 0 0 0 .75.75 4.25 4.25 0 0 1 4.25 4.25.75.75 0 0 0 1.5 0 5.75 5.75 0 0 0-4.206-5.539 4.251 4.251 0 0 0-.33-8.035Z\", fill: \"currentColor\" })));\n});\nexport default SvgPersonGroup;\n","enum KodeverkType {\n  ARBEID_TYPE = 'ArbeidType',\n  AVSLAGSARSAK = 'Avslagsårsak',\n  VENT_AARSAK = 'Venteårsak',\n  BEHANDLING_AARSAK = 'BehandlingÅrsakType',\n  KLAGE_AVVIST_AARSAK = 'KlageAvvistÅrsak',\n  KLAGE_MEDHOLD_ARSAK = 'KlageMedholdÅrsak',\n  KLAGE_HJEMMEL = 'KlageHjemmel',\n  OMSORGSOVERTAKELSE_VILKAR_TYPE = 'OmsorgsovertakelseVilkårType',\n  MEDLEMSKAP_MANUELL_VURDERING_TYPE = 'MedlemskapManuellVurderingType',\n  VERGE_TYPE = 'VergeType',\n  LANDKODER = 'Landkoder',\n  MORS_AKTIVITET = 'MorsAktivitet',\n  VIRKSOMHET_TYPE = 'VirksomhetType',\n  OVERFOERING_AARSAK_TYPE = 'OverføringÅrsak',\n  PERSONSTATUS_TYPE = 'PersonstatusType',\n  FAGSAK_STATUS = 'FagsakStatus',\n  RELATERT_YTELSE_TILSTAND = 'RelatertYtelseTilstand',\n  RELATERT_YTELSE_TYPE = 'RelatertYtelseType',\n  FAGSAK_YTELSE = 'FagsakYtelseType',\n  FORELDRE_TYPE = 'ForeldreType',\n  FAMILIE_HENDELSE_TYPE = 'FamilieHendelseType',\n  INNSYN_RESULTAT_TYPE = 'InnsynResultatType',\n  BEHANDLING_TYPE = 'BehandlingType',\n  OPPHOLD_ARSAK = 'OppholdÅrsak',\n  UTSETTELSE_AARSAK_TYPE = 'UtsettelseÅrsak',\n  OPPTJENING_AKTIVITET_TYPE = 'OpptjeningAktivitetType',\n  UTTAK_PERIODE_TYPE = 'UttakPeriodeType',\n  REVURDERING_VARSLING_ÅRSAK = 'RevurderingVarslingÅrsak',\n  MANUELL_BEHANDLING_AARSAK = 'ManuellBehandlingÅrsak',\n  PERIODE_RESULTAT_AARSAK = 'PeriodeResultatÅrsak',\n  INNTEKTSKATEGORI = 'Inntektskategori',\n  BEREGNINGSGRUNNLAG_ANDELTYPER = 'BeregningsgrunnlagAndeltype',\n  AKTIVITET_STATUS = 'AktivitetStatus',\n  ARBEIDSKATEGORI = 'Arbeidskategori',\n  FAGSYSTEM = 'Fagsystem',\n  REGION = 'Region',\n  SIVILSTAND_TYPE = 'SivilstandType',\n  DOKUMENT_TYPE_ID = 'DokumentTypeId',\n  FAKTA_OM_BEREGNING_TILFELLE = 'FaktaOmBeregningTilfelle',\n  GRADERING_AVSLAG_AARSAK = 'GraderingAvslagÅrsak',\n  SKJERMLENKE_TYPE = 'SkjermlenkeType',\n  BEHANDLING_RESULTAT_TYPE = 'BehandlingResultatType',\n  ARBEIDSFORHOLD_HANDLING_TYPE = 'ArbeidsforholdHandlingType',\n  HISTORIKK_OPPLYSNING_TYPE = 'HistorikkOpplysningType',\n  HISTORIKK_ENDRET_FELT_TYPE = 'HistorikkEndretFeltType',\n  HISTORIKKINNSLAG_TYPE = 'HistorikkinnslagType',\n  HISTORIKK_AKTOER = 'HistorikkAktør',\n  BEHANDLING_STATUS = 'BehandlingStatus',\n  FAR_SOEKER_TYPE = 'FarSøkerType',\n  MEDLEMSKAP_DEKNING = 'MedlemskapDekningType',\n  MEDLEMSKAP_TYPE = 'MedlemskapType',\n  STOENADSKONTOTYPE = 'StønadskontoType',\n  KONSEKVENS_FOR_YTELSEN = 'KonsekvensForYtelsen',\n  UTTAK_ARBEID_TYPE = 'UttakArbeidType',\n  UTTAK_UTSETTELSE_TYPE = 'UttakUtsettelseType',\n  VILKAR_TYPE = 'VilkårType',\n  AKTSOMHET = 'Aktsomhet',\n  VURDERING = 'AnnenVurdering',\n  VEDTAK_RESULTAT_TYPE = 'VedtakResultatType',\n  PERMISJONSBESKRIVELSE_TYPE = 'PermisjonsbeskrivelseType',\n  VURDER_ARBEIDSFORHOLD_HISTORIKKINNSLAG = 'VurderArbeidsforholdHistorikkinnslag',\n  TILBAKEKR_VIDERE_BEH = 'VidereBehandling',\n  VURDER_AARSAK = 'VurderÅrsak',\n  ANKE_OMGJOER_AARSAK = 'AnkeOmgjørÅrsak',\n  AKTIVITETSKRAV_AVKLARING = 'KontrollerAktivitetskravAvklaring',\n  OPPHOLDSTILLATELSE_TYPE = 'OppholdstillatelseType',\n  FARESIGNAL_VURDERING = 'FaresignalVurdering',\n  FORDELING_PERIODE_KILDE = 'FordelingPeriodeKilde',\n  RELASJONSROLLE_TYPE = 'RelasjonsRolleType',\n}\n\nexport default KodeverkType;\n","import KodeverkType from './kodeverkTyper';\n\n// TODO Fjern desse metodane. Kan like godt slå opp direkte\n\nexport const getKodeverknavnFraKode = (\n  alleKodeverk: any,\n  kodeverkType: string,\n  kode: string,\n  undertype?: string,\n): string => {\n  // @ts-ignore fiks\n  let kodeverkForType: KodeverkMedNavn[] = alleKodeverk[kodeverkType];\n  if (!kodeverkForType || kodeverkForType.length === 0) {\n    return '';\n  }\n  if (undertype) {\n    // @ts-ignore Må endra kodeverket-typen til å støtta undertype\n    kodeverkForType = kodeverkForType[undertype];\n  }\n\n  const kodeverk = kodeverkForType.find(k => k.kode === kode);\n  return kodeverk ? kodeverk.navn : '';\n};\n\nexport const getKodeverknavnFn =\n  (alleKodeverk: any) =>\n  (kode: string, kodeverkType: KodeverkType, undertype?: string): string =>\n    getKodeverknavnFraKode(alleKodeverk, kodeverkType, kode, undertype);\n","import React, { FunctionComponent, useState, useCallback, useMemo } from 'react';\nimport { Label, BodyShort } from '@navikt/ds-react';\nimport { FormattedMessage } from 'react-intl';\nimport { Table, TableRow, TableColumn, VerticalSpacer } from '@navikt/ft-ui-komponenter';\nimport { getDateAndTime } from '@navikt/ft-utils';\nimport { PersonGroupIcon, CalendarIcon, XMarkIcon } from '@navikt/aksel-icons';\n\nimport { AlleKodeverk } from '@navikt/fp-types';\nimport { OppgaveReservasjonEndringDatoModal, FlyttReservasjonModal } from '@navikt/fp-los-felles';\nimport { KodeverkType, getKodeverknavnFraKode } from '@navikt/fp-kodeverk';\n\nimport { restApiHooks, RestApiPathsKeys } from '../../data/fplosRestApi';\nimport Reservasjon from '../../typer/reservasjonTsType';\n\nimport styles from './reservasjonerTabell.module.css';\n\nconst headerTextCodes = [\n  'ReservasjonerTabell.Navn',\n  'ReservasjonerTabell.Saksnr',\n  'ReservasjonerTabell.BehandlingType',\n  'ReservasjonerTabell.ReservertTil',\n  'ReservasjonerTabell.Endre',\n  'ReservasjonerTabell.Flytt',\n  'ReservasjonerTabell.Slett',\n];\n\ninterface OwnProps {\n  reservasjoner: Reservasjon[];\n  opphevReservasjon: (oppgaveId: number) => Promise<string>;\n  hentAvdelingensReservasjoner: () => void;\n  alleKodeverk: AlleKodeverk;\n}\n\nconst ReservasjonerTabell: FunctionComponent<OwnProps> = ({\n  reservasjoner,\n  opphevReservasjon,\n  hentAvdelingensReservasjoner,\n  alleKodeverk,\n}) => {\n  const [showReservasjonEndringDatoModal, setShowReservasjonEndringDatoModal] = useState(false);\n  const [showFlyttReservasjonModal, setShowFlyttReservasjonModal] = useState(false);\n  const [valgtReservasjon, setValgtReservasjon] = useState<Reservasjon | undefined>(undefined);\n\n  const closeReservasjonEndringDatoModal = useCallback(() => {\n    setShowReservasjonEndringDatoModal(false);\n  }, []);\n\n  const showReservasjonEndringDato = useCallback((reservasjon: Reservasjon): void => {\n    setShowReservasjonEndringDatoModal(true);\n    setValgtReservasjon(reservasjon);\n  }, []);\n\n  const showFlytteModal = useCallback((reservasjon: Reservasjon): void => {\n    setShowFlyttReservasjonModal(true);\n    setValgtReservasjon(reservasjon);\n  }, []);\n\n  const closeFlytteModal = useCallback(() => {\n    setShowFlyttReservasjonModal(false);\n  }, []);\n\n  const sorterteReservasjoner = useMemo(\n    () =>\n      reservasjoner.sort((reservasjon1, reservasjon2) =>\n        reservasjon1.reservertAvNavn.localeCompare(reservasjon2.reservertAvNavn),\n      ),\n    [reservasjoner],\n  );\n\n  const { startRequest: endreOppgavereservasjon } = restApiHooks.useRestApiRunner(\n    RestApiPathsKeys.ENDRE_OPPGAVERESERVASJON,\n  );\n\n  const { startRequest: flyttOppgavereservasjon } = restApiHooks.useRestApiRunner(RestApiPathsKeys.FLYTT_RESERVASJON);\n\n  const {\n    startRequest: hentSaksbehandler,\n    state: hentSaksbehandlerState,\n    data: saksbehandler,\n    resetRequestData: resetHentSaksbehandler,\n  } = restApiHooks.useRestApiRunner(RestApiPathsKeys.FLYTT_RESERVASJON_SAKSBEHANDLER_SOK);\n\n  return (\n    <>\n      <Label size=\"small\">\n        <FormattedMessage id=\"ReservasjonerTabell.Reservasjoner\" />\n      </Label>\n      {sorterteReservasjoner.length === 0 && (\n        <>\n          <VerticalSpacer eightPx />\n          <BodyShort size=\"small\">\n            <FormattedMessage id=\"ReservasjonerTabell.IngenReservasjoner\" />\n          </BodyShort>\n          <VerticalSpacer eightPx />\n        </>\n      )}\n      {sorterteReservasjoner.length > 0 && (\n        <Table headerTextCodes={headerTextCodes} noHover>\n          {sorterteReservasjoner.map(reservasjon => (\n            <TableRow key={reservasjon.oppgaveId}>\n              <TableColumn>{reservasjon.reservertAvNavn}</TableColumn>\n              <TableColumn>{reservasjon.oppgaveSaksNr}</TableColumn>\n              <TableColumn>\n                {getKodeverknavnFraKode(alleKodeverk, KodeverkType.BEHANDLING_TYPE, reservasjon.behandlingType)}\n              </TableColumn>\n              <TableColumn>\n                <FormattedMessage\n                  id=\"ReservasjonerTabell.ReservertTilFormat\"\n                  values={getDateAndTime(reservasjon.reservertTilTidspunkt)}\n                />\n              </TableColumn>\n              <TableColumn>\n                <CalendarIcon className={styles.calendarIcon} onClick={() => showReservasjonEndringDato(reservasjon)} />\n              </TableColumn>\n              <TableColumn>\n                <PersonGroupIcon className={styles.flyttIcon} onClick={() => showFlytteModal(reservasjon)} />\n              </TableColumn>\n              <TableColumn>\n                <XMarkIcon className={styles.removeIcon} onClick={() => opphevReservasjon(reservasjon.oppgaveId)} />\n              </TableColumn>\n            </TableRow>\n          ))}\n        </Table>\n      )}\n      {valgtReservasjon && showReservasjonEndringDatoModal && (\n        <OppgaveReservasjonEndringDatoModal\n          showModal={showReservasjonEndringDatoModal}\n          closeModal={closeReservasjonEndringDatoModal}\n          reserverTilDefault={valgtReservasjon.reservertTilTidspunkt}\n          endreReserverasjonState={closeReservasjonEndringDatoModal}\n          hentReserverteOppgaver={hentAvdelingensReservasjoner}\n          oppgaveId={valgtReservasjon.oppgaveId}\n          endreOppgavereservasjon={endreOppgavereservasjon}\n        />\n      )}\n      {valgtReservasjon && showFlyttReservasjonModal && (\n        <FlyttReservasjonModal\n          showModal={showFlyttReservasjonModal}\n          closeModal={closeFlytteModal}\n          oppgaveId={valgtReservasjon.oppgaveId}\n          toggleMenu={closeFlytteModal}\n          hentReserverteOppgaver={hentAvdelingensReservasjoner}\n          flyttOppgavereservasjon={flyttOppgavereservasjon}\n          hentSaksbehandler={hentSaksbehandler}\n          hentSaksbehandlerState={hentSaksbehandlerState}\n          saksbehandler={saksbehandler}\n          resetHentSaksbehandler={resetHentSaksbehandler}\n        />\n      )}\n    </>\n  );\n};\n\nexport default ReservasjonerTabell;\n"],"names":["__rest","this","s","e","t","p","i","SvgPersonGroup","forwardRef","_a","ref","title","_titleId","props","titleId","useId","React.createElement","PersonGroupIcon","KodeverkType","getKodeverknavnFraKode","alleKodeverk","kodeverkType","kode","undertype","kodeverkForType","kodeverk","k","headerTextCodes","ReservasjonerTabell","reservasjoner","opphevReservasjon","hentAvdelingensReservasjoner","showReservasjonEndringDatoModal","setShowReservasjonEndringDatoModal","useState","showFlyttReservasjonModal","setShowFlyttReservasjonModal","valgtReservasjon","setValgtReservasjon","closeReservasjonEndringDatoModal","useCallback","showReservasjonEndringDato","reservasjon","showFlytteModal","closeFlytteModal","sorterteReservasjoner","useMemo","reservasjon1","reservasjon2","endreOppgavereservasjon","restApiHooks","RestApiPathsKeys","flyttOppgavereservasjon","hentSaksbehandler","hentSaksbehandlerState","saksbehandler","resetHentSaksbehandler","jsxs","Fragment","jsx","Label","FormattedMessage","VerticalSpacer","BodyShort","Table","TableRow","TableColumn","getDateAndTime","CalendarIcon","styles","XMarkIcon","OppgaveReservasjonEndringDatoModal","FlyttReservasjonModal","ReservasjonerTabell$1"],"mappings":"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","x_google_ignoreList":[0]}