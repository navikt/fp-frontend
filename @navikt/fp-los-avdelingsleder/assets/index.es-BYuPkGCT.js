import{d as i}from"./dayjs.min-Cke173X9.js";import{n as k,P as f}from"./index.es-BJFayhgu.js";function p(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var d={exports:{}},c=d.exports,u;function h(){return u||(u=1,function(e,t){(function(r,a){e.exports=a()})(c,function(){return function(r,a){a.prototype.isSameOrAfter=function(s,o){return this.isSame(s,o)||this.isAfter(s,o)}}})}(d)),d.exports}var I=h();const O=p(I);var m={exports:{}},x=m.exports,g;function D(){return g||(g=1,function(e,t){(function(r,a){e.exports=a()})(x,function(){return function(r,a){a.prototype.isSameOrBefore=function(s,o){return this.isSame(s,o)||this.isBefore(s,o)}}})}(m)),m.exports}var F=D();const y=p(F),S="Dato må være før eller lik {limit}",P="Dato må være etter eller lik {limit}",N="Perioder kan ikke overlappe i tid",L="Perioder kan ikke overlappe i tid (uttak, utsettelse, gradering, overforing, opphold)",M="Dato må være lik {value}",b="Dato må skrives slik: dd.mm.åååå",q="Periode må skrives slik: dd.mm.åååå - dd.mm.åååå",T="Tallet kan ikke inneholde mer enn to desimaler",$="Tallet kan ikke ha desimaler",j="Feltet kan kun inneholde tall",B="Ugyldig fødselsnummer",E="Feltet må være et fødselsnummer (11 siffer)",R="Ugyldig organisasjonsnummer.",A="Ugyldig organisasjonsnummer eller fødselsnummer",U="Startdato må være før eller lik sluttdato",Z="Periode er utenfor opptjeningsperioden",_="Ugyldig saksnummer eller fødselsnummer",V="Feltet inneholder ugyldige tegn: {text}",W="Feltet inneholder en ugyldig verdi: {value}",w="Feltet kan ikke inneholde mellomrom",z="Feltet må fylles ut",C="Du kan skrive maksimalt {length} tegn",G="Du må skrive minst {length} tegn",H="Du kan skrive maksimalt {length} tegn eller et fødselsnummer (11 siffer)",J="Feltet må være mindre eller lik {length}",K="Feltet må være større eller lik {length}",Q="Fødselsnummer til den andre forelderen kan ikke være det samme som søker",X={DateNotBeforeOrEqual:S,DateNotAfterOrEqual:P,DateRangesOverlapping:N,DateRangesOverlappingPeriodTypes:L,DatesNotEqual:M,InvalidDate:b,InvalidDatesInPeriod:q,InvalidDecimal:T,InvalidInteger:$,InvalidNumber:j,InvalidFodselsnr:B,InvalidFodselsnrFormat:E,InvalidOrgnr:R,InvalidOrgnrOrFodselsnr:A,InvalidPeriod:U,InvalidPeriodRange:Z,InvalidSaksnrOrFodselsnrFormat:_,InvalidText:V,InvalidValue:W,IllegalWhiteSpace:w,IsRequired:z,MaxLength:C,MinLength:G,MaxLengthOrFodselsnr:H,MaxValue:J,MinValue:K,SammeFodselsnrSomSoker:Q},{formatMessage:n}=k(X),Y=e=>n({id:"DateNotBeforeOrEqual"},{limit:e}),ee=e=>n({id:"DateNotAfterOrEqual"},{limit:e}),te=()=>n({id:"InvalidDate"}),re=e=>n({id:"InvalidInteger"},{text:e}),ne=e=>n({id:"InvalidNumber"},{text:e}),v=e=>n({id:"InvalidText"},{text:e}),le=()=>n({id:"IsRequired"}),ae=e=>n({id:"MaxLength"},{length:e}),ie=e=>n({id:"MinLength"},{length:e}),se=/(19|20)\d{2}-(0?[1-9]|1[0-2])-(0?[1-9]|1\d|2\d|3[01])$/,oe=/^-?\d+([,.]\d+)?$/,de=/^\s*-?\d+\s*$/,me=/^[\p{N}\p{L}\p{Z}.'\-/%§!?@_()+:;,="&\n]*$/u,ue=/[\p{N}\p{L}\p{Z}.'\-/%§!?@_()+:;,="&\n]*/gu,ge=/^[0-9\p{L}\p{Z}.'-]*$/u,fe=/[0-9\p{L}\p{Z}.'-]*/gu,l=e=>e==null||e.toString().trim().length===0,pe=()=>i().startOf("day");i.extend(O);i.extend(y);const Oe=e=>l(e)?le():void 0,xe=e=>t=>l(t)||t.toString().trim().length>=e?null:ie(e),De=e=>t=>l(t)||t.toString().trim().length<=e?null:ae(e),ve=e=>l(e)||oe.test(e)?null:ne(e),ke=e=>l(e)||de.test(e)?null:re(e),Fe=e=>ve(e)||ke(e),ye=e=>l(e)||se.test(e)?null:te(),Se=e=>t=>{const r=i(e).endOf("day");return l(t)||i(t).isSameOrBefore(r)?null:Y(r.format(f))},ce=e=>t=>{const r=i(e).startOf("day");return l(t)||i(t).isSameOrAfter(r)?null:ee(r.format(f))},Pe=e=>ce(pe())(e),Ne=e=>{if(!me.test(e)){const t=e.replace(ue,"");return v(t.replace(/[\t]/g,"Tabulatortegn"))}return null},Le=e=>{if(!ge.test(e)){const t=e.replace(fe,"");return v(t.replace(/[\t]/g,"Tabulatortegn"))}return null};export{Le as D,Ne as N,ye as O,xe as a,Se as b,Oe as e,Pe as k,De as o,Fe as v};
