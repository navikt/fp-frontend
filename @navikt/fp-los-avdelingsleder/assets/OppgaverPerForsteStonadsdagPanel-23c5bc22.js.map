{"version":3,"file":"OppgaverPerForsteStonadsdagPanel-23c5bc22.js","sources":["../../src/nokkeltall/components/antallBehandlingerPerForsteStonadsdag/OppgaverPerForsteStonadsdagGraf.tsx","../../src/nokkeltall/components/antallBehandlingerPerForsteStonadsdag/OppgaverPerForsteStonadsdagPanel.tsx"],"sourcesContent":["import React, { FunctionComponent, useMemo } from 'react';\nimport dayjs from 'dayjs';\nimport isSameOrBefore from 'dayjs/plugin/isSameOrBefore';\nimport isSameOrAfter from 'dayjs/plugin/isSameOrAfter';\nimport { Panel } from '@navikt/ds-react';\nimport { DDMMYYYY_DATE_FORMAT } from '@navikt/ft-utils';\nimport { ReactECharts } from '@navikt/fp-los-felles';\n\nimport OppgaverForForsteStonadsdag from '../../../typer/oppgaverForForsteStonadsdagTsType';\n\ndayjs.extend(isSameOrBefore);\ndayjs.extend(isSameOrAfter);\n\ninterface Koordinat {\n  x: number;\n  y: number;\n}\n\nexport const lagKoordinater = (oppgaverPerForsteStonadsdag: OppgaverForForsteStonadsdag[]): Koordinat[] =>\n  oppgaverPerForsteStonadsdag.map(o => ({\n    x: dayjs(o.forsteStonadsdag).startOf('day').toDate().getTime(),\n    y: o.antall,\n  }));\n\nexport const lagDatastruktur = (koordinater: Koordinat[]): number[][] => {\n  const nyeKoordinater = [];\n  const periodeStart = koordinater\n    .map(koordinat => dayjs(koordinat.x))\n    .reduce(\n      (tidligesteDato, dato) => (tidligesteDato.isSameOrBefore(dato) ? tidligesteDato : dato),\n      dayjs().startOf('day'),\n    )\n    .toDate();\n  const periodeSlutt = koordinater\n    .map(koordinat => dayjs(koordinat.x))\n    .reduce((senesteDato, dato) => (senesteDato.isSameOrAfter(dato) ? senesteDato : dato), dayjs().startOf('day'))\n    .toDate();\n\n  for (let dato = dayjs(periodeStart); dato.isSameOrBefore(periodeSlutt); dato = dato.add(1, 'days')) {\n    const funnetKoordinat = koordinater.find(k => dayjs(k.x).isSame(dato));\n    nyeKoordinater.push([dato.toDate().getTime(), funnetKoordinat ? funnetKoordinat.y : 0]);\n  }\n  return nyeKoordinater;\n};\n\ninterface OwnProps {\n  height: number;\n  oppgaverPerForsteStonadsdag: OppgaverForForsteStonadsdag[];\n}\n\n/**\n * OppgaverPerForsteStonadsdagGraf.\n */\nconst OppgaverPerForsteStonadsdagGraf: FunctionComponent<OwnProps> = ({ height, oppgaverPerForsteStonadsdag }) => {\n  const koordinater = useMemo(() => lagKoordinater(oppgaverPerForsteStonadsdag), [oppgaverPerForsteStonadsdag]);\n  const data = useMemo(() => lagDatastruktur(koordinater), [koordinater]);\n  return (\n    <Panel>\n      <ReactECharts\n        height={height}\n        option={{\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              snap: true,\n              label: {\n                formatter: params => dayjs(params.value).format(DDMMYYYY_DATE_FORMAT),\n              },\n            },\n          },\n          toolbox: {\n            feature: {\n              saveAsImage: {\n                title: 'Lagre ',\n                name: 'Antall_førstegangsbehandlinger_fordelt_på_første_stønadsdag',\n              },\n            },\n          },\n          xAxis: {\n            type: 'time',\n            axisLabel: {\n              formatter: '{dd}.{MM}.{yyyy}',\n            },\n          },\n          yAxis: {\n            type: 'value',\n          },\n          series: [\n            {\n              data,\n              type: 'line',\n              areaStyle: {},\n            },\n          ],\n          color: ['#337c9b'],\n        }}\n      />\n    </Panel>\n  );\n};\n\nexport default OppgaverPerForsteStonadsdagGraf;\n","import React, { FunctionComponent } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Label } from '@navikt/ds-react';\nimport { VerticalSpacer } from '@navikt/ft-ui-komponenter';\n\nimport OppgaverForForsteStonadsdag from '../../../typer/oppgaverForForsteStonadsdagTsType';\nimport OppgaverPerForsteStonadsdagGraf from './OppgaverPerForsteStonadsdagGraf';\n\ninterface OwnProps {\n  height: number;\n  oppgaverPerForsteStonadsdag: OppgaverForForsteStonadsdag[];\n}\n\n/**\n * OppgaverPerForsteStonadsdagPanel.\n */\nexport const OppgaverPerForsteStonadsdagPanel: FunctionComponent<OwnProps> = ({\n  height,\n  oppgaverPerForsteStonadsdag,\n}) => (\n  <>\n    <Label size=\"small\">\n      <FormattedMessage id=\"OppgaverPerForsteStonadsdagPanel.FordeltPaForsteStonadsdag\" />\n    </Label>\n    <VerticalSpacer sixteenPx />\n    <OppgaverPerForsteStonadsdagGraf height={height} oppgaverPerForsteStonadsdag={oppgaverPerForsteStonadsdag} />\n  </>\n);\n\nexport default OppgaverPerForsteStonadsdagPanel;\n"],"names":["dayjs","isSameOrBefore","isSameOrAfter","lagKoordinater","oppgaverPerForsteStonadsdag","o","lagDatastruktur","koordinater","nyeKoordinater","periodeStart","koordinat","tidligesteDato","dato","periodeSlutt","senesteDato","funnetKoordinat","k","OppgaverPerForsteStonadsdagGraf","height","useMemo","data","jsx","Panel","ReactECharts","params","DDMMYYYY_DATE_FORMAT","OppgaverPerForsteStonadsdagPanel","jsxs","Fragment","Label","FormattedMessage","VerticalSpacer"],"mappings":"8UAUAA,EAAA,OAAAC,CAAA,EACAD,EAAA,OAAAE,CAAA,EAOO,MAAAC,EAAAC,GAAAA,EAAA,IAAAC,IAAA,CACiC,EAAAL,EAAAK,EAAA,gBAAA,EAAA,QAAA,KAAA,EAAA,OAAA,EAAA,QAAA,EACyB,EAAAA,EAAA,MAE/D,EAAA,EAEKC,EAAAC,GAAA,CACL,MAAAC,EAAA,CAAA,EACAC,EAAAF,EAAA,IAAAG,GAAAV,EAAAU,EAAA,CAAA,CAAA,EAAA,OAEG,CAAAC,EAAAC,IAAAD,EAAA,eAAAC,CAAA,EAAAD,EAAAC,EACmFZ,EAAA,EAAA,QAAA,KAAA,CAC7D,EAAA,OAAA,EAGzBa,EAAAN,EAAA,IAAAG,GAAAV,EAAAU,EAAA,CAAA,CAAA,EAAA,OAAA,CAAAI,EAAAF,IAAAE,EAAA,cAAAF,CAAA,EAAAE,EAAAF,EAAAZ,EAAA,EAAA,QAAA,KAAA,CAAA,EAAA,OAAA,EAKA,QAAAY,EAAAZ,EAAAS,CAAA,EAAAG,EAAA,eAAAC,CAAA,EAAAD,EAAAA,EAAA,IAAA,EAAA,MAAA,EAAA,CACE,MAAAG,EAAAR,EAAA,KAAAS,GAAAhB,EAAAgB,EAAA,CAAA,EAAA,OAAAJ,CAAA,CAAA,EACAJ,EAAA,KAAA,CAAAI,EAAA,OAAA,EAAA,UAAAG,EAAAA,EAAA,EAAA,CAAA,CAAA,CAAsF,CAExF,OAAAP,CACF,EAUAS,EAAA,CAAA,CAAA,OAAAC,EAAA,4BAAAd,KAAA,CACE,MAAAG,EAAAY,EAAAA,QAAA,IAAAhB,EAAAC,CAAA,EAAA,CAAAA,CAAA,CAAA,EACAgB,EAAAD,EAAAA,QAAA,IAAAb,EAAAC,CAAA,EAAA,CAAAA,CAAA,CAAA,EACA,OAAAc,MAAAC,EAAA,CAAA,SAAAD,EAAA,IAEIE,EAAC,CAAA,OAAAL,EACC,OAAA,CACQ,QAAA,CACG,QAAA,OACE,YAAA,CACI,KAAA,GACL,MAAA,CACC,UAAAM,GAAAxB,EAAAwB,EAAA,KAAA,EAAA,OAAAC,CAAA,CAC+D,CACtE,CACF,EACF,QAAA,CACS,QAAA,CACE,YAAA,CACM,MAAA,SACJ,KAAA,6DACD,CACR,CACF,EACF,MAAA,CACO,KAAA,OACC,UAAA,CACK,UAAA,kBACE,CACb,EACF,MAAA,CACO,KAAA,OACC,EACR,OAAA,CACQ,CACN,KAAAL,EACE,KAAA,OACM,UAAA,CAAA,CACM,CACd,EACF,MAAA,CAAA,SAAA,CACiB,CACnB,CAAA,CAAA,CAAA,CAIR,oqBCnFO,MAAAM,EAAA,CAAA,CAAuE,OAAAR,EAC5E,4BAAAd,CAEF,IAAAuB,EAAA,KAAAC,WAAA,CAAA,SAAA,CAEIP,EAAAA,IAAAQ,EAAA,CAAA,KAAA,QAAA,SAAAR,MAAAS,EAAA,CAAA,GAAA,4DAAA,CAAA,CAAA,CAAA,EAEAT,EAAAA,IAAAU,EAAA,CAAA,UAAA,EAAA,CAAA,EAC0BV,EAAAA,IAAAJ,EAAA,CAAA,OAAAC,EAAA,4BAAAd,CAAA,CAAA,CACiF,EAAA"}