{"version":3,"file":"VentefristUtløperPanel-2b46f006.js","sources":["../../src/nokkeltall/components/ventefristUtløper/VentefristUtløperGraf.tsx","../../src/nokkeltall/components/ventefristUtløper/VentefristUtløperPanel.tsx"],"sourcesContent":["import React, { FunctionComponent, useMemo } from 'react';\nimport dayjs from 'dayjs';\nimport isSameOrBefore from 'dayjs/plugin/isSameOrBefore';\nimport { Panel } from '@navikt/ds-react';\nimport { DDMMYYYY_DATE_FORMAT } from '@navikt/ft-utils';\nimport { ReactECharts } from '@navikt/fp-los-felles';\n\nimport OppgaverManueltPaVent from '../../../typer/oppgaverManueltPaVentTsType';\n\ndayjs.extend(isSameOrBefore);\n\ninterface Koordinat {\n  x: number;\n  y: number;\n}\n\nconst lagKoordinater = (oppgaverManueltPaVent: OppgaverManueltPaVent[]): Koordinat[] =>\n  oppgaverManueltPaVent.map(o => ({\n    x: dayjs(o.behandlingFrist).startOf('day').toDate().getTime(),\n    y: o.antall,\n  }));\n\nconst lagDatastruktur = (koordinater: Koordinat[]): (number | Date)[][] => {\n  const nyeKoordinater = [];\n  const periodeStart = koordinater\n    .map(koordinat => dayjs(koordinat.x))\n    .reduce(\n      (tidligesteDato, dato) => (tidligesteDato.isSameOrBefore(dato) ? tidligesteDato : dato),\n      dayjs().startOf('day'),\n    )\n    .toDate();\n  const periodeSlutt = koordinater\n    .map(koordinat => dayjs(koordinat.x))\n    .reduce((senesteDato, dato) => (senesteDato.isSameOrAfter(dato) ? senesteDato : dato), dayjs().startOf('day'))\n    .toDate();\n\n  for (let dato = dayjs(periodeStart); dato.isSameOrBefore(periodeSlutt); dato = dato.add(1, 'days')) {\n    const sumY = koordinater\n      .filter(k => dayjs(k.x).isSame(dato))\n      .map(k => k.y)\n      .reduce((sum, y)  => sum + y, 0);\n    nyeKoordinater.push([dato.toDate(), sumY]);\n  }\n\n  return nyeKoordinater;\n};\n\ninterface OwnProps {\n  height: number;\n  behandlingerPaVent: OppgaverManueltPaVent[];\n}\n\n/**\n * VentefristUtløperGraf.\n */\nconst VentefristUtløperGraf: FunctionComponent<OwnProps> = ({ height, behandlingerPaVent }) => {\n  const koordinater = useMemo(() => lagKoordinater(behandlingerPaVent), [behandlingerPaVent]);\n  const data = useMemo(() => lagDatastruktur(koordinater), [koordinater]);\n  return (\n    <Panel>\n      <ReactECharts\n        height={height}\n        option={{\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              snap: true,\n              label: {\n                formatter: params => {\n                  if (params.axisDimension === 'y') {\n                    return parseInt(params.value as string, 10).toString();\n                  }\n                  return dayjs(params.value).format(DDMMYYYY_DATE_FORMAT);\n                },\n              },\n            },\n          },\n          toolbox: {\n            feature: {\n              saveAsImage: {\n                title: 'Lagre ',\n                name: 'Antall_forstegangsbehandlinger_der_frist_utloper',\n              },\n            },\n          },\n          xAxis: {\n            type: 'time',\n            axisLabel: {\n              formatter: '{dd}.{MM}.{yyyy}',\n            },\n          },\n          yAxis: {\n            type: 'value',\n          },\n          series: [\n            {\n              data,\n              type: 'line',\n              areaStyle: {},\n            },\n          ],\n          color: ['#337c9b'],\n        }}\n      />\n    </Panel>\n  );\n};\n\nexport default VentefristUtløperGraf;\n","import React, { FunctionComponent } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { useForm } from 'react-hook-form';\nimport { HStack, Label } from '@navikt/ds-react';\nimport { Form, RadioGroupPanel } from '@navikt/ft-form-hooks';\nimport { VerticalSpacer } from '@navikt/ft-ui-komponenter';\nimport { FagsakYtelseType, KodeverkType } from '@navikt/ft-kodeverk';\nimport { KodeverkMedNavn } from '@navikt/fp-types';\n\nimport OppgaverManueltPaVent from '../../../typer/oppgaverManueltPaVentTsType';\nimport StoreValuesInLocalStorage from '../../../data/StoreValuesInLocalStorage';\nimport useLosKodeverk from '../../../data/useLosKodeverk';\nimport VentefristUtløperGraf from './VentefristUtløperGraf';\n\nconst finnFagsakYtelseTypeNavn = (fagsakYtelseTyper: KodeverkMedNavn[], valgtFagsakYtelseType: string): string => {\n  const type = fagsakYtelseTyper.find(fyt => fyt.kode === valgtFagsakYtelseType);\n  return type ? type.navn : '';\n};\n\nexport const ALLE_YTELSETYPER_VALGT = 'ALLE';\n\ninterface OwnProps {\n  height: number;\n  behandlingerPaVent: OppgaverManueltPaVent[];\n  getValueFromLocalStorage: (key: string) => string | undefined;\n}\n\nconst formName = 'ventefristUtløperForm';\nconst formDefaultValues = { valgtYtelsetype: ALLE_YTELSETYPER_VALGT };\n\ntype FormValues = {\n  valgtYtelsetype: string;\n};\n\n/**\n * VentefristUtløperPanel.\n */\nconst VentefristUtløperPanel: FunctionComponent<OwnProps> = ({\n  height,\n  behandlingerPaVent,\n  getValueFromLocalStorage,\n}) => {\n  const fagsakYtelseTyper = useLosKodeverk(KodeverkType.FAGSAK_YTELSE);\n  const stringFromStorage = getValueFromLocalStorage(formName);\n  const lagredeVerdier = stringFromStorage ? JSON.parse(stringFromStorage) : undefined;\n\n  const formMethods = useForm<FormValues>({\n    defaultValues: lagredeVerdier || formDefaultValues,\n  });\n\n  const values = formMethods.watch();\n\n  return (\n    <Form<FormValues> formMethods={formMethods}>\n      <StoreValuesInLocalStorage stateKey={formName} values={values} />\n      <Label size=\"small\">\n        <FormattedMessage id=\"VentefristUtløperPanel.SattPaVent\" />\n      </Label>\n      <VerticalSpacer sixteenPx />\n      <HStack gap=\"4\">\n        <RadioGroupPanel\n          name=\"valgtYtelsetype\"\n          isHorizontal\n          radios={[\n            {\n              value: FagsakYtelseType.FORELDREPENGER,\n              label: finnFagsakYtelseTypeNavn(fagsakYtelseTyper, FagsakYtelseType.FORELDREPENGER),\n            },\n            {\n              value: FagsakYtelseType.ENGANGSSTONAD,\n              label: finnFagsakYtelseTypeNavn(fagsakYtelseTyper, FagsakYtelseType.ENGANGSSTONAD),\n            },\n            {\n              value: FagsakYtelseType.SVANGERSKAPSPENGER,\n              label: finnFagsakYtelseTypeNavn(fagsakYtelseTyper, FagsakYtelseType.SVANGERSKAPSPENGER),\n            },\n            {\n              value: ALLE_YTELSETYPER_VALGT,\n              label: <FormattedMessage id=\"VentefristUtløperPanel.Alle\" />,\n            },\n          ]}\n        />\n      </HStack>\n      <VerticalSpacer sixteenPx />\n      <VentefristUtløperGraf\n        height={height}\n        behandlingerPaVent={\n          behandlingerPaVent &&\n          behandlingerPaVent\n            .filter(ompv =>\n              values.valgtYtelsetype === ALLE_YTELSETYPER_VALGT\n                ? true\n                : values.valgtYtelsetype === ompv.fagsakYtelseType,\n            )\n        }\n      />\n    </Form>\n  );\n};\n\nexport default VentefristUtløperPanel;\n"],"names":["dayjs","isSameOrBefore","lagKoordinater","oppgaverManueltPaVent","o","lagDatastruktur","koordinater","nyeKoordinater","periodeStart","koordinat","tidligesteDato","dato","periodeSlutt","senesteDato","sumY","k","sum","y","VentefristUtløperGraf","height","behandlingerPaVent","useMemo","data","jsx","Panel","ReactECharts","params","DDMMYYYY_DATE_FORMAT","finnFagsakYtelseTypeNavn","fagsakYtelseTyper","valgtFagsakYtelseType","type","fyt","ALLE_YTELSETYPER_VALGT","formName","formDefaultValues","VentefristUtløperPanel","getValueFromLocalStorage","useLosKodeverk","KodeverkType","stringFromStorage","lagredeVerdier","formMethods","useForm","values","jsxs","Form","StoreValuesInLocalStorage","Label","FormattedMessage","VerticalSpacer","HStack","RadioGroupPanel","FagsakYtelseType","ompv","VentefristUtløperPanel$1"],"mappings":"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"}