{"version":3,"file":"AndreKriterierVelger-855d8e32.js","sources":["../../src/behandlingskoer/components/sakslisteForm/filtrering/AndreKriterierVelger.tsx"],"sourcesContent":["import React, { Fragment, FunctionComponent } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Label } from '@navikt/ds-react';\nimport { VerticalSpacer, ArrowBox } from '@navikt/ft-ui-komponenter';\nimport { CheckboxField, RadioGroupPanel } from '@navikt/ft-form-hooks';\n\nimport { useFormContext } from 'react-hook-form';\nimport { restApiHooks, RestApiPathsKeys } from '../../../../data/fplosRestApi';\nimport useLosKodeverk from '../../../../data/useLosKodeverk';\n\nimport styles from './andreKriterierVelger.module.css';\n\ninterface OwnProps {\n  valgtSakslisteId: number;\n  valgtAvdelingEnhet: string;\n  values: any;\n  hentAvdelingensSakslister: (params: { avdelingEnhet: string }) => void;\n  hentAntallOppgaver: (sakslisteId: number, avdelingEnhet: string) => void;\n}\n\n/**\n * AndreKriterierVelger\n */\nconst AndreKriterierVelger: FunctionComponent<OwnProps> = ({\n  valgtSakslisteId,\n  valgtAvdelingEnhet,\n  values,\n  hentAvdelingensSakslister,\n  hentAntallOppgaver,\n}) => {\n  const { setValue } = useFormContext();\n\n  const andreKriterierTyper = useLosKodeverk('AndreKriterierType');\n  const { startRequest: lagreSakslisteAndreKriterier } = restApiHooks.useRestApiRunner(\n    RestApiPathsKeys.LAGRE_SAKSLISTE_ANDRE_KRITERIER,\n  );\n\n  return (\n    <>\n      <Label size=\"small\">\n        <FormattedMessage id=\"AndreKriterierVelger.AndreKriterier\" />\n      </Label>\n      <VerticalSpacer eightPx />\n      {andreKriterierTyper.map(akt => (\n        <Fragment key={akt.kode}>\n          <VerticalSpacer fourPx />\n          <CheckboxField\n            key={akt.kode}\n            name={akt.kode}\n            label={akt.navn}\n            onChange={isChecked => {\n              setValue(`${akt.kode}_inkluder`, true);\n              return lagreSakslisteAndreKriterier({\n                sakslisteId: valgtSakslisteId,\n                avdelingEnhet: valgtAvdelingEnhet,\n                andreKriterierType: akt.kode,\n                checked: isChecked,\n                inkluder: true,\n              }).then(() => {\n                hentAntallOppgaver(valgtSakslisteId, valgtAvdelingEnhet);\n                hentAvdelingensSakslister({ avdelingEnhet: valgtAvdelingEnhet });\n              });\n            }}\n          />\n          {values[akt.kode] && (\n            <>\n              <VerticalSpacer sixteenPx />\n              <div className={styles.arrowbox}>\n                <ArrowBox alignOffset={30}>\n                  <RadioGroupPanel\n                    name={`${akt.kode}_inkluder`}\n                    isHorizontal\n                    isTrueOrFalseSelection\n                    onChange={skalInkludere =>\n                      lagreSakslisteAndreKriterier({\n                        sakslisteId: valgtSakslisteId,\n                        avdelingEnhet: valgtAvdelingEnhet,\n                        andreKriterierType: akt.kode,\n                        checked: true,\n                        inkluder: skalInkludere,\n                      }).then(() => {\n                        hentAntallOppgaver(valgtSakslisteId, valgtAvdelingEnhet);\n                        hentAvdelingensSakslister({ avdelingEnhet: valgtAvdelingEnhet });\n                      })\n                    }\n                    radios={[\n                      {\n                        value: 'true',\n                        label: <FormattedMessage id=\"AndreKriterierVelger.TaMed\" />,\n                      },\n                      {\n                        value: 'false',\n                        label: <FormattedMessage id=\"AndreKriterierVelger.Fjern\" />,\n                      },\n                    ]}\n                  />\n                </ArrowBox>\n              </div>\n            </>\n          )}\n        </Fragment>\n      ))}\n    </>\n  );\n};\n\nexport default AndreKriterierVelger;\n"],"names":["AndreKriterierVelger","valgtSakslisteId","valgtAvdelingEnhet","values","hentAvdelingensSakslister","hentAntallOppgaver","setValue","useFormContext","andreKriterierTyper","useLosKodeverk","lagreSakslisteAndreKriterier","restApiHooks","RestApiPathsKeys","jsxs","Fragment","jsx","Label","FormattedMessage","VerticalSpacer","akt","Fragment2","CheckboxField","isChecked","styles","ArrowBox","RadioGroupPanel","skalInkludere","AndreKriterierVelger$1"],"mappings":"0TAuBAA,EAAA,CAAA,CAA2D,iBAAAC,EACzD,mBAAAC,EACA,OAAAC,EACA,0BAAAC,EACA,mBAAAC,CAEF,IAAA,CACE,KAAA,CAAA,SAAAC,GAAAC,IAEAC,EAAAC,EAAA,oBAAA,EACA,CAAA,aAAAC,CAAA,EAAAC,EAAA,iBAAoEC,EAAA,+BACjD,EAGnB,OAAAC,EAAA,KAAAC,WAAA,CAAA,SAAA,CAEIC,EAAAA,IAAAC,EAAA,CAAA,KAAA,QAAA,SAAAD,MAAAE,EAAA,CAAA,GAAA,qCAAA,CAAA,CAAA,CAAA,EAEAF,EAAAA,IAAAG,EAAA,CAAA,QAAA,EAAA,CAAA,EACwBV,EAAA,IAAAW,GAAAN,EAAAA,KAAAO,EAAAA,SAAA,CAAA,SAAA,CAGpBL,EAAAA,IAAAG,EAAA,CAAA,OAAA,EAAA,CAAA,EAAuBH,EAAA,IACvBM,EAAC,CAAA,KAAAF,EAAA,KAEW,MAAAA,EAAA,KACC,SAAAG,IAEThB,EAAA,GAAAa,EAAA,IAAA,YAAA,EAAA,EACAT,EAAA,CAAoC,YAAAT,EACrB,cAAAC,EACE,mBAAAiB,EAAA,KACS,QAAAG,EACf,SAAA,EACC,CAAA,EAAA,KAAA,IAAA,CAEVjB,EAAAJ,EAAAC,CAAA,EACAE,EAAA,CAAA,cAAAF,CAAA,CAAA,CAA+D,CAAA,EAEnE,EAAAiB,EAAA,IAfS,EAgBXhB,EAAAgB,EAAA,IAAA,GAAAN,EAAAA,KAAAC,EAAAA,SAAA,CAAA,SAAA,CAGIC,EAAAA,IAAAG,EAAA,CAAA,UAAA,EAAA,CAAA,EAA0BH,EAAAA,IAAA,MAAA,CAAA,UAAAQ,EAAA,SAAA,SAAAR,EAAA,IAAAS,EAAA,CAAA,YAAA,GAAA,SAAAT,EAAA,IAGtBU,EAAC,CAAA,KAAA,GAAAN,EAAA,IAAA,YACkB,aAAA,GACL,uBAAA,GACU,SAAAO,GAAAhB,EAAA,CAES,YAAAT,EACd,cAAAC,EACE,mBAAAiB,EAAA,KACS,QAAA,GACf,SAAAO,CACC,CAAA,EAAA,KAAA,IAAA,CAEVrB,EAAAJ,EAAAC,CAAA,EACAE,EAAA,CAAA,cAAAF,CAAA,CAAA,CAA+D,CAAA,EAChE,OAAA,CAEK,CACN,MAAA,OACS,MAAAa,EAAAA,IAAAE,EAAA,CAAA,GAAA,4BAAA,CAAA,CACkD,EAC3D,CACA,MAAA,QACS,MAAAF,EAAAA,IAAAE,EAAA,CAAA,GAAA,4BAAA,CAAA,CACkD,CAC3D,CACF,CAAA,CAAA,CAAA,CAAA,CAAA,CAGN,EAAA,CACF,GAAAE,EAAA,IAAA,CAAA,CAGL,CAAA,CAAA,CAGP,EAEAQ,EAAA3B"}