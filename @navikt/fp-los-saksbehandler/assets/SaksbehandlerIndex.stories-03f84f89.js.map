{"version":3,"file":"SaksbehandlerIndex.stories-03f84f89.js","sources":["../../src/data/localStorageHelper.ts","../../src/behandlingskoer/components/SakslistePanel.tsx","../../src/behandlingskoer/BehandlingskoerIndex.tsx","../../src/saksstotte/nokkeltall/components/SaksbehandlerNokkeltallPanel.tsx","../../src/saksstotte/nokkeltall/SaksbehandlerNokkeltallIndex.tsx","../../src/saksstotte/components/SaksstottePaneler.tsx","../../src/saksstotte/SaksstotteIndex.tsx","../../src/components/SaksbehandlerDashboard.tsx","../../src/SaksbehandlerIndex.tsx"],"sourcesContent":["export const getValueFromLocalStorage = (key: string): string | undefined => {\n  const value = window.localStorage.getItem(key);\n  return value !== 'undefined' && value !== null ? value : undefined;\n};\n\nexport const setValueInLocalStorage = (key: string, value: any): void => {\n  window.localStorage.setItem(key, value);\n};\n\nexport const removeValueFromLocalStorage = (key: string): void => {\n  window.localStorage.removeItem(key);\n};\n","import React, { FunctionComponent } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Heading } from '@navikt/ds-react';\nimport { VerticalSpacer } from '@navikt/ft-ui-komponenter';\n\nimport { Oppgave } from '@navikt/fp-los-felles';\n\nimport {\n  getValueFromLocalStorage,\n  setValueInLocalStorage,\n  removeValueFromLocalStorage,\n} from '../../data/localStorageHelper';\nimport Saksliste from '../../typer/sakslisteTsType';\nimport { RestApiPathsKeys, restApiHooks } from '../../data/fplosSaksbehandlerRestApi';\nimport SakslisteVelgerForm from './SakslisteVelgerForm';\nimport OppgaverTabell from './OppgaverTabell';\n\ninterface OwnProps {\n  valgtSakslisteId?: number;\n  setValgtSakslisteId: (sakslisteId: number) => void;\n  sakslister: Saksliste[];\n  reserverOppgave: (oppgaveId: Oppgave) => void;\n}\n\n/**\n * SakslistePanel\n */\nconst SakslistePanel: FunctionComponent<OwnProps> = ({\n  reserverOppgave,\n  sakslister,\n  setValgtSakslisteId,\n  valgtSakslisteId,\n}) => {\n  const { startRequest: fetchAntallOppgaver, data: antallOppgaver } = restApiHooks.useRestApiRunner(\n    RestApiPathsKeys.BEHANDLINGSKO_OPPGAVE_ANTALL,\n  );\n\n  return (\n    <>\n      <Heading size=\"small\">\n        <FormattedMessage id=\"SakslistePanel.StartBehandling\" />\n      </Heading>\n      <VerticalSpacer sixteenPx />\n      <SakslisteVelgerForm\n        sakslister={sakslister}\n        setValgtSakslisteId={setValgtSakslisteId}\n        fetchAntallOppgaver={fetchAntallOppgaver}\n        getValueFromLocalStorage={getValueFromLocalStorage}\n        setValueInLocalStorage={setValueInLocalStorage}\n        removeValueFromLocalStorage={removeValueFromLocalStorage}\n      />\n      <VerticalSpacer twentyPx />\n      {valgtSakslisteId && (\n        <OppgaverTabell\n          reserverOppgave={reserverOppgave}\n          antallOppgaver={antallOppgaver}\n          valgtSakslisteId={valgtSakslisteId}\n        />\n      )}\n    </>\n  );\n};\n\nexport default SakslistePanel;\n","import React, { FunctionComponent, useState, useCallback } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Heading } from '@navikt/ds-react';\n\nimport { Oppgave, OppgaveStatus } from '@navikt/fp-los-felles';\n\nimport Saksliste from '../typer/sakslisteTsType';\nimport OppgaveErReservertAvAnnenModal from '../components/OppgaveErReservertAvAnnenModal';\nimport { RestApiPathsKeys, restApiHooks } from '../data/fplosSaksbehandlerRestApi';\nimport SakslistePanel from './components/SakslistePanel';\n\nconst EMPTY_ARRAY: Saksliste[] = [];\n\ninterface OwnProps {\n  valgtSakslisteId?: number;\n  setValgtSakslisteId: (sakslisteId: number) => void;\n  åpneFagsak: (saksnummer: string, behandlingUuid?: string) => void;\n}\n\n/**\n * BehandlingskoerIndex\n */\nconst BehandlingskoerIndex: FunctionComponent<OwnProps> = ({ valgtSakslisteId, setValgtSakslisteId, åpneFagsak }) => {\n  const [reservertAvAnnenSaksbehandler, setReservertAvAnnenSaksbehandler] = useState<boolean>(false);\n  const [reservertOppgave, setReservertOppgave] = useState<Oppgave>();\n  const [reservertOppgaveStatus, setReservertOppgaveStatus] = useState<OppgaveStatus>();\n\n  const { data: sakslister = EMPTY_ARRAY } = restApiHooks.useRestApi(RestApiPathsKeys.SAKSLISTE);\n\n  const { startRequest: reserverOppgave } = restApiHooks.useRestApiRunner(RestApiPathsKeys.RESERVER_OPPGAVE);\n\n  const reserverOppgaveOgApne = useCallback(\n    (oppgave: Oppgave) => {\n      if (oppgave.status.erReservert) {\n        åpneFagsak(oppgave.saksnummer.toString(), oppgave.behandlingId);\n      } else {\n        reserverOppgave({ oppgaveId: oppgave.id }).then(nyOppgaveStatus => {\n          if (nyOppgaveStatus && nyOppgaveStatus.erReservert && nyOppgaveStatus.erReservertAvInnloggetBruker) {\n            åpneFagsak(oppgave.saksnummer.toString(), oppgave.behandlingId);\n          } else if (nyOppgaveStatus && nyOppgaveStatus.erReservert && !nyOppgaveStatus.erReservertAvInnloggetBruker) {\n            setReservertAvAnnenSaksbehandler(true);\n            setReservertOppgave(oppgave);\n            setReservertOppgaveStatus(nyOppgaveStatus);\n          }\n        });\n      }\n    },\n    [åpneFagsak],\n  );\n\n  const lukkErReservertModalOgOpneOppgave = useCallback(\n    (oppgave: Oppgave) => {\n      setReservertAvAnnenSaksbehandler(false);\n      setReservertOppgave(undefined);\n      setReservertOppgaveStatus(undefined);\n\n      åpneFagsak(oppgave.saksnummer.toString(), oppgave.behandlingId);\n    },\n    [åpneFagsak],\n  );\n\n  if (sakslister.length === 0) {\n    return (\n      <Heading size=\"small\">\n        <FormattedMessage id=\"BehandlingskoerIndex.IngenKø\" />\n      </Heading>\n    );\n  }\n  return (\n    <>\n      <SakslistePanel\n        valgtSakslisteId={valgtSakslisteId}\n        setValgtSakslisteId={setValgtSakslisteId}\n        reserverOppgave={reserverOppgaveOgApne}\n        sakslister={sakslister}\n      />\n      {reservertAvAnnenSaksbehandler && reservertOppgave && reservertOppgaveStatus && (\n        <OppgaveErReservertAvAnnenModal\n          lukkErReservertModalOgOpneOppgave={lukkErReservertModalOgOpneOppgave}\n          oppgave={reservertOppgave}\n          oppgaveStatus={reservertOppgaveStatus}\n        />\n      )}\n    </>\n  );\n};\n\nexport default BehandlingskoerIndex;\n","import React, { useRef, FunctionComponent } from 'react';\nimport { VerticalSpacer } from '@navikt/ft-ui-komponenter';\n\nimport NyeOgFerdigstilteOppgaver from '../../../typer/nyeOgFerdigstilteOppgaverTsType';\nimport NyeOgFerdigstilteOppgaverForIdagPanel from './nyeOgFerdigstilteOppgaverForIdag/NyeOgFerdigstilteOppgaverForIdagPanel';\nimport NyeOgFerdigstilteOppgaverForSisteSyvPanel from './nyeOgFerdigstilteOppgaverForSisteSyv/NyeOgFerdigstilteOppgaverForSisteSyvPanel';\n\ninterface OwnProps {\n  nyeOgFerdigstilteOppgaver?: NyeOgFerdigstilteOppgaver[];\n}\n\n/**\n * SaksbehandlerNokkeltallPanel.\n */\nconst SaksbehandlerNokkeltallPanel: FunctionComponent<OwnProps> = ({ nyeOgFerdigstilteOppgaver }) => {\n  const HEIGHT = 200;\n\n  const ref = useRef<HTMLDivElement>(null);\n\n  return (\n    <div ref={ref}>\n      <NyeOgFerdigstilteOppgaverForIdagPanel height={HEIGHT} nyeOgFerdigstilteOppgaver={nyeOgFerdigstilteOppgaver} />\n      <VerticalSpacer sixteenPx />\n      <NyeOgFerdigstilteOppgaverForSisteSyvPanel\n        height={HEIGHT}\n        nyeOgFerdigstilteOppgaver={nyeOgFerdigstilteOppgaver}\n      />\n    </div>\n  );\n};\n\nexport default SaksbehandlerNokkeltallPanel;\n","import React, { FunctionComponent } from 'react';\n\nimport { RestApiPathsKeys, restApiHooks } from '../../data/fplosSaksbehandlerRestApi';\n\nimport SaksbehandlerNokkeltallPanel from './components/SaksbehandlerNokkeltallPanel';\n\ninterface OwnProps {\n  valgtSakslisteId: number;\n}\n\n/**\n * SaksbehandlerNokkeltallIndex\n */\nconst SaksbehandlerNokkeltallIndex: FunctionComponent<OwnProps> = ({ valgtSakslisteId }) => {\n  const { data: nyeOgFerdigstilteOppgaver } = restApiHooks.useRestApi(\n    RestApiPathsKeys.HENT_NYE_OG_FERDIGSTILTE_OPPGAVER,\n    { sakslisteId: valgtSakslisteId },\n    {\n      updateTriggers: [valgtSakslisteId],\n    },\n  );\n\n  return <SaksbehandlerNokkeltallPanel nyeOgFerdigstilteOppgaver={nyeOgFerdigstilteOppgaver} />;\n};\n\nexport default SaksbehandlerNokkeltallIndex;\n","import React, { FunctionComponent } from 'react';\nimport { VerticalSpacer } from '@navikt/ft-ui-komponenter';\n\nimport SistBehandledeSaker from './SistBehandledeSaker';\nimport SaksbehandlerNokkeltallIndex from '../nokkeltall/SaksbehandlerNokkeltallIndex';\n\ninterface OwnProps {\n  valgtSakslisteId?: number;\n  åpneFagsak: (saksnummer: string, behandlingUuid?: string) => void;\n}\n\n/**\n * SaksstottePaneler\n */\nconst SaksstottePaneler: FunctionComponent<OwnProps> = ({ valgtSakslisteId, åpneFagsak }) => (\n  <>\n    <SistBehandledeSaker åpneFagsak={åpneFagsak} />\n    <VerticalSpacer twentyPx />\n    {valgtSakslisteId && <SaksbehandlerNokkeltallIndex valgtSakslisteId={valgtSakslisteId} />}\n  </>\n);\n\nexport default SaksstottePaneler;\n","import React, { FunctionComponent } from 'react';\n\nimport SaksstottePaneler from './components/SaksstottePaneler';\n\ninterface OwnProps {\n  valgtSakslisteId?: number;\n  åpneFagsak: (saksnummer: string, behandlingUuid?: string) => void;\n}\n\n/**\n * SaksstotteIndex\n */\nconst SaksstotteIndex: FunctionComponent<OwnProps> = ({ valgtSakslisteId, åpneFagsak }) => (\n  <SaksstottePaneler valgtSakslisteId={valgtSakslisteId} åpneFagsak={åpneFagsak} />\n);\n\nexport default SaksstotteIndex;\n","import React, { FunctionComponent, useEffect } from 'react';\n\nimport { RestApiState, useRestApiErrorDispatcher } from '@navikt/fp-rest-api-hooks';\n\nimport {\n  requestApi,\n  restApiHooks,\n  RestApiGlobalStatePathsKeys,\n  RestApiPathsKeys,\n} from '../data/fplosSaksbehandlerRestApi';\nimport FagsakSearchIndex from '../fagsakSearch/FagsakSearchIndex';\nimport BehandlingskoerIndex from '../behandlingskoer/BehandlingskoerIndex';\nimport SaksstotteIndex from '../saksstotte/SaksstotteIndex';\n\nimport styles from './saksbehandlerDashboard.module.css';\nimport DriftsmeldingPanel from './DriftsmeldingPanel';\n\ninterface OwnProps {\n  valgtSakslisteId?: number;\n  setValgtSakslisteId: (valgSakslisteId: number) => void;\n  setLosErIkkeTilgjengelig: () => void;\n  åpneFagsak: (saksnummer: string, behandlingUuid?: string) => void;\n  kanSaksbehandle: boolean;\n}\n\n/**\n * SaksbehandlerDashboard\n */\nconst SaksbehandlerDashboard: FunctionComponent<OwnProps> = ({\n  valgtSakslisteId,\n  setValgtSakslisteId,\n  setLosErIkkeTilgjengelig,\n  åpneFagsak,\n  kanSaksbehandle,\n}) => {\n  const { addErrorMessage } = useRestApiErrorDispatcher();\n  requestApi.setAddErrorMessageHandler(addErrorMessage);\n\n  const kodeverk = restApiHooks.useGlobalStateRestApiData(RestApiGlobalStatePathsKeys.KODEVERK_LOS);\n  const kodeverkData = restApiHooks.useGlobalStateRestApi(RestApiGlobalStatePathsKeys.KODEVERK_LOS, undefined, {\n    suspendRequest: !!kodeverk,\n  });\n\n  const driftsmeldingerData = restApiHooks.useRestApi(RestApiPathsKeys.DRIFTSMELDINGER);\n\n  useEffect(() => {\n    if (driftsmeldingerData.state === RestApiState.ERROR || kodeverkData.state === RestApiState.ERROR) {\n      setLosErIkkeTilgjengelig();\n    }\n  }, [driftsmeldingerData.state, kodeverkData.state]);\n\n  if (\n    driftsmeldingerData.state !== RestApiState.SUCCESS ||\n    (kodeverkData.state !== RestApiState.SUCCESS && !kodeverk)\n  ) {\n    return null;\n  }\n\n  return (\n    <>\n      {driftsmeldingerData.data && <DriftsmeldingPanel driftsmeldinger={driftsmeldingerData.data} />}\n      <div className={styles.gridContainer}>\n        <div className={styles.leftColumn}>\n          <div className={styles.koerContainer}>\n            <BehandlingskoerIndex\n              åpneFagsak={åpneFagsak}\n              valgtSakslisteId={valgtSakslisteId}\n              setValgtSakslisteId={setValgtSakslisteId}\n            />\n          </div>\n          <div className={styles.sokContainer}>\n            <FagsakSearchIndex åpneFagsak={åpneFagsak} kanSaksbehandle={kanSaksbehandle} />\n          </div>\n        </div>\n        <div className={styles.rightColumn}>\n          <SaksstotteIndex valgtSakslisteId={valgtSakslisteId} åpneFagsak={åpneFagsak} />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default SaksbehandlerDashboard;\n","import React, { useState, FunctionComponent } from 'react';\nimport { RawIntlProvider } from 'react-intl';\nimport { createIntl } from '@navikt/ft-utils';\n\nimport SaksbehandlerDashboard from './components/SaksbehandlerDashboard';\n\nimport messages from '../i18n/nb_NO.json';\n\nconst intl = createIntl(messages);\n\ninterface OwnProps {\n  setLosErIkkeTilgjengelig: () => void;\n  åpneFagsak: (saksnummer: string, behandlingUuid?: string) => void;\n  kanSaksbehandle: boolean;\n}\n\n/**\n * SaksbehandlerIndex\n */\nconst SaksbehandlerIndex: FunctionComponent<OwnProps> = ({ setLosErIkkeTilgjengelig, åpneFagsak, kanSaksbehandle }) => {\n  const [valgtSakslisteId, setValgtSakslisteId] = useState<number>();\n  return (\n    <RawIntlProvider value={intl}>\n      <SaksbehandlerDashboard\n        valgtSakslisteId={valgtSakslisteId}\n        setValgtSakslisteId={setValgtSakslisteId}\n        setLosErIkkeTilgjengelig={setLosErIkkeTilgjengelig}\n        åpneFagsak={åpneFagsak}\n        kanSaksbehandle={kanSaksbehandle}\n      />\n    </RawIntlProvider>\n  );\n};\n\nexport default SaksbehandlerIndex;\n"],"names":["getValueFromLocalStorage","key","value","setValueInLocalStorage","removeValueFromLocalStorage","SakslistePanel","reserverOppgave","sakslister","setValgtSakslisteId","valgtSakslisteId","fetchAntallOppgaver","antallOppgaver","restApiHooks","RestApiPathsKeys","jsxs","Fragment","jsx","Heading","FormattedMessage","VerticalSpacer","SakslisteVelgerForm","OppgaverTabell","EMPTY_ARRAY","BehandlingskoerIndex","åpneFagsak","reservertAvAnnenSaksbehandler","setReservertAvAnnenSaksbehandler","useState","reservertOppgave","setReservertOppgave","reservertOppgaveStatus","setReservertOppgaveStatus","reserverOppgaveOgApne","useCallback","oppgave","nyOppgaveStatus","lukkErReservertModalOgOpneOppgave","OppgaveErReservertAvAnnenModal","SaksbehandlerNokkeltallPanel","nyeOgFerdigstilteOppgaver","ref","useRef","NyeOgFerdigstilteOppgaverForIdagPanel","NyeOgFerdigstilteOppgaverForSisteSyvPanel","SaksbehandlerNokkeltallIndex","SaksstottePaneler","SistBehandledeSaker","SaksstotteIndex","SaksbehandlerDashboard","setLosErIkkeTilgjengelig","kanSaksbehandle","addErrorMessage","useRestApiErrorDispatcher","requestApi","kodeverk","RestApiGlobalStatePathsKeys","kodeverkData","driftsmeldingerData","useEffect","RestApiState","DriftsmeldingPanel","styles","FagsakSearchIndex","intl","createIntl","messages","SaksbehandlerIndex","RawIntlProvider","SaksbehandlerIndex$1"],"mappings":"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"}