{"version":3,"file":"FagsakList-c1f87748.js","sources":["../../src/fagsakSearch/components/FagsakList.tsx"],"sourcesContent":["import React, { Fragment, FunctionComponent, useMemo } from 'react';\nimport dayjs from 'dayjs';\nimport { ChevronRightIcon } from '@navikt/aksel-icons';\nimport { ISO_DATE_FORMAT } from '@navikt/ft-utils';\nimport { Table, TableRow, TableColumn, DateLabel } from '@navikt/ft-ui-komponenter';\nimport { FagsakStatus, KodeverkType } from '@navikt/ft-kodeverk';\nimport { FagsakEnkel } from '@navikt/fp-types';\nimport { getKodeverknavnFraKode } from '@navikt/fp-kodeverk';\nimport { Oppgave } from '@navikt/fp-los-felles';\n\nimport useLosKodeverk from '../../data/useLosKodeverk';\nimport { restApiHooks, RestApiGlobalStatePathsKeys } from '../../data/fplosSaksbehandlerRestApi';\n\nimport styles from './fagsakList.module.css';\n\nconst headerTextCodes = [\n  'FagsakList.Saksnummer',\n  'FagsakList.Stonadstype',\n  'FagsakList.Behandlingstype',\n  'FagsakList.Status',\n  'FagsakList.BarnFodt',\n  'EMPTY_1',\n];\n\ninterface OwnProps {\n  fagsaker: FagsakEnkel[];\n  fagsakOppgaver: Oppgave[];\n  åpneFagsak: (saksnummer: string, behandlingUuid?: string) => void;\n  selectOppgaveCallback: (oppgave: Oppgave) => void;\n}\n\nconst getSelectOppgaveCallback = (oppgave: Oppgave, selectOppgaveCallback: (oppgave: Oppgave) => void) => () =>\n  selectOppgaveCallback(oppgave);\n\nconst getFagsakCallback =\n  (åpneFagsak: (saksnummer: string, behandlingUuid?: string) => void) =>\n  (_event: React.KeyboardEvent | React.MouseEvent, saksnummer?: string) => {\n    if (saksnummer) {\n      åpneFagsak(saksnummer);\n    }\n  };\n\nexport const getSorterteFagsaker = (fagsaker: FagsakEnkel[] = []) =>\n  fagsaker.concat().sort((fagsak1, fagsak2) => {\n    if (fagsak1.status === FagsakStatus.AVSLUTTET && fagsak2.status !== FagsakStatus.AVSLUTTET) {\n      return 1;\n    }\n    if (fagsak1.status !== FagsakStatus.AVSLUTTET && fagsak2.status === FagsakStatus.AVSLUTTET) {\n      return -1;\n    }\n    const changeTimeFagsak1 = fagsak1.endret ? fagsak1.endret : fagsak1.opprettet;\n    const changeTimeFagsak2 = fagsak2.endret ? fagsak2.endret : fagsak2.opprettet;\n    return dayjs(changeTimeFagsak1, ISO_DATE_FORMAT).diff(dayjs(changeTimeFagsak2, ISO_DATE_FORMAT));\n  });\n\n/**\n * FagsakList\n *\n * Presentasjonskomponent. Formaterer fagsak-søkeresultatet for visning i tabell. Sortering av fagsakene blir håndtert her.\n */\nconst FagsakList: FunctionComponent<OwnProps> = ({ fagsaker, fagsakOppgaver, åpneFagsak, selectOppgaveCallback }) => {\n  const fagsakStatuser = useLosKodeverk(KodeverkType.FAGSAK_STATUS);\n  const fagsakYtelseTyper = useLosKodeverk(KodeverkType.FAGSAK_YTELSE);\n  const alleKodeverk = restApiHooks.useGlobalStateRestApiData(RestApiGlobalStatePathsKeys.KODEVERK_LOS);\n\n  const sorterteFagsaker = useMemo(() => getSorterteFagsaker(fagsaker), [fagsaker]);\n\n  return (\n    <Table headerTextCodes={headerTextCodes} classNameTable={styles.table}>\n      {sorterteFagsaker.map(fagsak => {\n        const fagsakStatusType = fagsakStatuser.find(type => type.kode === fagsak.status);\n        const fagsakYtelseType = fagsakYtelseTyper.find(type => type.kode === fagsak.fagsakYtelseType);\n\n        const filtrerteOppgaver = fagsakOppgaver.filter(o => o.saksnummer.toString() === fagsak.saksnummer);\n        const oppgaver = filtrerteOppgaver.map((oppgave, index) => (\n          <TableRow<number>\n            key={`oppgave${oppgave.id}`}\n            id={oppgave.id}\n            onMouseDown={getSelectOppgaveCallback(oppgave, selectOppgaveCallback)}\n            onKeyDown={getSelectOppgaveCallback(oppgave, selectOppgaveCallback)}\n            isDashedBottomBorder={filtrerteOppgaver.length > index + 1}\n          >\n            <TableColumn />\n            <TableColumn>\n              {getKodeverknavnFraKode(alleKodeverk, KodeverkType.FAGSAK_YTELSE, oppgave.fagsakYtelseType)}\n            </TableColumn>\n            <TableColumn>\n              {getKodeverknavnFraKode(alleKodeverk, KodeverkType.BEHANDLING_TYPE, oppgave.behandlingstype)}\n            </TableColumn>\n            <TableColumn>\n              {oppgave.behandlingStatus\n                ? getKodeverknavnFraKode(alleKodeverk, KodeverkType.BEHANDLING_STATUS, oppgave.behandlingStatus)\n                : ''}\n            </TableColumn>\n            <TableColumn>{fagsak.barnFødt ? <DateLabel dateString={fagsak.barnFødt} /> : null}</TableColumn>\n            <TableColumn>\n              <ChevronRightIcon />\n            </TableColumn>\n          </TableRow>\n        ));\n\n        return (\n          <Fragment key={`fagsak${fagsak.saksnummer}`}>\n            <TableRow<string>\n              id={fagsak.saksnummer}\n              onMouseDown={getFagsakCallback(åpneFagsak)}\n              onKeyDown={getFagsakCallback(åpneFagsak)}\n              isDashedBottomBorder={oppgaver.length > 0}\n            >\n              <TableColumn>{fagsak.saksnummer}</TableColumn>\n              <TableColumn>{fagsakYtelseType ? fagsakYtelseType.navn : ''}</TableColumn>\n              <TableColumn />\n              <TableColumn>{fagsakStatusType ? fagsakStatusType.navn : ''}</TableColumn>\n              <TableColumn>{fagsak.barnFødt ? <DateLabel dateString={fagsak.barnFødt} /> : null}</TableColumn>\n              <TableColumn>\n                <ChevronRightIcon />\n              </TableColumn>\n            </TableRow>\n            {oppgaver.length > 0 && oppgaver}\n          </Fragment>\n        );\n      })}\n    </Table>\n  );\n};\n\nexport default FagsakList;\n"],"names":["headerTextCodes","getSelectOppgaveCallback","oppgave","selectOppgaveCallback","getFagsakCallback","åpneFagsak","_event","saksnummer","getSorterteFagsaker","fagsaker","fagsak1","fagsak2","FagsakStatus","changeTimeFagsak1","changeTimeFagsak2","dayjs","ISO_DATE_FORMAT","FagsakList","fagsakOppgaver","fagsakStatuser","useLosKodeverk","KodeverkType","fagsakYtelseTyper","alleKodeverk","restApiHooks","RestApiGlobalStatePathsKeys","sorterteFagsaker","useMemo","jsx","Table","styles","fagsak","fagsakStatusType","type","fagsakYtelseType","filtrerteOppgaver","o","oppgaver","index","jsxs","TableRow","TableColumn","getKodeverknavnFraKode","DateLabel","ChevronRightIcon","Fragment","FagsakList$1"],"mappings":"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"}