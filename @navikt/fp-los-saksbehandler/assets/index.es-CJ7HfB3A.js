import{d as a}from"./dayjs.min-DkLNzaWO.js";import{$ as p,a as f}from"./index.es-DaHaN1ul.js";function k(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var d={exports:{}},v=d.exports,u;function h(){return u||(u=1,function(e,t){(function(r,l){e.exports=l()})(v,function(){return function(r,l){l.prototype.isSameOrAfter=function(s,o){return this.isSame(s,o)||this.isAfter(s,o)}}})}(d)),d.exports}var c=h();const O=k(c);var m={exports:{}},I=m.exports,g;function x(){return g||(g=1,function(e,t){(function(r,l){e.exports=l()})(I,function(){return function(r,l){l.prototype.isSameOrBefore=function(s,o){return this.isSame(s,o)||this.isBefore(s,o)}}})}(m)),m.exports}var F=x();const D=k(F),y="Dato må være før eller lik {limit}",S="Dato må være etter eller lik {limit}",N="Perioder kan ikke overlappe i tid",P="Perioder kan ikke overlappe i tid (uttak, utsettelse, gradering, overforing, opphold)",M="Dato må være lik {value}",q="Dato må skrives slik: dd.mm.åååå",L="Periode må skrives slik: dd.mm.åååå - dd.mm.åååå",T="Tallet kan ikke inneholde mer enn to desimaler",$="Tallet kan ikke ha desimaler",j="Feltet kan kun inneholde tall",B="Ugyldig fødselsnummer",E="Feltet må være et fødselsnummer (11 siffer)",R="Ugyldig organisasjonsnummer.",_="Ugyldig organisasjonsnummer eller fødselsnummer",A="Startdato må være før eller lik sluttdato",U="Periode er utenfor opptjeningsperioden",b="Ugyldig saksnummer eller fødselsnummer",V="Feltet inneholder ugyldige tegn: {text}",Z="Feltet inneholder en ugyldig verdi: {value}",w="Feltet kan ikke inneholde mellomrom",C="Feltet må fylles ut",G="Du kan skrive maksimalt {length} tegn",H="Du må skrive minst {length} tegn",W="Du kan skrive maksimalt {length} tegn eller et fødselsnummer (11 siffer)",z="Feltet må være mindre eller lik {length}",J="Feltet må være større eller lik {length}",K="Fødselsnummer til den andre forelderen kan ikke være det samme som søker",Q={DateNotBeforeOrEqual:y,DateNotAfterOrEqual:S,DateRangesOverlapping:N,DateRangesOverlappingPeriodTypes:P,DatesNotEqual:M,InvalidDate:q,InvalidDatesInPeriod:L,InvalidDecimal:T,InvalidInteger:$,InvalidNumber:j,InvalidFodselsnr:B,InvalidFodselsnrFormat:E,InvalidOrgnr:R,InvalidOrgnrOrFodselsnr:_,InvalidPeriod:A,InvalidPeriodRange:U,InvalidSaksnrOrFodselsnrFormat:b,InvalidText:V,InvalidValue:Z,IllegalWhiteSpace:w,IsRequired:C,MaxLength:G,MinLength:H,MaxLengthOrFodselsnr:W,MaxValue:z,MinValue:J,SammeFodselsnrSomSoker:K},{formatMessage:n}=p(Q),X=e=>n({id:"DateNotBeforeOrEqual"},{limit:e}),Y=e=>n({id:"DateNotAfterOrEqual"},{limit:e}),ee=()=>n({id:"InvalidDate"}),te=()=>n({id:"InvalidSaksnrOrFodselsnrFormat"}),re=e=>n({id:"InvalidText"},{text:e}),ne=()=>n({id:"IsRequired"}),le=e=>n({id:"MaxLength"},{length:e}),ae=e=>n({id:"MinLength"},{length:e}),ie=/(19|20)\d{2}-(0?[1-9]|1[0-2])-(0?[1-9]|1\d|2\d|3[01])$/,se=/^\d{0,18}$/,oe=/^[\p{N}\p{L}\p{Z}.'\-/%§!?@_()+:;,="&\n]*$/u,de=/[\p{N}\p{L}\p{Z}.'\-/%§!?@_()+:;,="&\n]*/gu,i=e=>e==null||e.toString().trim().length===0,me=()=>a().startOf("day");a.extend(O);a.extend(D);const ke=e=>i(e)?ne():void 0,pe=e=>t=>i(t)||t.toString().trim().length>=e?null:ae(e),ve=e=>t=>i(t)||t.toString().trim().length<=e?null:le(e),he=e=>i(e)||se.test(e)?null:te(),ce=e=>i(e)||ie.test(e)?null:ee(),Oe=e=>t=>{const r=a(e).endOf("day");return i(t)||a(t).isSameOrBefore(r)?null:X(r.format(f))},ue=e=>t=>{const r=a(e).startOf("day");return i(t)||a(t).isSameOrAfter(r)?null:Y(r.format(f))},Ie=e=>ue(me())(e),xe=e=>{if(!oe.test(e)){const t=e.replace(de,"");return re(t.replace(/[\t]/g,"Tabulatortegn"))}return null};export{Oe as D,xe as N,ce as O,pe as a,ke as e,Ie as k,ve as o,he as p};
