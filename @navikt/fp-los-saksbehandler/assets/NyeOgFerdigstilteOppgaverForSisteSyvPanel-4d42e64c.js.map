{"version":3,"file":"NyeOgFerdigstilteOppgaverForSisteSyvPanel-4d42e64c.js","sources":["../../src/saksstotte/nokkeltall/components/nyeOgFerdigstilteOppgaverForSisteSyv/NyeOgFerdigstilteOppgaverForSisteSyvGraf.tsx","../../src/saksstotte/nokkeltall/components/nyeOgFerdigstilteOppgaverForSisteSyv/NyeOgFerdigstilteOppgaverForSisteSyvPanel.tsx"],"sourcesContent":["import React, { FunctionComponent, useMemo } from 'react';\nimport { useIntl } from 'react-intl';\nimport { Panel } from '@navikt/ds-react';\nimport { DDMMYYYY_DATE_FORMAT } from '@navikt/ft-utils';\nimport dayjs from 'dayjs';\n\nimport { ReactECharts } from '@navikt/fp-los-felles';\n\nimport NyeOgFerdigstilteOppgaver from '../../../../typer/nyeOgFerdigstilteOppgaverTsType';\n\nexport const slaSammenBehandlingstyperOgFyllInnTomme = (\n  nyeOgFerdigstilteOppgaver: NyeOgFerdigstilteOppgaver[],\n): { antallNye: number; antallFerdigstilte: number; dato: Date }[] => {\n  const oppgaver = [];\n  if (nyeOgFerdigstilteOppgaver.length > 0) {\n    const iDag = dayjs().startOf('day');\n    const atteDagerSiden = dayjs().subtract(7, 'days').startOf('day');\n\n    for (let dato = atteDagerSiden; dato.isBefore(iDag); dato = dato.add(1, 'days')) {\n      const dataForDato = nyeOgFerdigstilteOppgaver.filter(o => dayjs(o.dato).startOf('day').isSame(dato));\n      if (dataForDato.length === 0) {\n        oppgaver.push({\n          antallNye: 0,\n          antallFerdigstilte: 0,\n          dato: dato.toDate(),\n        });\n      } else {\n        oppgaver.push({\n          antallNye: dataForDato.reduce((acc, d) => acc + d.antallNye, 0),\n          antallFerdigstilte: dataForDato.reduce((acc, d) => acc + d.antallFerdigstilte, 0),\n          dato: dato.toDate(),\n        });\n      }\n    }\n  }\n\n  return oppgaver;\n};\n\ninterface OwnProps {\n  height: number;\n  nyeOgFerdigstilteOppgaver: NyeOgFerdigstilteOppgaver[];\n}\n\n/**\n * NyeOgFerdigstilteOppgaverForIdagGraf\n */\nconst NyeOgFerdigstilteOppgaverForIdagGraf: FunctionComponent<OwnProps> = ({ height, nyeOgFerdigstilteOppgaver }) => {\n  const intl = useIntl();\n  const ferdigLabel = intl.formatMessage({ id: 'NyeOgFerdigstilteOppgaverForSisteSyvGraf.Ferdigstilte' });\n  const nyLabel = intl.formatMessage({ id: 'NyeOgFerdigstilteOppgaverForSisteSyvGraf.Nye' });\n\n  const sammenslatteOppgaver = useMemo(\n    () => slaSammenBehandlingstyperOgFyllInnTomme(nyeOgFerdigstilteOppgaver),\n    [nyeOgFerdigstilteOppgaver],\n  );\n  const ferdigstilteOppgaver = useMemo(\n    () => sammenslatteOppgaver.map(o => [o.dato.getTime(), o.antallFerdigstilte]),\n    [sammenslatteOppgaver],\n  );\n  const nyeOppgaver = useMemo(\n    () => sammenslatteOppgaver.map(o => [o.dato.getTime(), o.antallNye]),\n    [sammenslatteOppgaver],\n  );\n\n  return (\n    <Panel>\n      <ReactECharts\n        height={height}\n        option={{\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'cross',\n              label: {\n                formatter: params => {\n                  if (params.axisDimension === 'y') {\n                    return parseInt(params.value as string, 10).toString();\n                  }\n                  return dayjs(params.value).format(DDMMYYYY_DATE_FORMAT);\n                },\n              },\n            },\n          },\n          legend: {\n            data: [ferdigLabel, nyLabel],\n          },\n          grid: {\n            left: '3%',\n            right: '4%',\n            bottom: '3%',\n            containLabel: true,\n          },\n          xAxis: [\n            {\n              type: 'time',\n              axisLabel: {\n                formatter: '{dd}.{MM}.{yyyy}',\n              },\n            },\n          ],\n          yAxis: [\n            {\n              type: 'value',\n            },\n          ],\n          series: [\n            {\n              name: ferdigLabel,\n              type: 'line',\n              areaStyle: {},\n              emphasis: {\n                focus: 'series',\n              },\n              data: ferdigstilteOppgaver,\n            },\n            {\n              name: nyLabel,\n              type: 'line',\n              areaStyle: {},\n              emphasis: {\n                focus: 'series',\n              },\n              data: nyeOppgaver,\n            },\n          ],\n          color: ['#38a161', '#337c9b'],\n        }}\n      />\n    </Panel>\n  );\n};\n\nexport default NyeOgFerdigstilteOppgaverForIdagGraf;\n","import React, { FunctionComponent, useMemo } from 'react';\nimport dayjs from 'dayjs';\nimport { FormattedMessage } from 'react-intl';\nimport { Label } from '@navikt/ds-react';\nimport { ISO_DATE_FORMAT } from '@navikt/ft-utils';\nimport { VerticalSpacer } from '@navikt/ft-ui-komponenter';\n\nimport NyeOgFerdigstilteOppgaver from '../../../../typer/nyeOgFerdigstilteOppgaverTsType';\nimport NyeOgFerdigstilteOppgaverForSisteSyvGraf from './NyeOgFerdigstilteOppgaverForSisteSyvGraf';\n\nexport const getNyeOgFerdigstilteForSisteSyvDager = (\n  nyeOgFerdigstilte: NyeOgFerdigstilteOppgaver[] = [],\n): NyeOgFerdigstilteOppgaver[] => {\n  const iDag = dayjs().startOf('day');\n  return nyeOgFerdigstilte.filter(oppgave => iDag.isAfter(dayjs(oppgave.dato, ISO_DATE_FORMAT)));\n};\n\ninterface OwnProps {\n  height: number;\n  nyeOgFerdigstilteOppgaver?: NyeOgFerdigstilteOppgaver[];\n}\n\n/**\n * NyeOgFerdigstilteOppgaverForSisteSyvPanel.\n */\nconst NyeOgFerdigstilteOppgaverForSisteSyvPanel: FunctionComponent<OwnProps> = ({\n  height,\n  nyeOgFerdigstilteOppgaver,\n}) => {\n  const filtrertenyeOgFerdigstilteOppgaver = useMemo(\n    () => getNyeOgFerdigstilteForSisteSyvDager(nyeOgFerdigstilteOppgaver),\n    [nyeOgFerdigstilteOppgaver],\n  );\n  return (\n    <>\n      <VerticalSpacer eightPx />\n      <Label size=\"small\">\n        <FormattedMessage id=\"NyeOgFerdigstilteOppgaverForSisteSyvPanel.SisteSyv\" />\n      </Label>\n      <NyeOgFerdigstilteOppgaverForSisteSyvGraf\n        height={height}\n        nyeOgFerdigstilteOppgaver={filtrertenyeOgFerdigstilteOppgaver}\n      />\n    </>\n  );\n};\n\nexport default NyeOgFerdigstilteOppgaverForSisteSyvPanel;\n"],"names":["slaSammenBehandlingstyperOgFyllInnTomme","nyeOgFerdigstilteOppgaver","oppgaver","iDag","dayjs","atteDagerSiden","dato","dataForDato","o","acc","d","NyeOgFerdigstilteOppgaverForIdagGraf","height","intl","useIntl","ferdigLabel","nyLabel","sammenslatteOppgaver","useMemo","ferdigstilteOppgaver","nyeOppgaver","jsx","Panel","ReactECharts","params","DDMMYYYY_DATE_FORMAT","getNyeOgFerdigstilteForSisteSyvDager","nyeOgFerdigstilte","oppgave","ISO_DATE_FORMAT","NyeOgFerdigstilteOppgaverForSisteSyvPanel","filtrertenyeOgFerdigstilteOppgaver","jsxs","Fragment","VerticalSpacer","Label","FormattedMessage","NyeOgFerdigstilteOppgaverForSisteSyvGraf","NyeOgFerdigstilteOppgaverForSisteSyvPanel$1"],"mappings":"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"}