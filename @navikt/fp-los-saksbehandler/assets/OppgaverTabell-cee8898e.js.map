{"version":3,"file":"OppgaverTabell-cee8898e.js","sources":["../../../../node_modules/@navikt/aksel-icons/dist/react/esm/ChatElipsis.js","../../../../node_modules/@navikt/aksel-icons/dist/react/esm/MenuHamburger.js","../../src/behandlingskoer/components/OppgaverTabell.tsx"],"sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nimport { useId } from \"./util/useId\";\nconst SvgChatElipsis = forwardRef((_a, ref) => {\n    var { title, titleId: _titleId } = _a, props = __rest(_a, [\"title\", \"titleId\"]);\n    let titleId = useId();\n    titleId = title ? (_titleId ? _titleId : \"title-\" + titleId) : undefined;\n    return (React.createElement(\"svg\", Object.assign({ width: \"1em\", height: \"1em\", viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", focusable: false, role: \"img\", ref: ref, \"aria-labelledby\": titleId }, props),\n        title ? React.createElement(\"title\", { id: titleId }, title) : null,\n        React.createElement(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M4.75 6c0-.69.56-1.25 1.25-1.25h12c.69 0 1.25.56 1.25 1.25v9c0 .69-.56 1.25-1.25 1.25H9a.75.75 0 0 0-.386.107L4.75 18.675V6ZM6 3.25A2.75 2.75 0 0 0 3.25 6v14a.75.75 0 0 0 1.136.643l4.822-2.893H18A2.75 2.75 0 0 0 20.75 15V6A2.75 2.75 0 0 0 18 3.25H6Zm3 6.5a.75.75 0 0 0 0 1.5h.01a.75.75 0 0 0 0-1.5H9Zm2.25.75a.75.75 0 0 1 .75-.75h.01a.75.75 0 0 1 0 1.5H12a.75.75 0 0 1-.75-.75ZM15 9.75a.75.75 0 0 0 0 1.5h.01a.75.75 0 0 0 0-1.5H15Z\", fill: \"currentColor\" })));\n});\nexport default SvgChatElipsis;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nimport { useId } from \"./util/useId\";\nconst SvgMenuHamburger = forwardRef((_a, ref) => {\n    var { title, titleId: _titleId } = _a, props = __rest(_a, [\"title\", \"titleId\"]);\n    let titleId = useId();\n    titleId = title ? (_titleId ? _titleId : \"title-\" + titleId) : undefined;\n    return (React.createElement(\"svg\", Object.assign({ width: \"1em\", height: \"1em\", viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", focusable: false, role: \"img\", ref: ref, \"aria-labelledby\": titleId }, props),\n        title ? React.createElement(\"title\", { id: titleId }, title) : null,\n        React.createElement(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M2.75 6a.75.75 0 0 1 .75-.75h17a.75.75 0 0 1 0 1.5h-17A.75.75 0 0 1 2.75 6Zm0 6a.75.75 0 0 1 .75-.75h17a.75.75 0 0 1 0 1.5h-17a.75.75 0 0 1-.75-.75Zm.75 5.25a.75.75 0 0 0 0 1.5h17a.75.75 0 0 0 0-1.5h-17Z\", fill: \"currentColor\" })));\n});\nexport default SvgMenuHamburger;\n","import React, { useState, useRef, FunctionComponent, useCallback, useMemo, useEffect } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { BodyShort, Label } from '@navikt/ds-react';\nimport { ChatElipsisIcon, ChevronRightIcon, MenuHamburgerIcon } from '@navikt/aksel-icons';\nimport { getDateAndTime } from '@navikt/ft-utils';\nimport { VerticalSpacer, Table, TableRow, TableColumn, DateLabel, Tooltip } from '@navikt/ft-ui-komponenter';\nimport { KodeverkType, getKodeverknavnFraKode } from '@navikt/fp-kodeverk';\nimport { TimeoutError } from '@navikt/fp-rest-api';\nimport { Oppgave, OppgaveStatus } from '@navikt/fp-los-felles';\n\nimport BehandlingPollingTimoutModal from './BehandlingPollingTimoutModal';\nimport OppgaveHandlingerMenu from './menu/OppgaveHandlingerMenu';\nimport {\n  requestApi,\n  RestApiPathsKeys,\n  RestApiGlobalStatePathsKeys,\n  restApiHooks,\n} from '../../data/fplosSaksbehandlerRestApi';\n\nimport styles from './oppgaverTabell.module.css';\n\nconst headerTextCodes = [\n  'OppgaverTabell.Soker',\n  'OppgaverTabell.Behandlingstype',\n  'OppgaverTabell.BehandlingOpprettet',\n  'OppgaverTabell.FristForBehandling',\n  'EMPTY_1',\n  'EMPTY_2',\n];\n\nconst EMPTY_ARRAY: Oppgave[] = [];\n\ntype OppgaveMedReservertIndikator = Oppgave & { underBehandling?: boolean };\n\nconst slaSammenOgMarkerReserverte = (\n  reserverteOppgaver: Oppgave[],\n  oppgaverTilBehandling: Oppgave[],\n): OppgaveMedReservertIndikator[] => {\n  const markedAsUnderBehandling = reserverteOppgaver\n    .filter(reservertOppgave => !oppgaverTilBehandling.some(oppgave => oppgave.id === reservertOppgave.id))\n    .map(f => ({\n      ...f,\n      underBehandling: true,\n    }));\n  const notMarked = oppgaverTilBehandling.map(f => ({\n    ...f,\n    underBehandling: false,\n  }));\n\n  return markedAsUnderBehandling.concat(notMarked.slice(0, 3));\n};\n\nconst getToggleMenuEvent = (oppgave: OppgaveMedReservertIndikator, toggleMenu: (valgtOppgave: Oppgave) => void) =>\n  oppgave.underBehandling ? () => toggleMenu(oppgave) : undefined;\n\ninterface OwnProps {\n  reserverOppgave: (oppgave: Oppgave) => void;\n  antallOppgaver?: number;\n  valgtSakslisteId: number;\n  doPolling?: boolean;\n}\n\n/**\n * OppgaverTabell\n */\nconst OppgaverTabell: FunctionComponent<OwnProps> = ({\n  reserverOppgave,\n  antallOppgaver = 0,\n  valgtSakslisteId,\n  doPolling = true,\n}) => {\n  const intl = useIntl();\n\n  const [showMenu, setShowMenu] = useState(false);\n  const [valgtOppgaveId, setValgtOppgaveId] = useState<number>();\n  const [offset, setOffset] = useState({\n    left: 0,\n    top: 0,\n  });\n\n  const alleKodeverk = restApiHooks.useGlobalStateRestApiData(RestApiGlobalStatePathsKeys.KODEVERK_LOS);\n\n  const { startRequest: forlengOppgavereservasjon } = restApiHooks.useRestApiRunner(\n    RestApiPathsKeys.FORLENG_OPPGAVERESERVASJON,\n  );\n\n  const { startRequest: hentReserverteOppgaver, data: reserverteOppgaver = EMPTY_ARRAY } =\n    restApiHooks.useRestApiRunner(RestApiPathsKeys.RESERVERTE_OPPGAVER);\n\n  const {\n    startRequest: hentOppgaverTilBehandling,\n    data: oppgaverTilBehandling = EMPTY_ARRAY,\n    error: hentOppgaverTilBehandlingError,\n  } = restApiHooks.useRestApiRunner(RestApiPathsKeys.OPPGAVER_TIL_BEHANDLING);\n\n  const fetchSakslisteOppgaverPolling = (keepData: boolean, sakslisteId: number, oppgaveIder?: string) => {\n    hentReserverteOppgaver(undefined, true);\n    hentOppgaverTilBehandling(oppgaveIder ? { sakslisteId, oppgaveIder } : { sakslisteId }, keepData)\n      .then(response =>\n        !response || typeof response === 'string' || !doPolling\n          ? Promise.resolve()\n          : fetchSakslisteOppgaverPolling(true, sakslisteId, response.map(o => o.id).join(',')),\n      )\n      .catch(() => undefined);\n  };\n\n  useEffect(() => {\n    requestApi.cancelRequest(RestApiPathsKeys.OPPGAVER_TIL_BEHANDLING.name);\n    fetchSakslisteOppgaverPolling(false, valgtSakslisteId);\n  }, [valgtSakslisteId]);\n\n  useEffect(\n    () => () => {\n      requestApi.cancelRequest(RestApiPathsKeys.OPPGAVER_TIL_BEHANDLING.name);\n    },\n    [],\n  );\n\n  const forlengOppgaveReservasjonFn = useCallback(\n    (oppgaveId: number): Promise<any> =>\n      forlengOppgavereservasjon({ oppgaveId }).then(() => hentReserverteOppgaver(undefined, true)),\n    [],\n  );\n\n  const ref = useRef<Record<number, HTMLDivElement | null>>({});\n\n  const goToFagsak = useCallback(\n    (event: React.MouseEvent | React.KeyboardEvent, _id?: number, oppgave?: Oppgave) => {\n      if (\n        ref.current &&\n        // @ts-ignore Fiks\n        Object.keys(ref.current).some(key => ref.current[key] && ref.current[key].contains(event.target))\n      ) {\n        return;\n      }\n      if (oppgave) {\n        reserverOppgave(oppgave);\n      }\n    },\n    [ref.current],\n  );\n\n  const toggleMenu = useCallback(\n    (valgtOppgave: Oppgave) => {\n      const newOffset = ref.current[valgtOppgave.id]?.getBoundingClientRect();\n      setShowMenu(!showMenu);\n      setValgtOppgaveId(valgtOppgave.id);\n      if (newOffset) {\n        setOffset({ top: newOffset.top, left: newOffset.left });\n      }\n    },\n    [ref.current, showMenu],\n  );\n\n  const createTooltip = useCallback((oppgaveStatus: OppgaveStatus) => {\n    const { flyttetReservasjon } = oppgaveStatus;\n    if (!flyttetReservasjon) {\n      return undefined;\n    }\n    const datoOgTid = getDateAndTime(flyttetReservasjon.tidspunkt);\n    const textValues = {\n      dato: datoOgTid?.date,\n      tid: datoOgTid?.time,\n      uid: flyttetReservasjon.uid,\n      navn: flyttetReservasjon.navn,\n      beskrivelse: flyttetReservasjon.begrunnelse,\n      br: <br />,\n    };\n    return (\n      <BodyShort size=\"small\">\n        <FormattedMessage id=\"OppgaverTabell.OverfortReservasjonTooltip\" values={textValues} />\n      </BodyShort>\n    );\n  }, []);\n\n  const alleOppgaver = useMemo(\n    () => slaSammenOgMarkerReserverte(reserverteOppgaver, oppgaverTilBehandling),\n    [reserverteOppgaver, oppgaverTilBehandling],\n  );\n  const valgtOppgave = reserverteOppgaver.find(o => o.id === valgtOppgaveId);\n\n  return (\n    <>\n      {hentOppgaverTilBehandlingError instanceof TimeoutError && <BehandlingPollingTimoutModal />}\n      <Label size=\"small\">\n        <FormattedMessage id=\"OppgaverTabell.DineNesteSaker\" values={{ antall: antallOppgaver }} />\n      </Label>\n      {alleOppgaver.length === 0 && (\n        <>\n          <VerticalSpacer eightPx />\n          <BodyShort size=\"small\">\n            <FormattedMessage id=\"OppgaverTabell.IngenOppgaver\" />\n          </BodyShort>\n        </>\n      )}\n      {alleOppgaver.length > 0 && (\n        <>\n          <Table headerTextCodes={headerTextCodes}>\n            {alleOppgaver.map(oppgave => (\n              <TableRow<number, Oppgave>\n                key={oppgave.id}\n                onMouseDown={goToFagsak}\n                onKeyDown={goToFagsak}\n                className={oppgave.underBehandling ? styles.isUnderBehandling : undefined}\n                model={oppgave}\n              >\n                <TableColumn>{oppgave.navn ? `${oppgave.navn} ${oppgave.personnummer}` : '<navn>'}</TableColumn>\n                <TableColumn>\n                  {getKodeverknavnFraKode(alleKodeverk, KodeverkType.BEHANDLING_TYPE, oppgave.behandlingstype)}\n                </TableColumn>\n                <TableColumn>\n                  {oppgave.opprettetTidspunkt && <DateLabel dateString={oppgave.opprettetTidspunkt} />}\n                </TableColumn>\n                <TableColumn>\n                  {oppgave.behandlingsfrist && <DateLabel dateString={oppgave.behandlingsfrist} />}\n                </TableColumn>\n                <TableColumn>\n                  {oppgave.status.flyttetReservasjon && (\n                    <Tooltip content={createTooltip(oppgave.status)} alignLeft>\n                      <ChatElipsisIcon className={styles.bubbleIcon} />\n                    </Tooltip>\n                  )}\n                </TableColumn>\n                <TableColumn className={oppgave.underBehandling ? styles.noPadding : undefined}>\n                  {!oppgave.underBehandling && <ChevronRightIcon className={styles.chevronImage} />}\n                  {oppgave.underBehandling && (\n                    <div\n                      ref={el => {\n                        ref.current = { ...ref.current, [oppgave.id]: el };\n                      }}\n                    >\n                      <MenuHamburgerIcon\n                        className={styles.image}\n                        title={intl.formatMessage({ id: 'OppgaverTabell.OppgaveHandlinger' })}\n                        onMouseDown={getToggleMenuEvent(oppgave, toggleMenu)}\n                        onKeyDown={getToggleMenuEvent(oppgave, toggleMenu)}\n                      />\n                    </div>\n                  )}\n                </TableColumn>\n              </TableRow>\n            ))}\n          </Table>\n          {showMenu && valgtOppgaveId && valgtOppgave && (\n            <OppgaveHandlingerMenu\n              imageNode={ref.current[valgtOppgaveId]}\n              toggleMenu={toggleMenu}\n              offset={offset}\n              oppgave={valgtOppgave}\n              forlengOppgaveReservasjon={forlengOppgaveReservasjonFn}\n              hentReserverteOppgaver={hentReserverteOppgaver}\n            />\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default OppgaverTabell;\n"],"names":["__rest","this","s","e","t","p","i","SvgChatElipsis","forwardRef","_a","ref","title","_titleId","props","titleId","useId","React.createElement","ChatElipsisIcon","SvgMenuHamburger","MenuHamburgerIcon","headerTextCodes","EMPTY_ARRAY","slaSammenOgMarkerReserverte","reserverteOppgaver","oppgaverTilBehandling","markedAsUnderBehandling","reservertOppgave","oppgave","f","notMarked","getToggleMenuEvent","toggleMenu","OppgaverTabell","reserverOppgave","antallOppgaver","valgtSakslisteId","doPolling","intl","useIntl","showMenu","setShowMenu","useState","valgtOppgaveId","setValgtOppgaveId","offset","setOffset","alleKodeverk","restApiHooks","RestApiGlobalStatePathsKeys","forlengOppgavereservasjon","RestApiPathsKeys","hentReserverteOppgaver","hentOppgaverTilBehandling","hentOppgaverTilBehandlingError","fetchSakslisteOppgaverPolling","keepData","sakslisteId","oppgaveIder","response","o","useEffect","requestApi","forlengOppgaveReservasjonFn","useCallback","oppgaveId","useRef","goToFagsak","event","_id","key","valgtOppgave2","newOffset","createTooltip","oppgaveStatus","flyttetReservasjon","datoOgTid","getDateAndTime","textValues","jsx","BodyShort","FormattedMessage","alleOppgaver","useMemo","valgtOppgave","jsxs","Fragment","TimeoutError","BehandlingPollingTimoutModal","Label","VerticalSpacer","Table","TableRow","styles","TableColumn","getKodeverknavnFraKode","KodeverkType","DateLabel","Tooltip","ChevronRightIcon","el","OppgaveHandlingerMenu","OppgaverTabell$1"],"mappings":"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","x_google_ignoreList":[0,1]}