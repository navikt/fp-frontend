{"version":3,"file":"InntektsgivendeArbeidPapirsoknadIndex.stories-35d8462f.js","sources":["../../src/inntektsgivendeArbeidPanel/components/RenderInntektsgivendeArbeidFieldArray.tsx","../../src/inntektsgivendeArbeidPanel/components/InntektsgivendeArbeidPanel.tsx","../../src/inntektsgivendeArbeidPanel/InntektsgivendeArbeidPapirsoknadIndex.tsx"],"sourcesContent":["import React, { FunctionComponent, ReactElement } from 'react';\nimport { useIntl } from 'react-intl';\nimport { maxLength, hasValidDate } from '@navikt/ft-form-validators';\nimport { FlexColumn, FlexContainer, FlexRow, VerticalSpacer } from '@navikt/ft-ui-komponenter';\nimport { Datepicker, InputField, SelectField, PeriodFieldArray } from '@navikt/ft-form-hooks';\nimport { KodeverkType, landkoder as Landkode } from '@navikt/fp-kodeverk';\nimport { AlleKodeverk, KodeverkMedNavn } from '@navikt/fp-types';\n\nimport { useFieldArray, useFormContext } from 'react-hook-form';\nimport styles from './renderInntektsgivendeArbeidFieldArray.module.css';\n\nconst maxLength50 = maxLength(50);\n\nexport const INNTEKTSGIVENDE_ARBEID_FIELD_ARRAY_NAME = 'arbeidsforhold';\n\ntype FormValues = {\n  arbeidsgiver: string;\n  periodeFom: string;\n  periodeTom: string;\n  land: string;\n};\n\nconst defaultInntektsgivendeArbeid: FormValues = {\n  arbeidsgiver: '',\n  periodeFom: '',\n  periodeTom: '',\n  land: '',\n};\n\nconst countrySelectValues = (countryCodes: KodeverkMedNavn[]): ReactElement[] =>\n  countryCodes\n    .filter(({ kode }) => kode !== Landkode.NORGE)\n    .map(({ kode, navn }) => (\n      <option value={kode} key={kode}>\n        {navn}\n      </option>\n    ));\n\ninterface OwnProps {\n  readOnly: boolean;\n  alleKodeverk: AlleKodeverk;\n}\n\n/**\n * RenderInntektsgivendeArbeidFieldArray\n *\n * Viser inputfelter for arbeidsgiver og organisasjonsnummer for registrering av arbeidsforhold.\n */\nconst RenderInntektsgivendeArbeidFieldArray: FunctionComponent<OwnProps> = ({ alleKodeverk, readOnly }) => {\n  const intl = useIntl();\n\n  const { control } = useFormContext<{ [INNTEKTSGIVENDE_ARBEID_FIELD_ARRAY_NAME]: FormValues[] }>();\n  const { fields, remove, append } = useFieldArray({\n    control,\n    name: INNTEKTSGIVENDE_ARBEID_FIELD_ARRAY_NAME,\n  });\n\n  const sortedCountriesByName = alleKodeverk[KodeverkType.LANDKODER]\n    .slice()\n    .sort((a, b) => a.navn.localeCompare(b.navn));\n\n  return (\n    <PeriodFieldArray<FormValues>\n      fields={fields}\n      emptyPeriodTemplate={defaultInntektsgivendeArbeid}\n      bodyText={intl.formatMessage({ id: 'Registrering.InntektsgivendeArbeid.LeggTilArbeidsforhold' })}\n      readOnly={readOnly}\n      remove={remove}\n      append={append}\n    >\n      {(field, index, getRemoveButton) => (\n        <div key={field.id} className={index !== fields.length - 1 ? styles.notLastRow : ''}>\n          <FlexContainer>\n            <FlexRow>\n              <FlexColumn>\n                <InputField\n                  readOnly={readOnly}\n                  name={`${INNTEKTSGIVENDE_ARBEID_FIELD_ARRAY_NAME}.${index}.arbeidsgiver`}\n                  label={\n                    index === 0 ? intl.formatMessage({ id: 'Registrering.InntektsgivendeArbeid.Arbeidsgiver' }) : ''\n                  }\n                  validate={[maxLength50]}\n                  maxLength={99}\n                />\n              </FlexColumn>\n              <FlexColumn>\n                <Datepicker\n                  isReadOnly={readOnly}\n                  name={`${INNTEKTSGIVENDE_ARBEID_FIELD_ARRAY_NAME}.${index}.periodeFom`}\n                  label={index === 0 ? intl.formatMessage({ id: 'Registrering.InntektsgivendeArbeid.periodeFom' }) : ''}\n                  validate={[hasValidDate]}\n                />\n              </FlexColumn>\n              <FlexColumn>\n                <Datepicker\n                  isReadOnly={readOnly}\n                  name={`${INNTEKTSGIVENDE_ARBEID_FIELD_ARRAY_NAME}.${index}.periodeTom`}\n                  label={index === 0 ? intl.formatMessage({ id: 'Registrering.InntektsgivendeArbeid.periodeTom' }) : ''}\n                  validate={[hasValidDate]}\n                />\n              </FlexColumn>\n              <FlexColumn>\n                <SelectField\n                  readOnly={readOnly}\n                  name={`${INNTEKTSGIVENDE_ARBEID_FIELD_ARRAY_NAME}.${index}.land`}\n                  label={index === 0 ? intl.formatMessage({ id: 'Registrering.InntektsgivendeArbeid.Land' }) : ''}\n                  selectValues={countrySelectValues(sortedCountriesByName)}\n                />\n              </FlexColumn>\n              {getRemoveButton && <FlexColumn>{getRemoveButton()}</FlexColumn>}\n            </FlexRow>\n          </FlexContainer>\n          <VerticalSpacer twentyPx />\n        </div>\n      )}\n    </PeriodFieldArray>\n  );\n};\n\nexport default RenderInntektsgivendeArbeidFieldArray;\n","import React, { FunctionComponent } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Detail, Heading } from '@navikt/ds-react';\nimport { BorderBox, VerticalSpacer } from '@navikt/ft-ui-komponenter';\nimport { AlleKodeverk } from '@navikt/fp-types';\n\nimport RenderInntektsgivendeArbeidFieldArray, {\n  INNTEKTSGIVENDE_ARBEID_FIELD_ARRAY_NAME,\n} from './RenderInntektsgivendeArbeidFieldArray';\n\ninterface OwnProps {\n  readOnly: boolean;\n  alleKodeverk: AlleKodeverk;\n}\n\nexport type FormValues = {\n  [INNTEKTSGIVENDE_ARBEID_FIELD_ARRAY_NAME]?: Record<string, any>;\n};\n\ninterface StaticFunctions {\n  buildInitialValues: () => FormValues;\n}\n\n/**\n * InntektsgivendeArbeidPanel\n *\n * Komponenten vises som del av skjermbildet for registrering av papirsøknad dersom søknad gjelder foreldrepenger.\n */\nconst InntektsgivendeArbeidPanel: FunctionComponent<OwnProps> & StaticFunctions = ({ readOnly, alleKodeverk }) => (\n  <BorderBox>\n    <Heading size=\"small\">\n      <FormattedMessage id=\"Registrering.InntektsgivendeArbeid.ArbeidINorge.Title\" />\n    </Heading>\n    <VerticalSpacer eightPx />\n    <Detail size=\"small\">\n      <FormattedMessage id=\"Registrering.InntektsgivendeArbeid.ArbeidINorge.SkalIkkeRegistrereArbeidsforhold\" />\n    </Detail>\n    <VerticalSpacer sixteenPx />\n    <VerticalSpacer sixteenPx />\n    <Detail size=\"small\">\n      <FormattedMessage id=\"Registrering.InntektsgivendeArbeid.ArbeidIUtlandet.Title\" />\n    </Detail>\n    <VerticalSpacer eightPx />\n    <RenderInntektsgivendeArbeidFieldArray readOnly={readOnly} alleKodeverk={alleKodeverk} />\n  </BorderBox>\n);\n\nInntektsgivendeArbeidPanel.buildInitialValues = () => ({\n  [INNTEKTSGIVENDE_ARBEID_FIELD_ARRAY_NAME]: [{}],\n});\n\nexport default InntektsgivendeArbeidPanel;\n","import React, { FunctionComponent } from 'react';\nimport { RawIntlProvider } from 'react-intl';\nimport { createIntl } from '@navikt/ft-utils';\nimport { AlleKodeverk } from '@navikt/fp-types';\n\nimport InntektsgivendeArbeidPanel, { FormValues } from './components/InntektsgivendeArbeidPanel';\nimport messages from '../../i18n/nb_NO.json';\n\nconst intl = createIntl(messages);\n\ninterface OwnProps {\n  readOnly: boolean;\n  alleKodeverk: AlleKodeverk;\n}\n\ninterface StaticFunctions {\n  buildInitialValues: () => FormValues;\n}\n\nconst InntektsgivendeArbeidPapirsoknadIndex: FunctionComponent<OwnProps> & StaticFunctions = ({\n  readOnly,\n  alleKodeverk,\n}) => (\n  <RawIntlProvider value={intl}>\n    <InntektsgivendeArbeidPanel readOnly={readOnly} alleKodeverk={alleKodeverk} />\n  </RawIntlProvider>\n);\n\nInntektsgivendeArbeidPapirsoknadIndex.buildInitialValues = () => InntektsgivendeArbeidPanel.buildInitialValues();\n\nexport default InntektsgivendeArbeidPapirsoknadIndex;\n"],"names":["maxLength50","maxLength","INNTEKTSGIVENDE_ARBEID_FIELD_ARRAY_NAME","defaultInntektsgivendeArbeid","countrySelectValues","countryCodes","kode","Landkode","navn","jsx","RenderInntektsgivendeArbeidFieldArray","alleKodeverk","readOnly","intl","useIntl","control","useFormContext","fields","remove","append","useFieldArray","sortedCountriesByName","KodeverkType","a","b","PeriodFieldArray","field","index","getRemoveButton","jsxs","styles","FlexContainer","FlexRow","FlexColumn","InputField","Datepicker","hasValidDate","SelectField","VerticalSpacer","InntektsgivendeArbeidPanel","BorderBox","Heading","FormattedMessage","Detail","createIntl","messages","InntektsgivendeArbeidPapirsoknadIndex","RawIntlProvider","InntektsgivendeArbeidPapirsoknadIndex$1"],"mappings":"ukBAWAA,EAAAC,EAAA,EAAA,EAEOC,EAAA,iBASPC,EAAA,CAAiD,aAAA,GACjC,WAAA,GACF,WAAA,GACA,KAAA,EAEd,EAEAC,EAAAC,GAAAA,EAAA,OAAA,CAAA,CAAA,KAAAC,CAAA,IAAAA,IAAAC,EAAA,KAAA,EAAA,IAAA,CAAA,CAAA,KAAAD,EAAA,KAAAE,CAAA,IAAAC,EAAA,IAAA,SAAA,CAAA,MAAAH,EAAA,SAAAE,GAAAF,CAAA,CAAA,EAmBAI,EAAA,CAAA,CAAA,aAAAC,EAAA,SAAAC,KAAA,CACE,MAAAC,EAAAC,IAEA,CAAA,QAAAC,GAAAC,IACA,CAAA,OAAAC,EAAA,OAAAC,EAAA,OAAAC,CAAA,EAAAC,EAAA,CAAiD,QAAAL,EAC/C,KAAAb,CACM,CAAA,EAGRmB,EAAAV,EAAAW,EAAA,SAAA,EAAA,MAAA,EAAA,KAAA,CAAAC,EAAAC,IAAAD,EAAA,KAAA,cAAAC,EAAA,IAAA,CAAA,EAIA,OAAAf,EAAA,IACEgB,EAAC,CAAA,OAAAR,EACC,oBAAAd,EACqB,SAAAU,EAAA,cAAA,CAAA,GAAA,0DAAA,CAAA,EAC0E,SAAAD,EAC/F,OAAAM,EACA,OAAAC,EACA,SAAA,CAAAO,EAAAC,EAAAC,IAAAC,EAAAA,KAAA,MAAA,CAAA,UAAAF,IAAAV,EAAA,OAAA,EAAAa,EAAA,WAAA,GAAA,SAAA,CAIIrB,EAAA,IAAAsB,EAAA,CAAA,SAAAF,EAAAA,KAAAG,EAAA,CAAA,SAAA,CAEIvB,MAAAwB,EAAA,CAAA,SAAAxB,EAAA,IACEyB,EAAC,CAAA,SAAAtB,EACC,KAAA,GAAAV,CAAA,IAAAyB,CAAA,gBACyD,MAAAA,IAAA,EAAAd,EAAA,cAAA,CAAA,GAAA,iDAAA,CAAA,EAAA,GAEuC,SAAA,CAAAb,CAAA,EAE1E,UAAA,EACX,CAAA,EAAA,EAEfS,MAAAwB,EAAA,CAAA,SAAAxB,EAAA,IAEE0B,EAAC,CAAA,WAAAvB,EACa,KAAA,GAAAV,CAAA,IAAAyB,CAAA,cAC6C,MAAAA,IAAA,EAAAd,EAAA,cAAA,CAAA,GAAA,+CAAA,CAAA,EAAA,GAC0C,SAAA,CAAAuB,CAAA,CAC5E,CAAA,EAAA,EAE3B3B,MAAAwB,EAAA,CAAA,SAAAxB,EAAA,IAEE0B,EAAC,CAAA,WAAAvB,EACa,KAAA,GAAAV,CAAA,IAAAyB,CAAA,cAC6C,MAAAA,IAAA,EAAAd,EAAA,cAAA,CAAA,GAAA,+CAAA,CAAA,EAAA,GAC0C,SAAA,CAAAuB,CAAA,CAC5E,CAAA,EAAA,EAE3B3B,MAAAwB,EAAA,CAAA,SAAAxB,EAAA,IAEE4B,EAAC,CAAA,SAAAzB,EACC,KAAA,GAAAV,CAAA,IAAAyB,CAAA,QACyD,MAAAA,IAAA,EAAAd,EAAA,cAAA,CAAA,GAAA,yCAAA,CAAA,EAAA,GACoC,aAAAT,EAAAiB,CAAA,CACtC,CAAA,EAAA,EAE3DO,GAAAnB,EAAA,IAAAwB,EAAA,CAAA,SAAAL,EAAA,CAAA,CAAA,CACmD,CAAA,CAAA,CAAA,CAAA,EAEvDnB,EAAAA,IAAA6B,EAAA,CAAA,SAAA,EAAA,CAAA,CACyB,CAAA,EAAAZ,EAAA,EAAA,CAC3B,CAAA,CAIR;;4WCzFA,MAAAa,EAAA,CAAA,CAAA,SAAA3B,EAAA,aAAAD,CAAA,IAAAkB,OAAAW,EAAA,CAAA,SAAA,CAEI/B,EAAAA,IAAAgC,EAAA,CAAA,KAAA,QAAA,SAAAhC,MAAAiC,EAAA,CAAA,GAAA,uDAAA,CAAA,CAAA,CAAA,EAEAjC,EAAAA,IAAA6B,EAAA,CAAA,QAAA,EAAA,CAAA,EACwB7B,EAAAA,IAAAkC,EAAA,CAAA,KAAA,QAAA,SAAAlC,MAAAiC,EAAA,CAAA,GAAA,kFAAA,CAAA,CAAA,CAAA,EAGxBjC,EAAAA,IAAA6B,EAAA,CAAA,UAAA,EAAA,CAAA,EAC0B7B,EAAAA,IAAA6B,EAAA,CAAA,UAAA,EAAA,CAAA,EACA7B,EAAAA,IAAAkC,EAAA,CAAA,KAAA,QAAA,SAAAlC,MAAAiC,EAAA,CAAA,GAAA,0DAAA,CAAA,CAAA,CAAA,EAG1BjC,EAAAA,IAAA6B,EAAA,CAAA,QAAA,EAAA,CAAA,EACwB7B,EAAAA,IAAAC,EAAA,CAAA,SAAAE,EAAA,aAAAD,CAAA,CAAA,CAC+D,CAAA,CAAA,EAI3F4B,EAAA,mBAAA,KAAA,CAAuD,CAAArC,CAAA,EAAA,CAAA,EAAA,CAEvD;;mXCzCA,MAAAW,EAAA+B,EAAAC,CAAA,EAWAC,EAAA,CAAA,CAA8F,SAAAlC,EAC5F,aAAAD,CAEF,IAAAF,EAAA,IAAAsC,EAAA,CAAA,MAAAlC,EAAA,SAAAJ,MAAA8B,EAAA,CAAA,SAAA3B,EAAA,aAAAD,CAAA,CAAA,CAAA,CAAA,EAMAmC,EAAA,mBAAA,IAAAP,EAAA,qBAEA,MAAAS,EAAAF;;;;;;;;;;;;;"}