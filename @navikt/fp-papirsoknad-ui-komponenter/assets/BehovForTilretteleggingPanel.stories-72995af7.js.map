{"version":3,"file":"BehovForTilretteleggingPanel.stories-72995af7.js","sources":["../../../kodeverk/src/tilretteleggingType.ts","../../src/tilretteleggingSvp/BehovForTilretteleggingFieldArray.tsx","../../src/tilretteleggingSvp/TilretteleggingForArbeidsgiverFieldArray.tsx","../../src/tilretteleggingSvp/BehovForTilretteleggingPanel.tsx"],"sourcesContent":["const tilretteleggingType = {\n  HEL_TILRETTELEGGING: 'HEL_TILRETTELEGGING',\n  DELVIS_TILRETTELEGGING: 'DELVIS_TILRETTELEGGING',\n  INGEN_TILRETTELEGGING: 'INGEN_TILRETTELEGGING',\n};\n\nexport default tilretteleggingType;\n","import React, { FunctionComponent, useEffect } from 'react';\nimport { useIntl } from 'react-intl';\nimport { FlexColumn, FlexContainer, FlexRow, VerticalSpacer } from '@navikt/ft-ui-komponenter';\nimport { required, maxValue } from '@navikt/ft-form-validators';\nimport { Datepicker, InputField, SelectField, PeriodFieldArray } from '@navikt/ft-form-hooks';\n\nimport { tilretteleggingType } from '@navikt/fp-kodeverk';\n\nimport { useFieldArray, useFormContext } from 'react-hook-form';\nimport styles from './behovForTilretteleggingFieldArray.module.css';\n\nconst maxValue3 = maxValue(100);\n\nexport const behovForTilretteleggingFieldArrayName = 'tilretteleggingArbeidsgiver';\nexport const selvstendigNaringsdrivendeFieldArrayName = 'tilretteleggingSelvstendigNaringsdrivende';\nexport const frilansFieldArrayName = 'tilretteleggingFrilans';\n\ntype FormValues = {\n  tilretteleggingType: string;\n  dato: string;\n  stillingsprosent: string;\n};\n\nconst defaultTilrettelegging: FormValues = {\n  tilretteleggingType: '',\n  dato: '',\n  stillingsprosent: '',\n};\n\ninterface OwnProps {\n  readOnly: boolean;\n  name: string;\n}\n\n/**\n * BehovForTilrettteleggingFieldArray\n *\n * Viser inputfelter for tilrettelegging av arbeidsforhold for selvstendig næringsdrivende eller frilans.\n */\nconst BehovForTilretteleggingFieldArray: FunctionComponent<OwnProps> = ({ readOnly, name }) => {\n  const intl = useIntl();\n\n  const { control } = useFormContext();\n  const { fields, remove, append } = useFieldArray({\n    control,\n    name,\n  });\n\n  useEffect(() => {\n    if (fields.length === 0) {\n      append(defaultTilrettelegging);\n    }\n  }, []);\n\n  return (\n    <PeriodFieldArray\n      fields={fields}\n      emptyPeriodTemplate={defaultTilrettelegging}\n      bodyText={intl.formatMessage({ id: 'BehovForTilrettteleggingFieldArray.LeggTilTilretteleggingsbehov' })}\n      readOnly={readOnly}\n      append={append}\n      remove={remove}\n    >\n      {(field, index, getRemoveButton) => (\n        <div key={field.id} className={index !== fields.length - 1 ? styles.notLastRow : ''}>\n          <VerticalSpacer sixteenPx />\n          <FlexContainer>\n            <FlexRow>\n              <FlexColumn>\n                <SelectField\n                  readOnly={readOnly}\n                  name={`${name}.${index}.tilretteleggingType`}\n                  label={\n                    index === 0\n                      ? intl.formatMessage({ id: 'BehovForTilrettteleggingFieldArray.BehovForTilrettelegging' })\n                      : ''\n                  }\n                  validate={[required]}\n                  selectValues={[\n                    <option\n                      value={tilretteleggingType.HEL_TILRETTELEGGING}\n                      key={tilretteleggingType.HEL_TILRETTELEGGING}\n                    >\n                      {intl.formatMessage({ id: 'BehovForTilrettteleggingFieldArray.KanGjennomfores' })}\n                    </option>,\n                    <option\n                      value={tilretteleggingType.DELVIS_TILRETTELEGGING}\n                      key={tilretteleggingType.DELVIS_TILRETTELEGGING}\n                    >\n                      {intl.formatMessage({ id: 'BehovForTilrettteleggingFieldArray.RedusertArbeid' })}\n                    </option>,\n                    <option\n                      value={tilretteleggingType.INGEN_TILRETTELEGGING}\n                      key={tilretteleggingType.INGEN_TILRETTELEGGING}\n                    >\n                      {intl.formatMessage({ id: 'BehovForTilrettteleggingFieldArray.KanIkkeGjennomfores' })}\n                    </option>,\n                  ]}\n                />\n              </FlexColumn>\n              <FlexColumn>\n                <Datepicker\n                  isReadOnly={readOnly}\n                  name={`${name}.${index}.dato`}\n                  label={index === 0 ? intl.formatMessage({ id: 'BehovForTilrettteleggingFieldArray.FraDato' }) : ''}\n                  validate={[required]}\n                />\n              </FlexColumn>\n              <FlexColumn>\n                <InputField\n                  readOnly={readOnly}\n                  name={`${name}.${index}.stillingsprosent`}\n                  label={\n                    index === 0 ? intl.formatMessage({ id: 'BehovForTilrettteleggingFieldArray.Stillingsprosent' }) : ''\n                  }\n                  validate={[required, maxValue3]}\n                  maxLength={99}\n                />\n              </FlexColumn>\n              {getRemoveButton && <FlexColumn>{getRemoveButton()}</FlexColumn>}\n            </FlexRow>\n          </FlexContainer>\n        </div>\n      )}\n    </PeriodFieldArray>\n  );\n};\n\nexport default BehovForTilretteleggingFieldArray;\n","import React, { FunctionComponent } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { Button } from '@navikt/ds-react';\nimport { VerticalSpacer, FlexColumn, FlexContainer, FlexRow } from '@navikt/ft-ui-komponenter';\nimport { Datepicker, InputField } from '@navikt/ft-form-hooks';\nimport { required, hasValidOrgNumberOrFodselsnr, hasNoWhiteSpace } from '@navikt/ft-form-validators';\n\nimport { useFieldArray, useFormContext } from 'react-hook-form';\nimport BehovForTilretteleggingFieldArray, {\n  behovForTilretteleggingFieldArrayName,\n} from './BehovForTilretteleggingFieldArray';\n\nconst TILRETTELEGGING_NAME_PREFIX = 'tilretteleggingArbeidsforhold';\n\nconst tilretteleggingForArbeidsgiverFieldArrayName = 'tilretteleggingForArbeidsgiver';\n\ntype FormValues = {\n  organisasjonsnummer: string;\n  behovsdato: string;\n};\n\nconst defaultTilrettelegging: FormValues = {\n  organisasjonsnummer: '',\n  behovsdato: '',\n};\n\ninterface OwnProps {\n  readOnly: boolean;\n}\n\n/*\n * TilretteleggingForArbeidsgiverFieldArray\n *\n * Form som brukes for registrere om det er behov for tilrettelegging for arbeidsgiver.\n */\nconst TilretteleggingForArbeidsgiverFieldArray: FunctionComponent<OwnProps> = ({ readOnly }) => {\n  const intl = useIntl();\n\n  const { control } = useFormContext<{\n    [TILRETTELEGGING_NAME_PREFIX]: { [tilretteleggingForArbeidsgiverFieldArrayName]: FormValues[] };\n  }>();\n  const { fields, append } = useFieldArray({\n    control,\n    name: `${TILRETTELEGGING_NAME_PREFIX}.${tilretteleggingForArbeidsgiverFieldArrayName}`,\n  });\n\n  const leggTilArbeidsgiver = () => {\n    append(defaultTilrettelegging);\n  };\n\n  const namePart1 = `${TILRETTELEGGING_NAME_PREFIX}.${tilretteleggingForArbeidsgiverFieldArrayName}`;\n  return (\n    <>\n      {fields.map((field, index: number) => (\n        <div key={field.id}>\n          <FlexContainer>\n            <FlexRow>\n              <FlexColumn>\n                <InputField\n                  readOnly={readOnly}\n                  name={`${namePart1}.${index}.organisasjonsnummer`}\n                  label={intl.formatMessage({ id: 'TilretteleggingForArbeidsgiverFieldArray.OrgNr' })}\n                  validate={[\n                    required,\n                    // TODO verdi her bør vel vera string?\n                    (value: number) => hasNoWhiteSpace(value.toString()),\n                    hasValidOrgNumberOrFodselsnr,\n                  ]}\n                  maxLength={99}\n                />\n              </FlexColumn>\n              <FlexColumn>\n                <Datepicker\n                  name={`${namePart1}.${index}.behovsdato`}\n                  label={intl.formatMessage({ id: 'TilretteleggingForArbeidsgiverFieldArray.TilretteleggingFra' })}\n                  validate={[required]}\n                  isReadOnly={readOnly}\n                />\n              </FlexColumn>\n            </FlexRow>\n          </FlexContainer>\n          <VerticalSpacer sixteenPx />\n          <BehovForTilretteleggingFieldArray\n            name={`${namePart1}.${index}.${behovForTilretteleggingFieldArrayName}`}\n            readOnly={readOnly}\n          />\n          {fields.length > index + 1 && (\n            <>\n              <hr />\n              <VerticalSpacer sixteenPx />\n            </>\n          )}\n          {fields.length === index + 1 && (\n            <Button size=\"small\" variant=\"secondary\" onClick={leggTilArbeidsgiver} type=\"button\">\n              <FormattedMessage id=\"TilretteleggingForArbeidsgiverFieldArray.LeggTilArbeidsgiver\" />\n            </Button>\n          )}\n        </div>\n      ))}\n    </>\n  );\n};\n\nexport default TilretteleggingForArbeidsgiverFieldArray;\n","import React, { FunctionComponent, useEffect } from 'react';\nimport { RawIntlProvider, FormattedMessage } from 'react-intl';\nimport { ErrorMessage, Heading } from '@navikt/ds-react';\nimport { RadioGroupPanel, Datepicker } from '@navikt/ft-form-hooks';\nimport { BorderBox, ArrowBox, VerticalSpacer } from '@navikt/ft-ui-komponenter';\nimport { required } from '@navikt/ft-form-validators';\nimport { createIntl } from '@navikt/ft-utils';\n\nimport { useFormContext } from 'react-hook-form';\nimport BehovForTilretteleggingFieldArray, {\n  frilansFieldArrayName,\n  selvstendigNaringsdrivendeFieldArrayName,\n} from './BehovForTilretteleggingFieldArray';\nimport TilretteleggingForArbeidsgiverFieldArray from './TilretteleggingForArbeidsgiverFieldArray';\nimport messages from '../../i18n/nb_NO.json';\n\nconst intl = createIntl(messages);\n\nconst tilretteleggingForArbeidsgiverFieldArrayName = 'tilretteleggingForArbeidsgiver';\nconst TILRETTELEGGING_NAME_PREFIX = 'tilretteleggingArbeidsforhold';\n\nexport type Tilrettelegging = {\n  tilretteleggingType: string;\n  fomDato: string;\n  stillingsprosent?: string;\n};\n\ntype VirtuellFeilType = {\n  notRegisteredInput?: boolean;\n};\n\nexport type FormValues = {\n  [TILRETTELEGGING_NAME_PREFIX]: {\n    [tilretteleggingForArbeidsgiverFieldArrayName]?: {\n      behovsdato?: string;\n      organisasjonsnummer?: string;\n      tilretteleggingArbeidsgiver?: Tilrettelegging[];\n    }[];\n    sokForArbeidsgiver?: boolean;\n    sokForFrilans?: boolean;\n    behovsdatoFrilans?: string;\n    tilretteleggingFrilans?: Tilrettelegging[];\n    sokForSelvstendigNaringsdrivende?: boolean;\n    behovsdatoSN?: string;\n    tilretteleggingSelvstendigNaringsdrivende?: Tilrettelegging[];\n  } & VirtuellFeilType;\n};\n\ninterface OwnProps {\n  readOnly: boolean;\n}\n\ninterface StaticFunctions {\n  buildInitialValues: () => FormValues;\n}\n\n/*\n * BehovForTilretteleggingPanel\n *\n * Form som brukes for registrere om det er behov for tilrettelegging.\n */\nconst BehovForTilretteleggingPanel: FunctionComponent<OwnProps> & StaticFunctions = ({ readOnly }) => {\n  const { watch, setError, clearErrors, formState } = useFormContext<FormValues>();\n\n  const sokForSelvstendigNaringsdrivende = watch(`${TILRETTELEGGING_NAME_PREFIX}.sokForSelvstendigNaringsdrivende`);\n  const sokForFrilans = watch(`${TILRETTELEGGING_NAME_PREFIX}.sokForFrilans`);\n  const sokForArbeidsgiver = watch(`${TILRETTELEGGING_NAME_PREFIX}.sokForArbeidsgiver`);\n\n  const isError = !sokForSelvstendigNaringsdrivende && !sokForFrilans && !sokForArbeidsgiver;\n  useEffect(() => {\n    if (isError) {\n      setError(`${TILRETTELEGGING_NAME_PREFIX}.notRegisteredInput`, {\n        type: 'custom',\n        message: intl.formatMessage({ id: 'BehovForTilretteleggingPanel.MinstEnMaaVereJa' }),\n      });\n    }\n    if (!isError) {\n      clearErrors(`${TILRETTELEGGING_NAME_PREFIX}.notRegisteredInput`);\n    }\n  }, [isError]);\n\n  return (\n    <RawIntlProvider value={intl}>\n      <BorderBox>\n        <Heading size=\"small\">\n          <FormattedMessage id=\"BehovForTilretteleggingPanel.BehovForTilrettelegging\" />\n        </Heading>\n        <VerticalSpacer sixteenPx />\n        {formState.isSubmitted && formState.errors[TILRETTELEGGING_NAME_PREFIX]?.notRegisteredInput?.message && (\n          <ErrorMessage>{formState.errors[TILRETTELEGGING_NAME_PREFIX]?.notRegisteredInput?.message}</ErrorMessage>\n        )}\n        <RadioGroupPanel\n          name={`${TILRETTELEGGING_NAME_PREFIX}.sokForSelvstendigNaringsdrivende`}\n          label={<FormattedMessage id=\"BehovForTilretteleggingPanel.SokForSelvstendigNaringsdrivende\" />}\n          validate={[required]}\n          isReadOnly={readOnly}\n          isTrueOrFalseSelection\n          isHorizontal\n          radios={[\n            {\n              label: intl.formatMessage({ id: 'BehovForTilretteleggingPanel.Ja' }),\n              value: 'true',\n            },\n            {\n              label: intl.formatMessage({ id: 'BehovForTilretteleggingPanel.Nei' }),\n              value: 'false',\n            },\n          ]}\n        />\n        <VerticalSpacer sixteenPx />\n        {sokForSelvstendigNaringsdrivende && (\n          <ArrowBox>\n            <Datepicker\n              name={`${TILRETTELEGGING_NAME_PREFIX}.behovsdatoSN`}\n              label={intl.formatMessage({ id: 'BehovForTilretteleggingPanel.TilretteleggingFra' })}\n              validate={[required]}\n              isReadOnly={readOnly}\n            />\n            <BehovForTilretteleggingFieldArray\n              name={`${TILRETTELEGGING_NAME_PREFIX}.${selvstendigNaringsdrivendeFieldArrayName}`}\n              readOnly={readOnly}\n            />\n          </ArrowBox>\n        )}\n        <RadioGroupPanel\n          name={`${TILRETTELEGGING_NAME_PREFIX}.sokForFrilans`}\n          label={<FormattedMessage id=\"BehovForTilretteleggingPanel.SokForFrilans\" />}\n          validate={[required]}\n          isReadOnly={readOnly}\n          isTrueOrFalseSelection\n          isHorizontal\n          radios={[\n            {\n              label: intl.formatMessage({ id: 'BehovForTilretteleggingPanel.Ja' }),\n              value: 'true',\n            },\n            {\n              label: intl.formatMessage({ id: 'BehovForTilretteleggingPanel.Nei' }),\n              value: 'false',\n            },\n          ]}\n        />\n        <VerticalSpacer sixteenPx />\n        {sokForFrilans && (\n          <ArrowBox>\n            <Datepicker\n              name={`${TILRETTELEGGING_NAME_PREFIX}.behovsdatoFrilans`}\n              label={intl.formatMessage({ id: 'BehovForTilretteleggingPanel.TilretteleggingFra' })}\n              validate={[required]}\n              isReadOnly={readOnly}\n            />\n            <BehovForTilretteleggingFieldArray\n              name={`${TILRETTELEGGING_NAME_PREFIX}.${frilansFieldArrayName}`}\n              readOnly={readOnly}\n            />\n          </ArrowBox>\n        )}\n        <RadioGroupPanel\n          name={`${TILRETTELEGGING_NAME_PREFIX}.sokForArbeidsgiver`}\n          label={<FormattedMessage id=\"BehovForTilretteleggingPanel.SokForArbeidsgiver\" />}\n          validate={[required]}\n          isReadOnly={readOnly}\n          isTrueOrFalseSelection\n          isHorizontal\n          radios={[\n            {\n              label: intl.formatMessage({ id: 'BehovForTilretteleggingPanel.Ja' }),\n              value: 'true',\n            },\n            {\n              label: intl.formatMessage({ id: 'BehovForTilretteleggingPanel.Nei' }),\n              value: 'false',\n            },\n          ]}\n        />\n        <VerticalSpacer sixteenPx />\n        {sokForArbeidsgiver && (\n          <ArrowBox>\n            <TilretteleggingForArbeidsgiverFieldArray readOnly={readOnly} />\n          </ArrowBox>\n        )}\n      </BorderBox>\n    </RawIntlProvider>\n  );\n};\n\nBehovForTilretteleggingPanel.buildInitialValues = (): FormValues => ({\n  [TILRETTELEGGING_NAME_PREFIX]: {\n    [tilretteleggingForArbeidsgiverFieldArrayName]: [{}],\n  },\n});\n\nexport default BehovForTilretteleggingPanel;\n"],"names":["tilretteleggingType","maxValue3","maxValue","behovForTilretteleggingFieldArrayName","selvstendigNaringsdrivendeFieldArrayName","frilansFieldArrayName","defaultTilrettelegging","BehovForTilretteleggingFieldArray","readOnly","name","intl","useIntl","control","useFormContext","fields","remove","append","useFieldArray","useEffect","jsx","PeriodFieldArray","field","index","getRemoveButton","jsxs","styles","VerticalSpacer","FlexContainer","FlexRow","FlexColumn","SelectField","required","Datepicker","InputField","TILRETTELEGGING_NAME_PREFIX","tilretteleggingForArbeidsgiverFieldArrayName","TilretteleggingForArbeidsgiverFieldArray","leggTilArbeidsgiver","namePart1","Fragment","value","hasNoWhiteSpace","hasValidOrgNumberOrFodselsnr","Button","FormattedMessage","createIntl","messages","BehovForTilretteleggingPanel","watch","setError","clearErrors","formState","sokForSelvstendigNaringsdrivende","sokForFrilans","sokForArbeidsgiver","isError","RawIntlProvider","BorderBox","Heading","_b","_a","ErrorMessage","_d","_c","RadioGroupPanel","ArrowBox","BehovForTilretteleggingPanel$1"],"mappings":"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"}