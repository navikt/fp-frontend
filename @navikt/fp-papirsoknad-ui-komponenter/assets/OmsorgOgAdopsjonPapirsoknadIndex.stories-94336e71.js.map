{"version":3,"file":"OmsorgOgAdopsjonPapirsoknadIndex.stories-94336e71.js","sources":["../../src/omsorgOgAdopsjonPanel/components/OmsorgOgAdopsjonPanel.tsx","../../src/omsorgOgAdopsjonPanel/OmsorgOgAdopsjonPapirsoknadIndex.tsx"],"sourcesContent":["import React, { FunctionComponent, useEffect } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { Heading } from '@navikt/ds-react';\nimport { BorderBox, FlexColumn, FlexContainer, FlexRow, VerticalSpacer } from '@navikt/ft-ui-komponenter';\nimport {\n  dateBeforeOrEqualToToday,\n  hasValidDate,\n  hasValidInteger,\n  isDatesEqual,\n  maxValue,\n  minValue,\n  required,\n} from '@navikt/ft-form-validators';\nimport { Datepicker, InputField, RadioGroupPanel } from '@navikt/ft-form-hooks';\n\nimport { familieHendelseType as fht } from '@navikt/fp-kodeverk';\n\nimport { useFieldArray, useFormContext } from 'react-hook-form';\nimport styles from './omsorgOgAdopsjonPanel.module.css';\n\nconst MAX_ANTALL_BARN = 10;\n\nconst minAntall = minValue(1);\nconst maxAntall = maxValue(10);\n\nconst OMSORG_NAME_PREFIX = 'omsorg';\n\nexport type FormValues = {\n  omsorgsovertakelsesdato?: string;\n  antallBarn?: string;\n  foedselsDato?: { id: number; dato?: string }[];\n};\n\nexport type TransformedFormValues = {\n  omsorgsovertakelsesdato?: string;\n  antallBarn?: string;\n  foedselsDato?: (string | undefined)[];\n};\n\nconst getValideringMotAnnenFødselsdato = (index: number, fodselsdato?: string | string[]) => (fDato?: string) => {\n  if (index === 0 && fodselsdato && fDato) {\n    return isDatesEqual(fDato, Array.isArray(fodselsdato) ? fodselsdato[0] : fodselsdato);\n  }\n  return undefined;\n};\n\ninterface OwnProps {\n  familieHendelseType: string;\n  readOnly?: boolean;\n  isForeldrepengerFagsak: boolean;\n  fodselsdatoer?: string | string[];\n}\n\ninterface StaticFunctions {\n  transformValues: (formValues: FormValues) => TransformedFormValues;\n}\n\n/**\n * OmsorgOgAdopsjonPanel\n *\n * Komponenten vises som del av skjermbildet for registrering av papirsøknad ved adopsjon og omsorgsovertakelse.\n * Komponenten har inputfelter og må derfor rendres som etterkommer av form-komponent.\n */\nconst OmsorgOgAdopsjonPanel: FunctionComponent<OwnProps> & StaticFunctions = ({\n  readOnly = true,\n  familieHendelseType,\n  isForeldrepengerFagsak,\n  fodselsdatoer,\n}) => {\n  const { formatMessage } = useIntl();\n\n  const { control, watch } = useFormContext<{ [OMSORG_NAME_PREFIX]: FormValues }>();\n  const { fields, remove, append } = useFieldArray({\n    control,\n    name: `${OMSORG_NAME_PREFIX}.foedselsDato`,\n  });\n\n  const antallBarnState = watch(`${OMSORG_NAME_PREFIX}.antallBarn`);\n  const antallBarn = antallBarnState ? parseInt(antallBarnState, 10) : 0;\n\n  useEffect(() => {\n    if (fields.length > Math.max(antallBarn, 0)) {\n      for (let i = fields.length; i > antallBarn; i -= 1) {\n        remove(i - 1);\n      }\n    } else if (fields.length < Math.min(antallBarn, MAX_ANTALL_BARN)) {\n      for (let i = fields.length; i < antallBarn; i += 1) {\n        append({ id: i, dato: undefined });\n      }\n    }\n  }, [antallBarn]);\n\n  return (\n    <BorderBox>\n      <Heading size=\"small\">\n        <FormattedMessage\n          id={\n            familieHendelseType === fht.ADOPSJON ? 'Registrering.Adopsjon.Title' : 'Registrering.Adopsjon.OmsorgTitle'\n          }\n        />\n      </Heading>\n      <VerticalSpacer sixteenPx />\n      <FlexContainer>\n        {isForeldrepengerFagsak && familieHendelseType === fht.ADOPSJON && (\n          <>\n            <FlexRow>\n              <FlexColumn className={styles.col}>\n                <RadioGroupPanel\n                  name={`${OMSORG_NAME_PREFIX}.erEktefellesBarn`}\n                  label={<FormattedMessage id=\"Registrering.Adopsjon.GjelderEktefellesBarn\" />}\n                  validate={[required]}\n                  isReadOnly={readOnly}\n                  isTrueOrFalseSelection\n                  isHorizontal\n                  radios={[\n                    {\n                      label: formatMessage({ id: 'Registrering.Adopsjon.Ja' }),\n                      value: 'true',\n                    },\n                    {\n                      label: formatMessage({ id: 'Registrering.Adopsjon.Nei' }),\n                      value: 'false',\n                    },\n                  ]}\n                />\n              </FlexColumn>\n            </FlexRow>\n            <VerticalSpacer sixteenPx />\n          </>\n        )}\n        <FlexRow>\n          <FlexColumn>\n            <Datepicker\n              name={`${OMSORG_NAME_PREFIX}.omsorgsovertakelsesdato`}\n              label={formatMessage({\n                id:\n                  familieHendelseType === fht.ADOPSJON\n                    ? 'Registrering.Adopsjon.DatoForOvertakelsenStebarn'\n                    : 'Registrering.Adopsjon.DatoForOvertakelsen',\n              })}\n              isReadOnly={readOnly}\n              validate={familieHendelseType === fht.ADOPSJON ? [required, hasValidDate] : [hasValidDate]}\n            />\n          </FlexColumn>\n        </FlexRow>\n        <VerticalSpacer sixteenPx />\n        <FlexRow>\n          {familieHendelseType === fht.ADOPSJON && (\n            <FlexColumn>\n              <Datepicker\n                name={`${OMSORG_NAME_PREFIX}.ankomstdato`}\n                label={formatMessage({ id: 'Registrering.Adopsjon.Ankomstdato' })}\n                isReadOnly={readOnly}\n                validate={[hasValidDate]}\n              />\n            </FlexColumn>\n          )}\n          <FlexColumn className={styles.col}>\n            <InputField\n              name={`${OMSORG_NAME_PREFIX}.antallBarn`}\n              label={formatMessage({ id: 'Registrering.Adopsjon.AntallBarn' })}\n              readOnly={readOnly}\n              parse={value => {\n                const parsedValue = parseInt(value.toString(), 10);\n                return Number.isNaN(parsedValue) ? value : parsedValue;\n              }}\n              className={styles.barnInput}\n              validate={\n                familieHendelseType === fht.ADOPSJON\n                  ? [required, hasValidInteger, minAntall, maxAntall]\n                  : [\n                      hasValidInteger,\n                      (value: string) => (value ? minAntall(parseInt(value, 10)) : undefined),\n                      (value: string) => (value ? maxAntall(parseInt(value, 10)) : undefined),\n                    ]\n              }\n            />\n          </FlexColumn>\n        </FlexRow>\n        <FlexRow>\n          <FlexColumn className={styles.col}>\n            {fields.map((field, index) => (\n              <React.Fragment key={field.id}>\n                <VerticalSpacer sixteenPx />\n                <Datepicker\n                  name={`${OMSORG_NAME_PREFIX}.foedselsDato.${index}.dato`}\n                  isReadOnly={readOnly}\n                  validate={\n                    familieHendelseType === fht.ADOPSJON\n                      ? [\n                          required,\n                          hasValidDate,\n                          dateBeforeOrEqualToToday,\n                          getValideringMotAnnenFødselsdato(index, fodselsdatoer),\n                        ]\n                      : [hasValidDate, dateBeforeOrEqualToToday, getValideringMotAnnenFødselsdato(index, fodselsdatoer)]\n                  }\n                  label={formatMessage({ id: 'Registrering.Adopsjon.FodselsdatoBarnN' }, { n: index + 1 })}\n                />\n              </React.Fragment>\n            ))}\n          </FlexColumn>\n        </FlexRow>\n      </FlexContainer>\n    </BorderBox>\n  );\n};\n\nOmsorgOgAdopsjonPanel.transformValues = values => ({\n  ...values,\n  foedselsDato:\n    values.foedselsDato && values.foedselsDato.length > 0 ? values.foedselsDato.map(f => f.dato) : undefined,\n});\n\nexport default OmsorgOgAdopsjonPanel;\n","import React, { FunctionComponent } from 'react';\nimport { RawIntlProvider } from 'react-intl';\n\nimport { createIntl } from '@navikt/ft-utils';\n\nimport OmsorgOgAdopsjonPanel, { FormValues, TransformedFormValues } from './components/OmsorgOgAdopsjonPanel';\nimport messages from '../../i18n/nb_NO.json';\n\nconst intl = createIntl(messages);\n\ninterface OwnProps {\n  readOnly: boolean;\n  familieHendelseType: string;\n  isForeldrepengerFagsak: boolean;\n  fodselsdato?: string | string[];\n}\n\ninterface StaticFunctions {\n  transformValues: (formValues: FormValues) => TransformedFormValues;\n}\n\nconst OmsorgOgAdopsjonPapirsoknadIndex: FunctionComponent<OwnProps> & StaticFunctions = ({\n  readOnly,\n  familieHendelseType,\n  isForeldrepengerFagsak,\n  fodselsdato,\n}) => (\n  <RawIntlProvider value={intl}>\n    <OmsorgOgAdopsjonPanel\n      readOnly={readOnly}\n      familieHendelseType={familieHendelseType}\n      isForeldrepengerFagsak={isForeldrepengerFagsak}\n      fodselsdatoer={fodselsdato}\n    />\n  </RawIntlProvider>\n);\n\nOmsorgOgAdopsjonPapirsoknadIndex.transformValues = OmsorgOgAdopsjonPanel.transformValues;\n\nexport default OmsorgOgAdopsjonPapirsoknadIndex;\n"],"names":["MAX_ANTALL_BARN","minAntall","minValue","maxAntall","maxValue","OMSORG_NAME_PREFIX","getValideringMotAnnenFødselsdato","index","fodselsdato","fDato","isDatesEqual","OmsorgOgAdopsjonPanel","readOnly","familieHendelseType","isForeldrepengerFagsak","fodselsdatoer","formatMessage","useIntl","control","watch","useFormContext","fields","remove","append","useFieldArray","antallBarnState","antallBarn","useEffect","i","jsxs","BorderBox","jsx","Heading","FormattedMessage","fht","VerticalSpacer","FlexContainer","Fragment","FlexRow","FlexColumn","styles","RadioGroupPanel","required","Datepicker","hasValidDate","InputField","value","parsedValue","hasValidInteger","field","React","dateBeforeOrEqualToToday","values","f","intl","createIntl","messages","OmsorgOgAdopsjonPapirsoknadIndex","RawIntlProvider","OmsorgOgAdopsjonPapirsoknadIndex$1"],"mappings":"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"}