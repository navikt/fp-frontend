{"version":3,"file":"BehandlingHenlagtPanel-d1d75232.js","sources":["../../src/behandling/felles/prosess/ProsessPanelWrapper.tsx","../../src/behandling/felles/prosess/BehandlingHenlagtPanel.tsx"],"sourcesContent":["import React, { FunctionComponent, ReactElement } from 'react';\nimport classnames from 'classnames/bind';\nimport { FormattedMessage } from 'react-intl';\nimport { BodyShort } from '@navikt/ds-react';\nimport { LoadingPanel, FadingPanel } from '@navikt/ft-ui-komponenter';\nimport { VilkarUtfallType } from '@navikt/ft-kodeverk';\n\nimport { RestApiState } from '@navikt/fp-rest-api-hooks';\n\nimport styles from './prosessPanelWrapper.module.css';\n\nconst classNames = classnames.bind(styles);\n\ninterface PanelContainerOwnProps {\n  skalSkjulePanel?: boolean;\n  children: any;\n}\n\nconst PanelContainer: FunctionComponent<PanelContainerOwnProps> = ({ skalSkjulePanel = false, children }) => (\n  <div className={classNames('steg', { skalSkjulePanel })}>\n    <FadingPanel>{children}</FadingPanel>\n  </div>\n);\n\ninterface OwnProps {\n  erPanelValgt: boolean;\n  erAksjonspunktOpent: boolean;\n  status: string;\n  dataState: RestApiState;\n  skalSkjulePanel?: boolean;\n  children: ReactElement | ReactElement[];\n}\n\nconst ProsessPanelWrapper: FunctionComponent<OwnProps> = ({\n  erPanelValgt,\n  erAksjonspunktOpent,\n  status,\n  dataState,\n  skalSkjulePanel = false,\n  children,\n}) => {\n  if (!erPanelValgt && !skalSkjulePanel) {\n    return null;\n  }\n\n  if (erPanelValgt && status === VilkarUtfallType.IKKE_VURDERT && !erAksjonspunktOpent) {\n    return (\n      <PanelContainer>\n        <BodyShort size=\"small\">\n          <FormattedMessage id=\"ProsessPanelWrapper.IkkeBehandlet\" />\n        </BodyShort>\n      </PanelContainer>\n    );\n  }\n\n  return (\n    <PanelContainer skalSkjulePanel={skalSkjulePanel}>\n      {dataState !== RestApiState.SUCCESS && <LoadingPanel />}\n      {dataState === RestApiState.SUCCESS && children}\n    </PanelContainer>\n  );\n};\n\nexport default ProsessPanelWrapper;\n","import React, { FunctionComponent, useEffect, useState } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { BodyShort } from '@navikt/ds-react';\nimport { VilkarUtfallType } from '@navikt/ft-kodeverk';\n\nimport { RestApiState } from '@navikt/fp-rest-api-hooks';\n\nimport ProsessPanelWrapper from './ProsessPanelWrapper';\nimport ProsessPanelMenyData from '../typer/prosessPanelMenyData';\n\nconst ID = 'henlagt';\n\ntype OwnProps = {\n  valgtProsessSteg: string | undefined;\n  registrerProsessPanel: (data: ProsessPanelMenyData) => void;\n};\n\nconst BehandlingHenlagtPanel: FunctionComponent<OwnProps> = ({ valgtProsessSteg, registrerProsessPanel }) => {\n  const intl = useIntl();\n\n  const [erPanelValgt, setPanelValgt] = useState(false);\n\n  useEffect(() => {\n    const erValgt = valgtProsessSteg === ID || valgtProsessSteg === 'default';\n    registrerProsessPanel({\n      id: ID,\n      tekst: intl.formatMessage({ id: 'BehandlingHenlagtPanel.Header' }),\n      erAktiv: erValgt,\n      harApentAksjonspunkt: false,\n      status: VilkarUtfallType.IKKE_VURDERT,\n    });\n    setPanelValgt(erValgt);\n  }, [valgtProsessSteg]);\n\n  return (\n    <ProsessPanelWrapper\n      erPanelValgt={erPanelValgt}\n      erAksjonspunktOpent={false}\n      status={VilkarUtfallType.OPPFYLT}\n      dataState={RestApiState.SUCCESS}\n    >\n      <BodyShort size=\"small\">\n        <FormattedMessage id=\"BehandlingHenlagtPanel.Henlagt\" />\n      </BodyShort>\n    </ProsessPanelWrapper>\n  );\n};\n\nexport default BehandlingHenlagtPanel;\n"],"names":["classNames","classnames","styles","PanelContainer","skalSkjulePanel","children","jsx","FadingPanel","ProsessPanelWrapper","erPanelValgt","erAksjonspunktOpent","status","dataState","VilkarUtfallType","BodyShort","FormattedMessage","jsxs","RestApiState","LoadingPanel","ID","BehandlingHenlagtPanel","valgtProsessSteg","registrerProsessPanel","intl","useIntl","setPanelValgt","useState","useEffect","erValgt","BehandlingHenlagtPanel$1"],"mappings":"0XAWAA,EAAAC,EAAA,KAAAC,CAAA,EAOAC,EAAA,CAAA,CAAA,gBAAAC,EAAA,GAAA,SAAAC,CAAA,IAAAC,EAAA,IAAA,MAAA,CAAA,UAAAN,EAAA,OAAA,CAAA,gBAAAI,EAAA,EAAA,SAAAE,EAAAA,IAAAC,EAAA,CAAA,SAAAF,EAAA,CAAA,CAAA,EAeAG,EAAA,CAAA,CAA0D,aAAAC,EACxD,oBAAAC,EACA,OAAAC,EACA,UAAAC,EACA,gBAAAR,EAAA,GACkB,SAAAC,CAEpB,IACE,CAAAI,GAAA,CAAAL,EACE,KAGFK,GAAAE,IAAAE,EAAA,cAAA,CAAAH,EACEJ,EAAAA,IAAAH,EAAA,CAAA,SAAAG,EAAAA,IAAAQ,EAAA,CAAA,KAAA,QAAA,SAAAR,EAAAA,IAAAS,EAAA,CAAA,GAAA,oCAAA,CAAA,CAAA,CAAA,CAAA,EASFC,OAAAb,EAAA,CAAA,gBAAAC,EAAA,SAAA,CAEKQ,IAAAK,EAAA,SAAAX,EAAAA,IAAAY,EAAA,CAAA,CAAA,EAAoDN,IAAAK,EAAA,SAAAZ,CACd,CAAA,CAAA,4tBChD7C,MAAAc,EAAA,UAOAC,EAAA,CAAA,CAAA,iBAAAC,EAAA,sBAAAC,KAAA,CACE,MAAAC,EAAAC,IAEA,CAAAf,EAAAgB,CAAA,EAAAC,EAAA,SAAA,EAAA,EAEAC,OAAAA,EAAAA,UAAA,IAAA,CACE,MAAAC,EAAAP,IAAAF,GAAAE,IAAA,UACAC,EAAA,CAAsB,GAAAH,EAChB,MAAAI,EAAA,cAAA,CAAA,GAAA,+BAAA,CAAA,EAC6D,QAAAK,EACxD,qBAAA,GACa,OAAAf,EAAA,YACG,CAAA,EAE3BY,EAAAG,CAAA,CAAqB,EAAA,CAAAP,CAAA,CAAA,EAGvBf,EAAA,IACEE,EAAC,CAAA,aAAAC,EACC,oBAAA,GACqB,OAAAI,EAAA,QACI,UAAAI,EAAA,QACD,SAAAX,EAAAA,IAAAQ,EAAA,CAAA,KAAA,QAAA,SAAAR,EAAA,IAAAS,EAAA,CAAA,GAAA,gCAAA,CAAA,CAAA,CAAA,CAIxB,CAAA,CAGN,EAEAc,EAAAT"}