{"version":3,"file":"BehandlingPapirsoknadIndex-3cc94ae2.js","sources":["../../../../packages/kodeverk/src/arbeidskategori.ts","../../../../packages/kodeverk/src/arbeidType.ts","../../../../packages/kodeverk/src/foreldreType.ts","../../../../packages/kodeverk/src/kanIkkeOppgiAnnenForelderArsak.ts","../../../../packages/kodeverk/src/naringsvirksomhetType.ts","../../../../packages/kodeverk/src/overforingArsak.ts","../../../../packages/papirsoknad-ui-komponenter/src/andreYtelserPanel/components/RenderAndreYtelserPerioderFieldArray.tsx","../../../../packages/papirsoknad-ui-komponenter/src/andreYtelserPanel/components/AndreYtelserPanel.tsx","../../../../packages/papirsoknad-ui-komponenter/src/andreYtelserPanel/AndreYtelserPapirsoknadIndex.tsx","../../../../packages/papirsoknad-ui-komponenter/src/annenForelderPanel/components/AnnenForelderPanel.tsx","../../../../packages/papirsoknad-ui-komponenter/src/annenForelderPanel/AnnenForelderPapirsoknadIndex.tsx","../../../../packages/papirsoknad-ui-komponenter/src/fodselPanel/components/TerminFodselDatoPanel.tsx","../../../../packages/papirsoknad-ui-komponenter/src/fodselPanel/FodselPapirsoknadIndex.tsx","../../../../packages/papirsoknad-ui-komponenter/src/frilansPanel/components/FrilansPerioderFieldArray.tsx","../../../../packages/papirsoknad-ui-komponenter/src/frilansPanel/components/FrilansOppdragForFamilieFieldArray.tsx","../../../../packages/papirsoknad-ui-komponenter/src/frilansPanel/components/FrilansOppdragForFamiliePanel.tsx","../../../../packages/papirsoknad-ui-komponenter/src/frilansPanel/components/FrilansPanel.tsx","../../../../packages/papirsoknad-ui-komponenter/src/frilansPanel/FrilansPapirsoknadIndex.tsx","../../../../packages/papirsoknad-ui-komponenter/src/inntektsgivendeArbeidPanel/components/RenderInntektsgivendeArbeidFieldArray.tsx","../../../../packages/papirsoknad-ui-komponenter/src/inntektsgivendeArbeidPanel/components/InntektsgivendeArbeidPanel.tsx","../../../../packages/papirsoknad-ui-komponenter/src/inntektsgivendeArbeidPanel/InntektsgivendeArbeidPapirsoknadIndex.tsx","../../../../packages/papirsoknad-ui-komponenter/src/lagreSoknadPanel/components/LukkPapirsoknadModal.tsx","../../../../packages/papirsoknad-ui-komponenter/src/lagreSoknadPanel/components/LagreSoknadPanel.tsx","../../../../packages/papirsoknad-ui-komponenter/src/lagreSoknadPanel/LagreSoknadPapirsoknadIndex.tsx","../../../../packages/papirsoknad-ui-komponenter/src/mottattDatoPanel/components/MottattDatoPanel.tsx","../../../../packages/papirsoknad-ui-komponenter/src/mottattDatoPanel/MottattDatoPapirsoknadIndex.tsx","../../../../packages/papirsoknad-ui-komponenter/src/omsorgOgAdopsjonPanel/components/OmsorgOgAdopsjonPanel.tsx","../../../../packages/papirsoknad-ui-komponenter/src/omsorgOgAdopsjonPanel/OmsorgOgAdopsjonPapirsoknadIndex.tsx","../../../../packages/papirsoknad-ui-komponenter/src/oppholdINorgePanel/components/UtenlandsOppholdField.tsx","../../../../packages/papirsoknad-ui-komponenter/src/oppholdINorgePanel/components/OppholdINorgePanel.tsx","../../../../packages/papirsoknad-ui-komponenter/src/oppholdINorgePanel/OppholdINorgePapirsoknadIndex.tsx","../../../../packages/papirsoknad-ui-komponenter/src/rettigheterPanel/components/RettigheterPanel.tsx","../../../../packages/papirsoknad-ui-komponenter/src/rettigheterPanel/RettigheterPapirsoknadIndex.tsx","../../../../packages/papirsoknad-ui-komponenter/src/sprakPanel/components/SprakPanel.tsx","../../../../packages/papirsoknad-ui-komponenter/src/sprakPanel/SprakPapirsoknadIndex.tsx","../../../../packages/papirsoknad-ui-komponenter/src/virksomhetPanel/components/VirksomhetIdentifikasjonPanel.tsx","../../../../packages/papirsoknad-ui-komponenter/src/virksomhetPanel/components/VirksomhetRegnskapPanel.tsx","../../../../packages/papirsoknad-ui-komponenter/src/virksomhetPanel/components/VirksomhetStartetEndretPanel.tsx","../../../../packages/papirsoknad-ui-komponenter/src/virksomhetPanel/components/VirksomhetRelasjonPanel.tsx","../../../../packages/papirsoknad-ui-komponenter/src/virksomhetPanel/components/VirksomhetTypeNaringPanel.tsx","../../../../packages/papirsoknad-ui-komponenter/src/virksomhetPanel/components/RegistrerVirksomhetModalForm.tsx","../../../../packages/papirsoknad-ui-komponenter/src/virksomhetPanel/components/RegistrerVirksomhetPanel.tsx","../../../../packages/papirsoknad-ui-komponenter/src/virksomhetPanel/components/EgenVirksomhetPanel.tsx","../../../../packages/papirsoknad-ui-komponenter/src/virksomhetPanel/VirksomhetPapirsoknadIndex.tsx","../../../../packages/papirsoknad-ui-komponenter/src/dekningsgradFp/DekningsgradIndex.tsx","../../../../packages/papirsoknad-ui-komponenter/src/bekreftelseFp/BekreftelsePanel.tsx","../../../../packages/papirsoknad-ui-komponenter/src/permisjonFp/components/PermisjonRettigheterPanel.tsx","../../../../packages/papirsoknad-ui-komponenter/src/permisjonFp/components/RenderPermisjonPeriodeFieldArray.tsx","../../../../packages/papirsoknad-ui-komponenter/src/permisjonFp/components/RenderUtsettelsePeriodeFieldArray.tsx","../../../../packages/papirsoknad-ui-komponenter/src/permisjonFp/components/PermisjonUtsettelsePanel.tsx","../../../../node_modules/moment/moment.js","../../../../packages/papirsoknad-ui-komponenter/src/permisjonFp/components/RenderGraderingPeriodeFieldArray.tsx","../../../../packages/papirsoknad-ui-komponenter/src/permisjonFp/components/PermisjonGraderingPanel.tsx","../../../../packages/papirsoknad-ui-komponenter/src/permisjonFp/components/RenderOverforingAvKvoterFieldArray.tsx","../../../../packages/papirsoknad-ui-komponenter/src/permisjonFp/components/PermisjonOverforingAvKvoterPanel.tsx","../../../../packages/papirsoknad-ui-komponenter/src/permisjonFp/components/RenderOppholdPeriodeFieldArray.tsx","../../../../packages/papirsoknad-ui-komponenter/src/permisjonFp/components/PermisjonOppholdPanel.tsx","../../../../packages/papirsoknad-ui-komponenter/src/permisjonFp/components/PermisjonPanel.tsx","../../../../packages/papirsoknad-ui-komponenter/src/permisjonFp/PermisjonIndex.tsx","../../../../packages/papirsoknad-ui-komponenter/src/felles/SoknadData.tsx","../../../../packages/papirsoknad-ui-komponenter/src/terminOgFodselSvp/TerminFodselSvpPanel.tsx","../../../../packages/papirsoknad-ui-komponenter/src/tilretteleggingSvp/BehovForTilretteleggingFieldArray.tsx","../../../../packages/papirsoknad-ui-komponenter/src/tilretteleggingSvp/TilretteleggingForArbeidsgiverFieldArray.tsx","../../../../packages/papirsoknad-ui-komponenter/src/tilretteleggingSvp/BehovForTilretteleggingPanel.tsx","../../../../packages/papirsoknad/src/engangsstonad/components/RegistreringAdopsjonOgOmsorgGrid.tsx","../../../../packages/papirsoknad/src/engangsstonad/components/RegistreringFodselGrid.tsx","../../../../packages/papirsoknad/src/engangsstonad/components/EngangsstonadForm.tsx","../../../../packages/papirsoknad/src/engangsstonad/EngangsstonadPapirsoknadIndex.tsx","../../../../packages/papirsoknad/src/foreldrepenger/components/ForeldrepengerForm.tsx","../../../../packages/papirsoknad/src/foreldrepenger/ForeldrepengerPapirsoknadIndex.tsx","../../../../packages/papirsoknad/src/svangerskapspenger/components/SvangerskapspengerForm.tsx","../../../../packages/papirsoknad/src/svangerskapspenger/SvangerskapspengerPapirsoknadIndex.tsx","../../../../packages/papirsoknad/src/SoknadTypePickerForm.tsx","../../../../packages/papirsoknad/src/RegistrerPapirsoknadPanel.tsx","../../../../packages/papirsoknad/src/modal/SoknadRegistrertModal.tsx","../../src/behandling/papirsoknad/RegistrerPapirsoknad.tsx","../../src/behandling/papirsoknad/BehandlingPapirsoknadIndex.tsx"],"sourcesContent":["const arbeidskategori = {\n  FISKER: 'FISKER',\n  ARBEIDSTAKER: 'ARBEIDSTAKER',\n  SELVSTENDIG_NAERINGSDRIVENDE: 'SELVSTENDIG_NÆRINGSDRIVENDE',\n  KOMBINASJON_ARBEIDSTAKER_OG_SELVSTENDIG_NAERINGSDRIVENDE: 'KOMBINASJON_ARBEIDSTAKER_OG_SELVSTENDIG_NÆRINGSDRIVENDE',\n  SJOMANN: 'SJØMANN',\n  JORDBRUKER: 'JORDBRUKER',\n  DAGPENGER: 'DAGPENGER',\n  INAKTIV: 'INAKTIV',\n  KOMBINASJON_ARBEIDSTAKER_OG_JORDBRUKER: 'KOMBINASJON_ARBEIDSTAKER_OG_JORDBRUKER',\n  KOMBINASJON_ARBEIDSTAKER_OG_FISKER: 'KOMBINASJON_ARBEIDSTAKER_OG_FISKER',\n  FRILANSER: 'FRILANSER',\n  KOMBINASJON_ARBEIDSTAKER_OG_FRILANSER: 'KOMBINASJON_ARBEIDSTAKER_OG_FRILANSER',\n  KOMBINASJON_ARBEIDSTAKER_OG_DAGPENGER: 'KOMBINASJON_ARBEIDSTAKER_OG_DAGPENGER',\n  DAGMAMMA: 'DAGMAMMA',\n  ANNET: 'ANNET',\n};\n\nexport default arbeidskategori;\n","const arbeidType = {\n  LONN_UNDER_UTDANNING: 'LØNN_UNDER_UTDANNING',\n  UTENLANDSK_ARBEIDSFORHOLD: 'UTENLANDSK_ARBEIDSFORHOLD',\n  FRILANSER: 'FRILANSER',\n  MILITÆR_ELLER_SIVILTJENESTE: 'MILITÆR_ELLER_SIVILTJENESTE',\n};\n\nexport default arbeidType;\n","const foreldreType = {\n  MOR: 'MOR',\n  FAR: 'FAR',\n  MEDMOR: 'MEDMOR',\n  MEDFAR: 'MEDFAR',\n  TREDJE_PART: 'TREDJE_PART',\n};\n\nexport default foreldreType;\n","export const kanIkkeOppgiAnnenForelderArsaker = {\n  UKJENT_FORELDER: 'UKJENT_FORELDER',\n  IKKE_NORSK_FNR: 'IKKE_NORSK_FNR',\n};\n\nexport default kanIkkeOppgiAnnenForelderArsaker;\n","const naringsvirksomhetType = {\n  FISKE: 'FISKE',\n  FRILANSER: 'FRILANSER',\n  DAGMAMMA: 'DAGMAMMA',\n  JORDBRUK_ELLER_SKOGBRUK: 'JORDBRUK_SKOGBRUK',\n  ANNEN: 'ANNEN',\n};\n\nexport default naringsvirksomhetType;\n","const overforingArsak = {\n  INSTITUSJONSOPPHOLD_ANNEN_FORELDER: 'INSTITUSJONSOPPHOLD_ANNEN_FORELDER',\n  SYKDOM_ANNEN_FORELDER: 'SYKDOM_ANNEN_FORELDER',\n  ALENEOMSORG: 'ALENEOMSORG',\n  IKKE_RETT_ANNEN_FORELDER: 'IKKE_RETT_ANNEN_FORELDER',\n  UDEFINERT: '-',\n};\n\nexport default overforingArsak;\n","import React, { FunctionComponent } from 'react';\nimport { useIntl } from 'react-intl';\nimport { UseFormGetValues, useFieldArray, useFormContext } from 'react-hook-form';\nimport { FlexColumn, FlexContainer, FlexRow, VerticalSpacer } from '@navikt/ft-ui-komponenter';\nimport { Datepicker, PeriodFieldArray } from '@navikt/ft-form-hooks';\nimport { required, hasValidDate, dateAfterOrEqual, dateBeforeOrEqual } from '@navikt/ft-form-validators';\n\nimport styles from './renderAndreYtelserPerioderFieldArray.module.css';\n\nexport const ANDRE_YTELSER_NAME_PREFIX = 'andreYtelser';\n\nexport const ANDRE_YTELSER_PERIODE_SUFFIX = 'PERIODER';\n\nexport type FormValues = {\n  periodeFom: string;\n  periodeTom: string;\n};\n\nconst getValue = (\n  getValues: UseFormGetValues<{ [ANDRE_YTELSER_NAME_PREFIX]: FormValues }>,\n  fieldName: string,\n  // @ts-ignore\n): string => getValues(fieldName);\n\ninterface OwnProps {\n  readOnly: boolean;\n  name: string;\n}\n\ninterface StaticFunctions {\n  transformValues: (\n    values: FormValues[],\n    ytelseType: string,\n  ) => {\n    ytelseType: string;\n    periodeFom: string;\n    periodeTom: string;\n  }[];\n}\n\n/**\n * RenderAndreYtelserPerioderFieldArray\n *\n * Viser inputfelter for fra og til dato for perioder for andre ytelser\n */\nconst RenderAndreYtelserPerioderFieldArray: FunctionComponent<OwnProps> & StaticFunctions = ({ readOnly, name }) => {\n  const intl = useIntl();\n\n  const {\n    getValues,\n    control,\n    trigger,\n    formState: { isSubmitted },\n  } = useFormContext<{ [ANDRE_YTELSER_NAME_PREFIX]: FormValues }>();\n  const { fields, remove, append } = useFieldArray({\n    control,\n    // @ts-ignore Usikker på korleis ein fiksar denne (Dynamisk name basert på verdiar fra backend)\n    name: `${ANDRE_YTELSER_NAME_PREFIX}.${name}`,\n  });\n\n  return (\n    <PeriodFieldArray\n      fields={fields}\n      bodyText={intl.formatMessage({ id: 'Registrering.FrilansOppdrag.FieldArray.NyPeriode' })}\n      readOnly={readOnly}\n      append={append}\n      remove={remove}\n    >\n      {(field, index, getRemoveButton) => {\n        const namePart1 = `${ANDRE_YTELSER_NAME_PREFIX}.${name}.${index}`;\n        return (\n          <div key={field.id}>\n            <div className={index !== fields.length - 1 ? styles.notLastRow : ''}>\n              <FlexContainer>\n                <FlexRow>\n                  <FlexColumn>\n                    <Datepicker\n                      name={`${namePart1}.periodeFom`}\n                      label={index === 0 ? intl.formatMessage({ id: 'Registrering.AndreYtelser.periodeFom' }) : ''}\n                      validate={[\n                        required,\n                        hasValidDate,\n                        () => {\n                          const fomVerdi = getValue(getValues, `${namePart1}.periodeFom`);\n                          const tomVerdi = getValue(getValues, `${namePart1}.periodeTom`);\n                          return tomVerdi && fomVerdi ? dateBeforeOrEqual(tomVerdi)(fomVerdi) : null;\n                        },\n                      ]}\n                      onChange={() => (isSubmitted ? trigger() : undefined)}\n                    />\n                  </FlexColumn>\n                  <FlexColumn>\n                    <Datepicker\n                      name={`${namePart1}.periodeTom`}\n                      label={index === 0 ? intl.formatMessage({ id: 'Registrering.AndreYtelser.periodeTom' }) : ''}\n                      validate={[\n                        required,\n                        hasValidDate,\n                        () => {\n                          const fomVerdi = getValue(getValues, `${namePart1}.periodeFom`);\n                          const tomVerdi = getValue(getValues, `${namePart1}.periodeTom`);\n                          return tomVerdi && fomVerdi ? dateAfterOrEqual(fomVerdi)(tomVerdi) : null;\n                        },\n                      ]}\n                      onChange={() => (isSubmitted ? trigger() : undefined)}\n                    />\n                  </FlexColumn>\n                  {getRemoveButton && <FlexColumn>{getRemoveButton()}</FlexColumn>}\n                </FlexRow>\n              </FlexContainer>\n            </div>\n            <VerticalSpacer sixteenPx />\n          </div>\n        );\n      }}\n    </PeriodFieldArray>\n  );\n};\n\nRenderAndreYtelserPerioderFieldArray.transformValues = (values: FormValues[], ytelseType: string): any =>\n  values.map(ytelsePeriode => ({\n    ytelseType,\n    periodeFom: ytelsePeriode.periodeFom,\n    periodeTom: ytelsePeriode.periodeTom,\n  }));\n\nexport default RenderAndreYtelserPerioderFieldArray;\n","import React, { FunctionComponent, useMemo } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Heading } from '@navikt/ds-react';\nimport { CheckboxField } from '@navikt/ft-form-hooks';\nimport { ArrowBox, BorderBox, VerticalSpacer } from '@navikt/ft-ui-komponenter';\nimport { AlleKodeverk, KodeverkMedNavn } from '@navikt/fp-types';\nimport { arbeidType, KodeverkType } from '@navikt/fp-kodeverk';\n\nimport { useFormContext } from 'react-hook-form';\nimport RenderAndreYtelserPerioderFieldArray, {\n  FormValues as PerioderFormValues,\n  ANDRE_YTELSER_PERIODE_SUFFIX,\n  ANDRE_YTELSER_NAME_PREFIX,\n} from './RenderAndreYtelserPerioderFieldArray';\n\nconst removeArbeidstyper = (\n  andreYtelser: KodeverkMedNavn[],\n  kunMiliterEllerSiviltjeneste?: boolean,\n): KodeverkMedNavn[] => {\n  if (kunMiliterEllerSiviltjeneste) {\n    return andreYtelser.filter(ay => ay.kode === arbeidType.MILITÆR_ELLER_SIVILTJENESTE);\n  }\n  return andreYtelser.filter(\n    ay =>\n      ay.kode !== arbeidType.UTENLANDSK_ARBEIDSFORHOLD &&\n      ay.kode !== arbeidType.FRILANSER &&\n      ay.kode !== arbeidType.LONN_UNDER_UTDANNING,\n  );\n};\n\nexport type FormValues = {\n  [ANDRE_YTELSER_NAME_PREFIX]?: {\n    [key: string]: PerioderFormValues[];\n  };\n};\n\ninterface OwnProps {\n  readOnly: boolean;\n  alleKodeverk: AlleKodeverk;\n  kunMiliterEllerSiviltjeneste?: boolean;\n}\n\ninterface StaticFunctions {\n  buildInitialValues: (andreYtelser: KodeverkMedNavn[]) => FormValues;\n  transformValues: (values: FormValues, andreYtelser: KodeverkMedNavn[]) => any;\n}\n\n/**\n * AndreYtelserPanel\n *\n * Komponenten vises som del av skjermbildet for registrering av papirsøknad dersom søknad gjelder foreldrepenger.\n */\nconst AndreYtelserPanel: FunctionComponent<OwnProps> & StaticFunctions = ({\n  readOnly,\n  kunMiliterEllerSiviltjeneste = false,\n  alleKodeverk,\n}) => {\n  const { watch } = useFormContext<{ [ANDRE_YTELSER_NAME_PREFIX]: FormValues }>();\n  const selectedYtelser = watch(ANDRE_YTELSER_NAME_PREFIX);\n\n  const andreYtelser = alleKodeverk[KodeverkType.ARBEID_TYPE];\n\n  const filtrerteArbeidstyper = useMemo(\n    () => removeArbeidstyper(andreYtelser, kunMiliterEllerSiviltjeneste),\n    [kunMiliterEllerSiviltjeneste],\n  );\n\n  return (\n    <BorderBox>\n      <Heading size=\"small\">\n        <FormattedMessage id=\"Registrering.AndreYtelser.Title\" />\n      </Heading>\n      <VerticalSpacer sixteenPx />\n      {filtrerteArbeidstyper.map(ay => {\n        const ytelseFieldName = `${ay.kode}_${ANDRE_YTELSER_PERIODE_SUFFIX}`;\n        return (\n          <React.Fragment key={ay.kode}>\n            <CheckboxField\n              key={ay.kode}\n              name={`${ANDRE_YTELSER_NAME_PREFIX}.${ay.kode}`}\n              label={ay.navn}\n              readOnly={readOnly}\n            />\n            {/* @ts-ignore TODO Er dette korrekt? Burde det vore selectedYtelser[ANDRE_YTELSER_NAME_PREFIX][ay.kode] */}\n            {selectedYtelser && selectedYtelser[ay.kode] && (\n              <>\n                <VerticalSpacer eightPx />\n                <ArrowBox>\n                  <RenderAndreYtelserPerioderFieldArray name={ytelseFieldName} readOnly={readOnly} />\n                </ArrowBox>\n              </>\n            )}\n          </React.Fragment>\n        );\n      })}\n    </BorderBox>\n  );\n};\n\nAndreYtelserPanel.buildInitialValues = (andreYtelser: KodeverkMedNavn[]): FormValues => {\n  const ytelseInitialValues = {} as Record<string, PerioderFormValues[]>;\n  removeArbeidstyper(andreYtelser).forEach(ay => {\n    const ytelsePeriodeFieldName = `${ay.kode}_${ANDRE_YTELSER_PERIODE_SUFFIX}`;\n    ytelseInitialValues[ytelsePeriodeFieldName] = [{} as PerioderFormValues];\n  });\n  return { [ANDRE_YTELSER_NAME_PREFIX]: ytelseInitialValues };\n};\n\nAndreYtelserPanel.transformValues = (values: FormValues, andreYtelser: KodeverkMedNavn[]): any => {\n  const ytelseValues = values[ANDRE_YTELSER_NAME_PREFIX];\n  const newValues = [] as {\n    ytelseType: string;\n    periodeFom: string;\n    periodeTom: string;\n  }[];\n\n  andreYtelser\n    .filter(ay => ytelseValues && ytelseValues[ay.kode])\n    .forEach(ay => {\n      const ytelsePerioderFieldName = `${ay.kode}_${ANDRE_YTELSER_PERIODE_SUFFIX}`;\n      const ytelsePerioder = ytelseValues ? ytelseValues[ytelsePerioderFieldName] : undefined;\n      if (ytelsePerioder) {\n        RenderAndreYtelserPerioderFieldArray.transformValues(ytelsePerioder, ay.kode).forEach(tv => newValues.push(tv));\n      }\n    });\n\n  return newValues;\n};\n\nexport default AndreYtelserPanel;\n","import React, { FunctionComponent } from 'react';\nimport { RawIntlProvider } from 'react-intl';\nimport { createIntl } from '@navikt/ft-utils';\nimport { AlleKodeverk, KodeverkMedNavn } from '@navikt/fp-types';\n\nimport AndreYtelserPanel, { FormValues } from './components/AndreYtelserPanel';\nimport messages from '../../i18n/nb_NO.json';\n\nconst intl = createIntl(messages);\n\ninterface OwnProps {\n  readOnly: boolean;\n  alleKodeverk: AlleKodeverk;\n  kunMiliterEllerSiviltjeneste?: boolean;\n}\n\ninterface StaticFunctions {\n  buildInitialValues: (andreYtelser: KodeverkMedNavn[]) => FormValues;\n  transformValues: (values: FormValues, andreYtelser: KodeverkMedNavn[]) => any;\n}\n\nconst AndreYtelserPapirsoknadIndex: FunctionComponent<OwnProps> & StaticFunctions = ({\n  readOnly,\n  alleKodeverk,\n  kunMiliterEllerSiviltjeneste,\n}) => (\n  <RawIntlProvider value={intl}>\n    <AndreYtelserPanel\n      readOnly={readOnly}\n      alleKodeverk={alleKodeverk}\n      kunMiliterEllerSiviltjeneste={kunMiliterEllerSiviltjeneste}\n    />\n  </RawIntlProvider>\n);\n\nAndreYtelserPapirsoknadIndex.buildInitialValues = andreYtelser => AndreYtelserPanel.buildInitialValues(andreYtelser);\n\nAndreYtelserPapirsoknadIndex.transformValues = (values, andreYtelser) =>\n  AndreYtelserPanel.transformValues(values, andreYtelser);\n\nexport default AndreYtelserPapirsoknadIndex;\n","import React, { FunctionComponent, ReactElement, ReactNode, useMemo } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { Heading } from '@navikt/ds-react';\nimport { CheckboxField, InputField, RadioGroupPanel, SelectField } from '@navikt/ft-form-hooks';\nimport { ArrowBox, BorderBox, VerticalSpacer } from '@navikt/ft-ui-komponenter';\n\nimport { AlleKodeverk, KodeverkMedNavn } from '@navikt/fp-types';\nimport { kanIkkeOppgiAnnenForelderArsak, KodeverkType, landkoder as Landkode } from '@navikt/fp-kodeverk';\nimport {\n  hasValidFodselsnummer,\n  hasValidFodselsnummerFormat,\n  required,\n  sammeFodselsnummerSomSokerMessage,\n} from '@navikt/ft-form-validators';\n\nimport { useFormContext } from 'react-hook-form';\nimport styles from './annenForelderPanel.module.css';\n\nconst ANNEN_FORELDER_NAME_PREFIX = 'annenForelder';\nconst KAN_IKKE_OPPGI_NAME_PREFIX = 'kanIkkeOppgiBegrunnelse';\n\nconst filtrerLandOgLagOptions = (landkoder: KodeverkMedNavn[]): ReactElement[] =>\n  landkoder\n    .filter(({ kode }) => kode !== Landkode.NORGE)\n    .map(({ kode, navn }) => (\n      <option value={kode} key={kode}>\n        {navn}\n      </option>\n    ));\n\ninterface OwnProps {\n  readOnly?: boolean;\n  permisjonRettigheterPanel?: ReactNode;\n  alleKodeverk: AlleKodeverk;\n  fagsakPersonnummer: string;\n}\n\nexport type FormValues = {\n  kanIkkeOppgiAnnenForelder?: boolean;\n  kanIkkeOppgiBegrunnelse: {\n    arsak: string;\n    land: string;\n    utenlandskFoedselsnummer: string;\n  };\n  foedselsnummer?: string;\n};\n\n/*\n * AnnenForelderForm\n *\n * Form som brukes ved registrering av annen forelder.\n */\nconst AnnenForelderPanel: FunctionComponent<OwnProps> = ({\n  readOnly = true,\n  permisjonRettigheterPanel,\n  alleKodeverk,\n  fagsakPersonnummer,\n}) => {\n  const { formatMessage } = useIntl();\n\n  const {\n    watch,\n    trigger,\n    formState: { isSubmitted },\n  } = useFormContext<{ [ANNEN_FORELDER_NAME_PREFIX]: FormValues }>();\n\n  const kanIkkeOppgiAnnenForelder = watch(`${ANNEN_FORELDER_NAME_PREFIX}.kanIkkeOppgiAnnenForelder`);\n  const kanIkkeOppgiBegrunnelse = watch(`${ANNEN_FORELDER_NAME_PREFIX}.${KAN_IKKE_OPPGI_NAME_PREFIX}`);\n\n  const landkoder = alleKodeverk[KodeverkType.LANDKODER];\n  const sorterteLand = useMemo(() => landkoder.slice().sort((a, b) => a.navn.localeCompare(b.navn)), [landkoder]);\n\n  return (\n    <BorderBox>\n      <Heading size=\"small\">\n        <FormattedMessage id=\"Registrering.TheOtherParent.Title\" />\n      </Heading>\n      <VerticalSpacer sixteenPx />\n      <InputField\n        name={`${ANNEN_FORELDER_NAME_PREFIX}.foedselsnummer`}\n        label={formatMessage({ id: 'Registrering.TheOtherParent.Fodselsnummer' })}\n        parse={value => (value ? value.toString().replace(/\\s/g, '') : value)}\n        readOnly={readOnly}\n        className={styles.inputBredde}\n        validate={\n          kanIkkeOppgiAnnenForelder\n            ? []\n            : [\n                required,\n                hasValidFodselsnummerFormat,\n                hasValidFodselsnummer,\n                (foedselsnummer: string) =>\n                  foedselsnummer === fagsakPersonnummer ? sammeFodselsnummerSomSokerMessage() : null,\n              ]\n        }\n        disabled={kanIkkeOppgiAnnenForelder}\n      />\n      <VerticalSpacer sixteenPx />\n      <CheckboxField\n        name={`${ANNEN_FORELDER_NAME_PREFIX}.kanIkkeOppgiAnnenForelder`}\n        label={formatMessage({ id: 'Registrering.TheOtherParent.CannotSpecifyOtherParent' })}\n        readOnly={readOnly}\n        onChange={() => (isSubmitted ? trigger() : undefined)}\n      />\n      {kanIkkeOppgiAnnenForelder === true && (\n        <>\n          <VerticalSpacer eightPx />\n          <ArrowBox>\n            <Heading size=\"small\">\n              {formatMessage({ id: 'Registrering.TheOtherParent.CannotSpecifyOtherParent.Reason.Title' })}\n            </Heading>\n            <RadioGroupPanel\n              name={`${ANNEN_FORELDER_NAME_PREFIX}.${KAN_IKKE_OPPGI_NAME_PREFIX}.arsak`}\n              hideLegend\n              validate={[required]}\n              isReadOnly={readOnly}\n              radios={[\n                {\n                  label: formatMessage({ id: 'Registrering.TheOtherParent.CannotSpecifyOtherParent.Reason.1' }),\n                  value: kanIkkeOppgiAnnenForelderArsak.UKJENT_FORELDER,\n                },\n                {\n                  label: formatMessage({ id: 'Registrering.TheOtherParent.CannotSpecifyOtherParent.Reason.2' }),\n                  value: kanIkkeOppgiAnnenForelderArsak.IKKE_NORSK_FNR,\n                },\n              ]}\n            />\n            {kanIkkeOppgiBegrunnelse?.arsak === kanIkkeOppgiAnnenForelderArsak.IKKE_NORSK_FNR && (\n              <>\n                <VerticalSpacer sixteenPx />\n                <SelectField\n                  name={`${ANNEN_FORELDER_NAME_PREFIX}.${KAN_IKKE_OPPGI_NAME_PREFIX}.land`}\n                  label={formatMessage({ id: 'Registrering.TheOtherParent.CannotSpecifyOtherParent.Land' })}\n                  selectValues={filtrerLandOgLagOptions(sorterteLand)}\n                  validate={[required]}\n                  className={styles.inputBredde}\n                  readOnly={readOnly}\n                />\n                <VerticalSpacer sixteenPx />\n                <InputField\n                  name={`${ANNEN_FORELDER_NAME_PREFIX}.${KAN_IKKE_OPPGI_NAME_PREFIX}.utenlandskFoedselsnummer`}\n                  label={formatMessage({\n                    id: 'Registrering.TheOtherParent.CannotSpecifyOtherParent.UtenlandsFodselsnummer',\n                  })}\n                  validate={[required]}\n                  className={styles.inputBredde}\n                  readOnly={readOnly}\n                />\n              </>\n            )}\n          </ArrowBox>\n        </>\n      )}\n      <VerticalSpacer sixteenPx />\n      {permisjonRettigheterPanel}\n    </BorderBox>\n  );\n};\n\nexport default AnnenForelderPanel;\n","import React, { FunctionComponent, ReactNode } from 'react';\nimport { RawIntlProvider } from 'react-intl';\nimport { createIntl } from '@navikt/ft-utils';\nimport { AlleKodeverk } from '@navikt/fp-types';\n\nimport AnnenForelderPanel from './components/AnnenForelderPanel';\n\nimport messages from '../../i18n/nb_NO.json';\n\nconst intl = createIntl(messages);\n\ninterface OwnProps {\n  readOnly: boolean;\n  alleKodeverk: AlleKodeverk;\n  permisjonRettigheterPanel?: ReactNode;\n  fagsakPersonnummer: string;\n}\n\nconst AnnenForelderPapirsoknadIndex: FunctionComponent<OwnProps> = ({\n  readOnly,\n  alleKodeverk,\n  permisjonRettigheterPanel,\n  fagsakPersonnummer,\n}) => (\n  <RawIntlProvider value={intl}>\n    <AnnenForelderPanel\n      readOnly={readOnly}\n      alleKodeverk={alleKodeverk}\n      permisjonRettigheterPanel={permisjonRettigheterPanel}\n      fagsakPersonnummer={fagsakPersonnummer}\n    />\n  </RawIntlProvider>\n);\n\nexport default AnnenForelderPapirsoknadIndex;\n","import React, { FunctionComponent } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { UseFormGetValues, useFormContext } from 'react-hook-form';\nimport moment from 'moment';\nimport { Alert, Label, Heading } from '@navikt/ds-react';\nimport { ISO_DATE_FORMAT } from '@navikt/ft-utils';\nimport { Datepicker, InputField, RadioGroupPanel } from '@navikt/ft-form-hooks';\nimport { ArrowBox, BorderBox, VerticalSpacer, FlexColumn, FlexContainer, FlexRow } from '@navikt/ft-ui-komponenter';\nimport {\n  dateBeforeOrEqual,\n  dateBeforeOrEqualToToday,\n  hasValidDate,\n  hasValidInteger,\n  maxValue,\n  minValue,\n  required,\n} from '@navikt/ft-form-validators';\n\nconst validateMinValue1 = minValue(1);\nconst validateMaxValue9 = maxValue(9);\n\nexport type FormValues = {\n  termindato?: string;\n  terminbekreftelseDato?: string;\n  antallBarnFraTerminbekreftelse?: number;\n  foedselsDato?: string;\n  antallBarn?: number;\n  erBarnetFodt?: boolean;\n};\n\nconst getToday = (): moment.Moment => moment().startOf('day');\nconst getEarliestTerminDato = (): moment.Moment => getToday().subtract(3, 'weeks');\nconst getLatestTerminbekreftelseDato = (termindato?: string): moment.Moment => {\n  const earliestTerminDato = getEarliestTerminDato();\n  const actualTermindato = termindato ? moment(termindato, ISO_DATE_FORMAT) : undefined;\n  const today = getToday();\n  if (actualTermindato && actualTermindato.isSameOrBefore(today)) {\n    return (actualTermindato.isAfter(earliestTerminDato) ? actualTermindato : earliestTerminDato).subtract(1, 'days');\n  }\n  return today;\n};\n\nconst validateTermin = (getValues: UseFormGetValues<FormValues>) => (terminbekreftelseDato: string) =>\n  dateBeforeOrEqual(getLatestTerminbekreftelseDato(getValues('termindato')))(terminbekreftelseDato);\n\ninterface OwnProps {\n  readOnly: boolean;\n  erForeldrepenger?: boolean;\n}\n\n/*\n * TerminFodselDatoPanel\n *\n * Form som brukes for registrere termin i papir soknad.\n */\nconst TerminFodselDatoPanel: FunctionComponent<OwnProps> = ({ readOnly, erForeldrepenger = false }) => {\n  const intl = useIntl();\n\n  const {\n    watch,\n    getValues,\n    trigger,\n    formState: { isSubmitted },\n  } = useFormContext<FormValues>();\n\n  const erBarnetFodt = watch('erBarnetFodt');\n\n  return (\n    <BorderBox>\n      <Heading size=\"small\">{intl.formatMessage({ id: 'Registrering.TerminOgFodsel' })}</Heading>\n      <VerticalSpacer sixteenPx />\n      <RadioGroupPanel\n        name=\"erBarnetFodt\"\n        label={<FormattedMessage id=\"Registrering.Termin.Fodt\" />}\n        validate={[required]}\n        isReadOnly={readOnly}\n        isHorizontal\n        isTrueOrFalseSelection\n        radios={[\n          {\n            label: <FormattedMessage id=\"Registrering.Fodsel.ErFodt\" />,\n            value: 'true',\n          },\n          {\n            label: <FormattedMessage id=\"Registrering.Fodsel.ErIkkeFodt\" />,\n            value: 'false',\n          },\n        ]}\n      />\n      {erBarnetFodt === false && (\n        <>\n          <VerticalSpacer eightPx />\n          <ArrowBox alignOffset={64}>\n            <FlexContainer>\n              <FlexRow>\n                <FlexColumn>\n                  <Datepicker\n                    name=\"termindato\"\n                    label={intl.formatMessage({ id: 'Registrering.Termindato' })}\n                    isReadOnly={readOnly}\n                    validate={[required, hasValidDate]}\n                    onChange={() => (isSubmitted ? trigger() : undefined)}\n                  />\n                </FlexColumn>\n                <FlexColumn>\n                  <InputField\n                    name=\"antallBarnFraTerminbekreftelse\"\n                    label={intl.formatMessage({ id: 'Registrering.AntallBarn' })}\n                    readOnly={readOnly}\n                    validate={[required, hasValidInteger, validateMinValue1, validateMaxValue9]}\n                  />\n                </FlexColumn>\n              </FlexRow>\n              <VerticalSpacer sixteenPx />\n              <FlexRow>\n                <FlexColumn>\n                  <Datepicker\n                    name=\"terminbekreftelseDato\"\n                    label={intl.formatMessage({ id: 'Registrering.UtstedtDato' })}\n                    isReadOnly={readOnly}\n                    validate={[hasValidDate, validateTermin(getValues)]}\n                  />\n                </FlexColumn>\n              </FlexRow>\n            </FlexContainer>\n          </ArrowBox>\n        </>\n      )}\n      {erBarnetFodt && (\n        <>\n          <VerticalSpacer eightPx />\n          <ArrowBox alignOffset={0}>\n            <FlexContainer>\n              <FlexRow>\n                <FlexColumn>\n                  <Datepicker\n                    name=\"foedselsDato\"\n                    label={intl.formatMessage({ id: 'Registrering.Fodselsdato' })}\n                    isReadOnly={readOnly}\n                    validate={[required, hasValidDate, dateBeforeOrEqualToToday]}\n                  />\n                </FlexColumn>\n                <FlexColumn>\n                  <InputField\n                    name=\"antallBarn\"\n                    label={intl.formatMessage({ id: 'Registrering.AntallBarn' })}\n                    readOnly={readOnly}\n                    validate={[required, hasValidInteger, validateMinValue1, validateMaxValue9]}\n                  />\n                </FlexColumn>\n              </FlexRow>\n              {erForeldrepenger && (\n                <>\n                  <VerticalSpacer sixteenPx />\n                  <Alert size=\"small\" variant=\"info\">\n                    <Label size=\"small\">\n                      <FormattedMessage id=\"Registrering.RettTilPrematuruker\" />\n                    </Label>\n                  </Alert>\n                  <VerticalSpacer sixteenPx />\n                  <FlexRow>\n                    <FlexColumn>\n                      <Datepicker\n                        name=\"termindato\"\n                        label={intl.formatMessage({ id: 'Registrering.Termindato' })}\n                        isReadOnly={readOnly}\n                        validate={[hasValidDate]}\n                      />\n                    </FlexColumn>\n                    <FlexColumn>\n                      <Datepicker\n                        name=\"terminbekreftelseDato\"\n                        label={intl.formatMessage({ id: 'Registrering.UtstedtDato' })}\n                        isReadOnly={readOnly}\n                        validate={[hasValidDate]}\n                      />\n                    </FlexColumn>\n                  </FlexRow>\n                </>\n              )}\n            </FlexContainer>\n          </ArrowBox>\n        </>\n      )}\n    </BorderBox>\n  );\n};\n\nexport default TerminFodselDatoPanel;\n","import React, { FunctionComponent } from 'react';\nimport { RawIntlProvider } from 'react-intl';\nimport { createIntl } from '@navikt/ft-utils';\n\nimport TerminFodselDatoPanel from './components/TerminFodselDatoPanel';\nimport messages from '../../i18n/nb_NO.json';\n\nconst intl = createIntl(messages);\n\ninterface OwnProps {\n  readOnly: boolean;\n  erForeldrepenger?: boolean;\n}\n\nconst FodselPapirsoknadIndex: FunctionComponent<OwnProps> = ({ readOnly, erForeldrepenger }) => (\n  <RawIntlProvider value={intl}>\n    <TerminFodselDatoPanel readOnly={readOnly} erForeldrepenger={erForeldrepenger} />\n  </RawIntlProvider>\n);\n\nexport default FodselPapirsoknadIndex;\n","import React, { FunctionComponent } from 'react';\nimport { useIntl } from 'react-intl';\nimport { UseFormGetValues, useFieldArray, useFormContext } from 'react-hook-form';\nimport { FlexColumn, FlexContainer, FlexRow, VerticalSpacer } from '@navikt/ft-ui-komponenter';\nimport { Datepicker, PeriodFieldArray } from '@navikt/ft-form-hooks';\nimport { required, hasValidDate, dateBeforeOrEqual, dateAfterOrEqual } from '@navikt/ft-form-validators';\n\nimport styles from './frilansPerioderFieldArray.module.css';\n\nconst FRILANS_NAME_PREFIX = 'frilans';\n\nexport type FormValues = {\n  perioder?: {\n    periodeFom: string;\n    periodeTom?: string;\n  }[];\n};\n\nconst getValue = (\n  getValues: UseFormGetValues<{ [FRILANS_NAME_PREFIX]: FormValues }>,\n  fieldName: string,\n  // @ts-ignore\n): string => getValues(fieldName);\n\ninterface OwnProps {\n  readOnly: boolean;\n}\n\n/**\n * FrilansPerioderFieldArray\n *\n * Viser inputfelter for fra og til dato for frilansperioder\n */\nconst FrilansPerioderFieldArray: FunctionComponent<OwnProps> = ({ readOnly }) => {\n  const intl = useIntl();\n\n  const {\n    control,\n    getValues,\n    formState: { isSubmitted },\n    trigger,\n  } = useFormContext<{ [FRILANS_NAME_PREFIX]: FormValues }>();\n  const { fields, remove, append } = useFieldArray({\n    control,\n    name: `${FRILANS_NAME_PREFIX}.perioder`,\n  });\n\n  return (\n    <PeriodFieldArray\n      fields={fields}\n      bodyText={intl.formatMessage({ id: 'Registrering.FrilansOppdrag.FieldArray.NyPeriode' })}\n      readOnly={readOnly}\n      remove={remove}\n      append={append}\n    >\n      {(field, index, getRemoveButton) => {\n        const namePart1 = `${FRILANS_NAME_PREFIX}.perioder.${index}`;\n        return (\n          <div key={field.id} className={index !== fields.length - 1 ? styles.notLastRow : ''}>\n            <FlexContainer>\n              <FlexRow>\n                <FlexColumn>\n                  <Datepicker\n                    name={`${namePart1}.periodeFom`}\n                    label={index === 0 ? intl.formatMessage({ id: 'Registrering.Frilans.periodeFom' }) : ''}\n                    validate={[\n                      required,\n                      hasValidDate,\n                      () => {\n                        const fomVerdi = getValue(getValues, `${namePart1}.periodeFom`);\n                        const tomVerdi = getValue(getValues, `${namePart1}.periodeTom`);\n                        return tomVerdi && fomVerdi ? dateBeforeOrEqual(tomVerdi)(fomVerdi) : null;\n                      },\n                    ]}\n                    onChange={() => (isSubmitted ? trigger() : undefined)}\n                  />\n                </FlexColumn>\n                <FlexColumn>\n                  <Datepicker\n                    name={`${namePart1}.periodeTom`}\n                    label={index === 0 ? intl.formatMessage({ id: 'Registrering.Frilans.periodeTom' }) : ''}\n                    validate={[\n                      required,\n                      hasValidDate,\n                      () => {\n                        const fomVerdi = getValue(getValues, `${namePart1}.periodeFom`);\n                        const tomVerdi = getValue(getValues, `${namePart1}.periodeTom`);\n                        return tomVerdi && fomVerdi ? dateAfterOrEqual(fomVerdi)(tomVerdi) : null;\n                      },\n                    ]}\n                    onChange={() => (isSubmitted ? trigger() : undefined)}\n                  />\n                </FlexColumn>\n                {getRemoveButton && <FlexColumn>{getRemoveButton()}</FlexColumn>}\n              </FlexRow>\n            </FlexContainer>\n            <VerticalSpacer sixteenPx />\n          </div>\n        );\n      }}\n    </PeriodFieldArray>\n  );\n};\n\nexport default FrilansPerioderFieldArray;\n","import React, { FunctionComponent, useMemo } from 'react';\nimport { IntlShape, useIntl } from 'react-intl';\nimport moment from 'moment';\nimport { FlexColumn, FlexContainer, FlexRow, VerticalSpacer } from '@navikt/ft-ui-komponenter';\nimport { ISO_DATE_FORMAT } from '@navikt/ft-utils';\nimport { Datepicker, InputField, PeriodFieldArray } from '@navikt/ft-form-hooks';\nimport { dateAfterOrEqual, dateBeforeOrEqual, hasValidDate, maxLength } from '@navikt/ft-form-validators';\n\nimport { UseFormGetValues, useFieldArray, useFormContext } from 'react-hook-form';\nimport styles from './frilansOppdragForFamilieFieldArray.module.css';\n\nexport const FRILANS_NAME_PREFIX = 'frilans';\n\ntype OppdragPeriode = {\n  fomDato: string;\n  tomDato: string;\n  oppdragsgiver: string;\n};\n\ntype Periode = {\n  periodeFom: string;\n  periodeTom?: string;\n};\n\nexport type FormValues = {\n  oppdragPerioder?: OppdragPeriode[];\n  perioder?: Periode[];\n};\n\nconst getValue = (\n  getValues: UseFormGetValues<{ [FRILANS_NAME_PREFIX]: FormValues }>,\n  fieldName: string,\n  // @ts-ignore\n): string => getValues(fieldName);\n\nconst sortFomDates = (perioder: Periode[] = []) =>\n  perioder\n    .map(p => p.periodeFom)\n    .filter(p => p && p !== '')\n    .sort((periodeFom1, periodeFom2) =>\n      moment(periodeFom1, ISO_DATE_FORMAT).diff(moment(periodeFom2, ISO_DATE_FORMAT)),\n    );\n\nexport const defaultFrilansPeriode: OppdragPeriode = {\n  fomDato: '',\n  tomDato: '',\n  oppdragsgiver: '',\n};\n\nconst maxLength50 = maxLength(50);\n\nconst getValiderAtFomDatoErFørFørstePeriode =\n  (\n    getValues: UseFormGetValues<{\n      frilans: FormValues;\n    }>,\n    namePart1: string,\n    sorterteFomDatoer: string[],\n    intl: IntlShape,\n  ) =>\n  () => {\n    const fomVerdi = getValue(getValues, `${namePart1}.fomDato`);\n    if (sorterteFomDatoer.length > 0 && sorterteFomDatoer[0] && fomVerdi) {\n      const isBefore = moment(sorterteFomDatoer[0]).isSameOrBefore(moment(fomVerdi));\n      if (!isBefore) {\n        return intl.formatMessage({ id: 'Registrering.FrilansOppdrag.FieldArray.BeforeFomValidation' });\n      }\n    }\n    return null;\n  };\n\ninterface OwnProps {\n  readOnly: boolean;\n}\n\n/**\n * FrilansOppdragForFamilieFieldArray\n *\n * Viser inputfelter for fra og til dato for frilansperioder.\n */\nexport const FrilansOppdragForFamilieFieldArray: FunctionComponent<OwnProps> = ({ readOnly }) => {\n  const intl = useIntl();\n\n  const {\n    control,\n    getValues,\n    watch,\n    trigger,\n    formState: { isSubmitted },\n  } = useFormContext<{ [FRILANS_NAME_PREFIX]: FormValues }>();\n  const { fields, remove, append } = useFieldArray({\n    control,\n    name: `${FRILANS_NAME_PREFIX}.oppdragPerioder`,\n  });\n\n  const perioder = watch(`${FRILANS_NAME_PREFIX}.perioder`);\n  const sorterteFomDatoer = useMemo(() => sortFomDates(perioder), [perioder]);\n\n  return (\n    <PeriodFieldArray\n      bodyText={intl.formatMessage({ id: 'Registrering.FrilansOppdrag.FieldArray.NyPeriode' })}\n      fields={fields}\n      emptyPeriodTemplate={defaultFrilansPeriode}\n      readOnly={readOnly}\n      append={append}\n      remove={remove}\n    >\n      {(field, index, getRemoveButton) => {\n        const namePart1 = `${FRILANS_NAME_PREFIX}.oppdragPerioder.${index}`;\n        return (\n          <div key={field.id} className={index !== fields.length - 1 ? styles.notLastRow : ''}>\n            <FlexContainer>\n              <FlexRow>\n                <FlexColumn>\n                  <Datepicker\n                    name={`${namePart1}.fomDato`}\n                    label={intl.formatMessage({ id: 'Registrering.FrilansOppdrag.FieldArray.periodeFom' })}\n                    validate={[\n                      hasValidDate,\n                      getValiderAtFomDatoErFørFørstePeriode(getValues, namePart1, sorterteFomDatoer, intl),\n                      () => {\n                        const fomVerdi = getValue(getValues, `${namePart1}.fomDato`);\n                        const tomVerdi = getValue(getValues, `${namePart1}.tomDato`);\n                        return tomVerdi && fomVerdi ? dateBeforeOrEqual(tomVerdi)(fomVerdi) : null;\n                      },\n                    ]}\n                    onChange={() => (isSubmitted ? trigger() : undefined)}\n                  />\n                </FlexColumn>\n                <FlexColumn>\n                  <Datepicker\n                    name={`${namePart1}.tomDato`}\n                    label={intl.formatMessage({ id: 'Registrering.FrilansOppdrag.FieldArray.periodeTom' })}\n                    validate={[\n                      hasValidDate,\n                      () => {\n                        const fomVerdi = getValue(getValues, `${namePart1}.fomDato`);\n                        const tomVerdi = getValue(getValues, `${namePart1}.tomDato`);\n                        return tomVerdi && fomVerdi ? dateAfterOrEqual(fomVerdi)(tomVerdi) : null;\n                      },\n                    ]}\n                    onChange={() => (isSubmitted ? trigger() : undefined)}\n                  />\n                </FlexColumn>\n                <FlexColumn>\n                  <InputField\n                    name={`${namePart1}.oppdragsgiver`}\n                    validate={[maxLength50]}\n                    label={intl.formatMessage({ id: 'Registrering.FrilansOppdrag.FieldArray.Oppdragsgiver' })}\n                  />\n                </FlexColumn>\n                {getRemoveButton && <FlexColumn>{getRemoveButton()}</FlexColumn>}\n              </FlexRow>\n            </FlexContainer>\n            <VerticalSpacer sixteenPx />\n          </div>\n        );\n      }}\n    </PeriodFieldArray>\n  );\n};\n\nexport default FrilansOppdragForFamilieFieldArray;\n","import React, { FunctionComponent } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Label } from '@navikt/ds-react';\nimport { ArrowBox, VerticalSpacer } from '@navikt/ft-ui-komponenter';\nimport { RadioGroupPanel } from '@navikt/ft-form-hooks';\nimport { required } from '@navikt/ft-form-validators';\n\nimport { useFormContext } from 'react-hook-form';\nimport FrilansOppdragForFamilieFieldArray, {\n  FRILANS_NAME_PREFIX,\n  defaultFrilansPeriode,\n  FormValues as FieldArrayFormValues,\n} from './FrilansOppdragForFamilieFieldArray';\n\nexport type FormValues = {\n  harHattOppdragForFamilie?: boolean;\n} & FieldArrayFormValues;\n\ninterface StaticFunctions {\n  buildInitialValues: () => FormValues;\n}\n\ninterface OwnProps {\n  readOnly: boolean;\n}\n\nconst FrilansOppdragForFamiliePanel: FunctionComponent<OwnProps> & StaticFunctions = ({ readOnly }) => {\n  const { watch } = useFormContext<{ [FRILANS_NAME_PREFIX]: FormValues }>();\n  const harHattOppdragForFamilie = watch(`${FRILANS_NAME_PREFIX}.harHattOppdragForFamilie`);\n\n  return (\n    <>\n      <RadioGroupPanel\n        name={`${FRILANS_NAME_PREFIX}.harHattOppdragForFamilie`}\n        label={<FormattedMessage id=\"Registrering.FrilansOppdrag.HarHattOppdragForFamilie\" />}\n        validate={[required]}\n        isReadOnly={readOnly}\n        isHorizontal\n        isTrueOrFalseSelection\n        radios={[\n          {\n            label: <FormattedMessage id=\"Registrering.FrilansOppdrag.Yes\" />,\n            value: 'true',\n          },\n          {\n            label: <FormattedMessage id=\"Registrering.FrilansOppdrag.No\" />,\n            value: 'false',\n          },\n        ]}\n      />\n      {harHattOppdragForFamilie && (\n        <>\n          <VerticalSpacer eightPx />\n          <ArrowBox>\n            <Label size=\"small\">\n              <FormattedMessage id=\"Registrering.FrilansOppdrag.OppgiPeriode\" />\n            </Label>\n            <VerticalSpacer fourPx />\n            <FrilansOppdragForFamilieFieldArray readOnly={readOnly} />\n          </ArrowBox>\n        </>\n      )}\n    </>\n  );\n};\n\nFrilansOppdragForFamiliePanel.buildInitialValues = (): FormValues => ({\n  oppdragPerioder: [defaultFrilansPeriode],\n  perioder: undefined,\n});\n\nexport default FrilansOppdragForFamiliePanel;\n","import React, { FunctionComponent } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Detail, Heading } from '@navikt/ds-react';\nimport { ArrowBox, BorderBox, VerticalSpacer } from '@navikt/ft-ui-komponenter';\nimport { required } from '@navikt/ft-form-validators';\nimport { RadioGroupPanel } from '@navikt/ft-form-hooks';\n\nimport FrilansPerioderFieldArray, { FormValues as PerioderFormValues } from './FrilansPerioderFieldArray';\nimport FrilansOppdragForFamiliePanel, {\n  FormValues as FormValuesOppdragForFamilie,\n} from './FrilansOppdragForFamiliePanel';\n\nexport const FRILANS_NAME_PREFIX = 'frilans';\n\nexport type FormValues = {\n  harSokerPeriodeMedFrilans?: boolean;\n  erNyoppstartetFrilanser?: boolean;\n  harInntektFraFosterhjem?: boolean;\n} & FormValuesOppdragForFamilie &\n  PerioderFormValues;\n\ninterface OwnProps {\n  readOnly: boolean;\n}\n\ninterface StaticFunctions {\n  buildInitialValues: () => FormValues;\n  transformValues: (formValues: FormValues) => FormValues;\n}\n\nconst FrilansPanel: FunctionComponent<OwnProps> & StaticFunctions = ({ readOnly }) => (\n  <BorderBox>\n    <Heading size=\"small\">\n      <FormattedMessage id=\"Registrering.Frilans.Title\" />\n    </Heading>\n    <VerticalSpacer sixteenPx />\n    <RadioGroupPanel\n      name={`${FRILANS_NAME_PREFIX}.harSokerPeriodeMedFrilans`}\n      label={<FormattedMessage id=\"Registrering.Frilans.HarFrilansvirksomhet\" />}\n      validate={[required]}\n      isReadOnly={readOnly}\n      isTrueOrFalseSelection\n      radios={[\n        {\n          label: <FormattedMessage id=\"Registrering.Frilans.No\" />,\n          value: 'false',\n        },\n        {\n          label: <FormattedMessage id=\"Registrering.Frilans.Yes\" />,\n          value: 'true',\n          element: (\n            <>\n              <VerticalSpacer eightPx />\n              <ArrowBox>\n                <Detail>\n                  <FormattedMessage id=\"Registrering.Frilans.OppgiPeriode\" />\n                </Detail>\n                <VerticalSpacer eightPx />\n                <FrilansPerioderFieldArray readOnly={readOnly} />\n                <VerticalSpacer fourPx />\n                <RadioGroupPanel\n                  name={`${FRILANS_NAME_PREFIX}.erNyoppstartetFrilanser`}\n                  label={<FormattedMessage id=\"Registrering.Frilans.ErNyoppstartedFrilanser\" />}\n                  validate={[required]}\n                  isReadOnly={readOnly}\n                  isHorizontal\n                  isTrueOrFalseSelection\n                  radios={[\n                    {\n                      label: <FormattedMessage id=\"Registrering.Frilans.Yes\" />,\n                      value: 'true',\n                    },\n                    {\n                      label: <FormattedMessage id=\"Registrering.Frilans.No\" />,\n                      value: 'false',\n                    },\n                  ]}\n                />\n                <VerticalSpacer sixteenPx />\n                <RadioGroupPanel\n                  name={`${FRILANS_NAME_PREFIX}.harInntektFraFosterhjem`}\n                  label={<FormattedMessage id=\"Registrering.Frilans.HarInntektFraForsterhjem\" />}\n                  validate={[required]}\n                  isReadOnly={readOnly}\n                  isHorizontal\n                  isTrueOrFalseSelection\n                  radios={[\n                    {\n                      label: <FormattedMessage id=\"Registrering.Frilans.Yes\" />,\n                      value: 'true',\n                    },\n                    {\n                      label: <FormattedMessage id=\"Registrering.Frilans.No\" />,\n                      value: 'false',\n                    },\n                  ]}\n                />\n                <VerticalSpacer sixteenPx />\n                <FrilansOppdragForFamiliePanel readOnly={readOnly} />\n              </ArrowBox>\n            </>\n          ),\n        },\n      ]}\n    />\n  </BorderBox>\n);\n\nFrilansPanel.buildInitialValues = () => ({\n  ...FrilansOppdragForFamiliePanel.buildInitialValues(),\n  perioder: [\n    {\n      periodeFom: '',\n      periodeTom: '',\n    },\n  ],\n});\n\nFrilansPanel.transformValues = formValues =>\n  formValues.harSokerPeriodeMedFrilans\n    ? formValues\n    : {\n        harSokerPeriodeMedFrilans: formValues.harSokerPeriodeMedFrilans,\n      };\n\nexport default FrilansPanel;\n","import React, { FunctionComponent } from 'react';\nimport { RawIntlProvider } from 'react-intl';\nimport { createIntl } from '@navikt/ft-utils';\n\nimport FrilansPanel, { FormValues } from './components/FrilansPanel';\nimport messages from '../../i18n/nb_NO.json';\n\nconst intl = createIntl(messages);\n\ninterface OwnProps {\n  readOnly: boolean;\n}\n\ninterface StaticFunctions {\n  buildInitialValues: () => FormValues;\n  transformValues: (formValues: FormValues) => FormValues;\n}\n\nconst FrilansPapirsoknadIndex: FunctionComponent<OwnProps> & StaticFunctions = ({ readOnly }) => (\n  <RawIntlProvider value={intl}>\n    <FrilansPanel readOnly={readOnly} />\n  </RawIntlProvider>\n);\n\nFrilansPapirsoknadIndex.buildInitialValues = () => FrilansPanel.buildInitialValues();\n\nFrilansPapirsoknadIndex.transformValues = formValues => FrilansPanel.transformValues(formValues);\n\nexport default FrilansPapirsoknadIndex;\n","import React, { FunctionComponent, ReactElement } from 'react';\nimport { useIntl } from 'react-intl';\nimport { maxLength, hasValidDate } from '@navikt/ft-form-validators';\nimport { FlexColumn, FlexContainer, FlexRow, VerticalSpacer } from '@navikt/ft-ui-komponenter';\nimport { Datepicker, InputField, SelectField, PeriodFieldArray } from '@navikt/ft-form-hooks';\nimport { KodeverkType, landkoder as Landkode } from '@navikt/fp-kodeverk';\nimport { AlleKodeverk, KodeverkMedNavn } from '@navikt/fp-types';\n\nimport { useFieldArray, useFormContext } from 'react-hook-form';\nimport styles from './renderInntektsgivendeArbeidFieldArray.module.css';\n\nconst maxLength50 = maxLength(50);\n\nexport const INNTEKTSGIVENDE_ARBEID_FIELD_ARRAY_NAME = 'arbeidsforhold';\n\ntype FormValues = {\n  arbeidsgiver: string;\n  periodeFom: string;\n  periodeTom: string;\n  land: string;\n};\n\nconst defaultInntektsgivendeArbeid: FormValues = {\n  arbeidsgiver: '',\n  periodeFom: '',\n  periodeTom: '',\n  land: '',\n};\n\nconst countrySelectValues = (countryCodes: KodeverkMedNavn[]): ReactElement[] =>\n  countryCodes\n    .filter(({ kode }) => kode !== Landkode.NORGE)\n    .map(({ kode, navn }) => (\n      <option value={kode} key={kode}>\n        {navn}\n      </option>\n    ));\n\ninterface OwnProps {\n  readOnly: boolean;\n  alleKodeverk: AlleKodeverk;\n}\n\n/**\n * RenderInntektsgivendeArbeidFieldArray\n *\n * Viser inputfelter for arbeidsgiver og organisasjonsnummer for registrering av arbeidsforhold.\n */\nconst RenderInntektsgivendeArbeidFieldArray: FunctionComponent<OwnProps> = ({ alleKodeverk, readOnly }) => {\n  const intl = useIntl();\n\n  const { control } = useFormContext<{ [INNTEKTSGIVENDE_ARBEID_FIELD_ARRAY_NAME]: FormValues[] }>();\n  const { fields, remove, append } = useFieldArray({\n    control,\n    name: INNTEKTSGIVENDE_ARBEID_FIELD_ARRAY_NAME,\n  });\n\n  const sortedCountriesByName = alleKodeverk[KodeverkType.LANDKODER]\n    .slice()\n    .sort((a, b) => a.navn.localeCompare(b.navn));\n\n  return (\n    <PeriodFieldArray<FormValues>\n      fields={fields}\n      emptyPeriodTemplate={defaultInntektsgivendeArbeid}\n      bodyText={intl.formatMessage({ id: 'Registrering.InntektsgivendeArbeid.LeggTilArbeidsforhold' })}\n      readOnly={readOnly}\n      remove={remove}\n      append={append}\n    >\n      {(field, index, getRemoveButton) => (\n        <div key={field.id} className={index !== fields.length - 1 ? styles.notLastRow : ''}>\n          <FlexContainer>\n            <FlexRow>\n              <FlexColumn>\n                <InputField\n                  readOnly={readOnly}\n                  name={`${INNTEKTSGIVENDE_ARBEID_FIELD_ARRAY_NAME}.${index}.arbeidsgiver`}\n                  label={\n                    index === 0 ? intl.formatMessage({ id: 'Registrering.InntektsgivendeArbeid.Arbeidsgiver' }) : ''\n                  }\n                  validate={[maxLength50]}\n                  maxLength={99}\n                />\n              </FlexColumn>\n              <FlexColumn>\n                <Datepicker\n                  isReadOnly={readOnly}\n                  name={`${INNTEKTSGIVENDE_ARBEID_FIELD_ARRAY_NAME}.${index}.periodeFom`}\n                  label={index === 0 ? intl.formatMessage({ id: 'Registrering.InntektsgivendeArbeid.periodeFom' }) : ''}\n                  validate={[hasValidDate]}\n                />\n              </FlexColumn>\n              <FlexColumn>\n                <Datepicker\n                  isReadOnly={readOnly}\n                  name={`${INNTEKTSGIVENDE_ARBEID_FIELD_ARRAY_NAME}.${index}.periodeTom`}\n                  label={index === 0 ? intl.formatMessage({ id: 'Registrering.InntektsgivendeArbeid.periodeTom' }) : ''}\n                  validate={[hasValidDate]}\n                />\n              </FlexColumn>\n              <FlexColumn>\n                <SelectField\n                  readOnly={readOnly}\n                  name={`${INNTEKTSGIVENDE_ARBEID_FIELD_ARRAY_NAME}.${index}.land`}\n                  label={index === 0 ? intl.formatMessage({ id: 'Registrering.InntektsgivendeArbeid.Land' }) : ''}\n                  selectValues={countrySelectValues(sortedCountriesByName)}\n                />\n              </FlexColumn>\n              {getRemoveButton && <FlexColumn>{getRemoveButton()}</FlexColumn>}\n            </FlexRow>\n          </FlexContainer>\n          <VerticalSpacer twentyPx />\n        </div>\n      )}\n    </PeriodFieldArray>\n  );\n};\n\nexport default RenderInntektsgivendeArbeidFieldArray;\n","import React, { FunctionComponent } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Detail, Heading } from '@navikt/ds-react';\nimport { BorderBox, VerticalSpacer } from '@navikt/ft-ui-komponenter';\nimport { AlleKodeverk } from '@navikt/fp-types';\n\nimport RenderInntektsgivendeArbeidFieldArray, {\n  INNTEKTSGIVENDE_ARBEID_FIELD_ARRAY_NAME,\n} from './RenderInntektsgivendeArbeidFieldArray';\n\ninterface OwnProps {\n  readOnly: boolean;\n  alleKodeverk: AlleKodeverk;\n}\n\nexport type FormValues = {\n  [INNTEKTSGIVENDE_ARBEID_FIELD_ARRAY_NAME]?: Record<string, any>;\n};\n\ninterface StaticFunctions {\n  buildInitialValues: () => FormValues;\n}\n\n/**\n * InntektsgivendeArbeidPanel\n *\n * Komponenten vises som del av skjermbildet for registrering av papirsøknad dersom søknad gjelder foreldrepenger.\n */\nconst InntektsgivendeArbeidPanel: FunctionComponent<OwnProps> & StaticFunctions = ({ readOnly, alleKodeverk }) => (\n  <BorderBox>\n    <Heading size=\"small\">\n      <FormattedMessage id=\"Registrering.InntektsgivendeArbeid.ArbeidINorge.Title\" />\n    </Heading>\n    <VerticalSpacer eightPx />\n    <Detail>\n      <FormattedMessage id=\"Registrering.InntektsgivendeArbeid.ArbeidINorge.SkalIkkeRegistrereArbeidsforhold\" />\n    </Detail>\n    <VerticalSpacer sixteenPx />\n    <VerticalSpacer sixteenPx />\n    <Detail>\n      <FormattedMessage id=\"Registrering.InntektsgivendeArbeid.ArbeidIUtlandet.Title\" />\n    </Detail>\n    <VerticalSpacer eightPx />\n    <RenderInntektsgivendeArbeidFieldArray readOnly={readOnly} alleKodeverk={alleKodeverk} />\n  </BorderBox>\n);\n\nInntektsgivendeArbeidPanel.buildInitialValues = () => ({\n  [INNTEKTSGIVENDE_ARBEID_FIELD_ARRAY_NAME]: [{}],\n});\n\nexport default InntektsgivendeArbeidPanel;\n","import React, { FunctionComponent } from 'react';\nimport { RawIntlProvider } from 'react-intl';\nimport { createIntl } from '@navikt/ft-utils';\nimport { AlleKodeverk } from '@navikt/fp-types';\n\nimport InntektsgivendeArbeidPanel, { FormValues } from './components/InntektsgivendeArbeidPanel';\nimport messages from '../../i18n/nb_NO.json';\n\nconst intl = createIntl(messages);\n\ninterface OwnProps {\n  readOnly: boolean;\n  alleKodeverk: AlleKodeverk;\n}\n\ninterface StaticFunctions {\n  buildInitialValues: () => FormValues;\n}\n\nconst InntektsgivendeArbeidPapirsoknadIndex: FunctionComponent<OwnProps> & StaticFunctions = ({\n  readOnly,\n  alleKodeverk,\n}) => (\n  <RawIntlProvider value={intl}>\n    <InntektsgivendeArbeidPanel readOnly={readOnly} alleKodeverk={alleKodeverk} />\n  </RawIntlProvider>\n);\n\nInntektsgivendeArbeidPapirsoknadIndex.buildInitialValues = () => InntektsgivendeArbeidPanel.buildInitialValues();\n\nexport default InntektsgivendeArbeidPapirsoknadIndex;\n","import React, { FunctionComponent } from 'react';\nimport { useIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { ExclamationmarkTriangleFillIcon } from '@navikt/aksel-icons';\nimport { Label, BodyShort, Button, Modal } from '@navikt/ds-react';\nimport { FlexColumn, FlexContainer, FlexRow, VerticalSpacer } from '@navikt/ft-ui-komponenter';\n\nimport styles from './lukkPapirsoknadModal.module.css';\n\ninterface OwnProps {\n  showModal: boolean;\n  handleSubmit: () => void;\n  cancelEvent: () => void;\n}\n\n/**\n * LukkPapirSoknadModal\n *\n * Denne modalen vises når saksbehandler velger 'Ikke mulig å fullføre registrering av søknad'\n * og trykker på 'Lagre og start behandling'. Ved å trykke på OK blir saken sendt til behandling av avslag.\n */\nconst LukkPapirSoknadModal: FunctionComponent<OwnProps> = ({ showModal, handleSubmit, cancelEvent }) => {\n  const intl = useIntl();\n  return (\n    <Modal\n      open={showModal}\n      aria-label={intl.formatMessage({ id: 'ModalLukkPapirSoknad.ModalDescription' })}\n      onClose={cancelEvent}\n    >\n      <Modal.Body>\n        <FlexContainer>\n          <FlexRow>\n            <FlexColumn>\n              <ExclamationmarkTriangleFillIcon\n                className={styles.image}\n                title={intl.formatMessage({ id: 'ModalLukkPapirSoknad.Avslutt' })}\n              />\n            </FlexColumn>\n            <FlexColumn>\n              <Label size=\"small\">{intl.formatMessage({ id: 'ModalLukkPapirSoknad.AvslutterRegistrering' })}</Label>\n              <VerticalSpacer fourPx />\n              <BodyShort size=\"small\">{intl.formatMessage({ id: 'ModalLukkPapirSoknad.BekreftAvslag' })}</BodyShort>\n            </FlexColumn>\n          </FlexRow>\n        </FlexContainer>\n      </Modal.Body>\n      <Modal.Footer>\n        <Link to=\"/\">\n          <Button size=\"small\" variant=\"primary\" onClick={() => handleSubmit()} type=\"button\">\n            {intl.formatMessage({ id: 'ModalLukkPapirSoknad.Ok' })}\n          </Button>\n        </Link>\n        <Button size=\"small\" variant=\"secondary\" onClick={cancelEvent} type=\"button\">\n          {intl.formatMessage({ id: 'ModalLukkPapirSoknad.Avbryt' })}\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default LukkPapirSoknadModal;\n","import React, { FunctionComponent, useCallback, useState } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { Button, Detail } from '@navikt/ds-react';\nimport { CheckboxField, TextAreaField } from '@navikt/ft-form-hooks';\nimport { ariaCheck, hasValidText, maxLength } from '@navikt/ft-form-validators';\nimport { BorderBox, FlexColumn, FlexContainer, FlexRow, VerticalSpacer } from '@navikt/ft-ui-komponenter';\n\nimport { useFormContext } from 'react-hook-form';\nimport LukkPapirsoknadModal from './LukkPapirsoknadModal';\n\nimport styles from './lagreSoknadPanel.module.css';\n\nconst maxLength1500 = maxLength(1500);\n\ntype FormValues = {\n  kommentarEndring: string;\n  registrerVerge: boolean;\n  ufullstendigSoeknad: boolean;\n};\n\ninterface OwnProps {\n  onSubmitUfullstendigsoknad: () => void;\n  readOnly?: boolean;\n  submitting: boolean;\n}\n\nconst LagreSoknadPanel: FunctionComponent<OwnProps> = ({ submitting, onSubmitUfullstendigsoknad, readOnly = true }) => {\n  const intl = useIntl();\n\n  const [showLukkSoknadModal, setShowLukkSoknadModal] = useState(false);\n\n  const { watch } = useFormContext<FormValues>();\n  const ufullstendigSoeknad = watch('ufullstendigSoeknad') || false;\n\n  const toggleLukkPapirsoknadModal = useCallback(() => {\n    setShowLukkSoknadModal(!showLukkSoknadModal);\n  }, [setShowLukkSoknadModal, showLukkSoknadModal]);\n\n  return (\n    <BorderBox>\n      <FlexContainer>\n        <FlexRow>\n          <FlexColumn className={styles.fullWidth}>\n            <Detail>{intl.formatMessage({ id: 'Registrering.SaveApplication.Title' })}</Detail>\n            <VerticalSpacer sixteenPx />\n            <FlexRow>\n              <FlexColumn className={styles.halfWidth}>\n                <TextAreaField\n                  name=\"kommentarEndring\"\n                  label={intl.formatMessage({ id: 'Registrering.SaveApplication.Description' })}\n                  maxLength={1500}\n                  validate={[maxLength1500, hasValidText]}\n                  readOnly={readOnly}\n                />\n              </FlexColumn>\n              <FlexColumn>\n                <CheckboxField\n                  name=\"registrerVerge\"\n                  label={intl.formatMessage({ id: 'Registrering.Verge' })}\n                  readOnly={readOnly}\n                />\n                <CheckboxField\n                  name=\"ufullstendigSoeknad\"\n                  label={intl.formatMessage({ id: 'Registrering.SaveApplication.OpplysningspliktErIkkeOverholdt' })}\n                  readOnly={readOnly}\n                />\n              </FlexColumn>\n            </FlexRow>\n            <VerticalSpacer sixteenPx />\n            <FlexRow>\n              <FlexColumn className=\"justifyItemsToFlexEnd\">\n                {!ufullstendigSoeknad && (\n                  <Button\n                    id=\"saveButton\"\n                    size=\"small\"\n                    variant=\"primary\"\n                    loading={submitting}\n                    disabled={readOnly || submitting}\n                    onClick={ariaCheck}\n                  >\n                    <FormattedMessage id=\"Registrering.SaveApplication.SaveButton\" />\n                  </Button>\n                )}\n                {ufullstendigSoeknad && (\n                  <Button\n                    id=\"endButton\"\n                    onClick={toggleLukkPapirsoknadModal}\n                    size=\"small\"\n                    variant=\"primary\"\n                    loading={submitting}\n                    disabled={readOnly || submitting}\n                    type=\"button\"\n                  >\n                    <FormattedMessage id=\"Registrering.SaveApplication.EndButton\" />\n                  </Button>\n                )}\n              </FlexColumn>\n            </FlexRow>\n            <LukkPapirsoknadModal\n              handleSubmit={onSubmitUfullstendigsoknad}\n              showModal={showLukkSoknadModal}\n              cancelEvent={toggleLukkPapirsoknadModal}\n            />\n          </FlexColumn>\n        </FlexRow>\n      </FlexContainer>\n    </BorderBox>\n  );\n};\n\nexport default LagreSoknadPanel;\n","import React, { FunctionComponent } from 'react';\nimport { RawIntlProvider } from 'react-intl';\nimport { createIntl } from '@navikt/ft-utils';\n\nimport LagreSoknadPanel from './components/LagreSoknadPanel';\nimport messages from '../../i18n/nb_NO.json';\n\nconst intl = createIntl(messages);\n\ninterface OwnProps {\n  readOnly: boolean;\n  onSubmitUfullstendigsoknad: () => Promise<any>;\n  submitting: boolean;\n}\n\nconst LagreSoknadPapirsoknadIndex: FunctionComponent<OwnProps> = ({\n  readOnly,\n  onSubmitUfullstendigsoknad,\n  submitting,\n}) => (\n  <RawIntlProvider value={intl}>\n    <LagreSoknadPanel\n      readOnly={readOnly}\n      onSubmitUfullstendigsoknad={onSubmitUfullstendigsoknad}\n      submitting={submitting}\n    />\n  </RawIntlProvider>\n);\n\nexport default LagreSoknadPapirsoknadIndex;\n","import React, { FunctionComponent } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Heading } from '@navikt/ds-react';\nimport { Datepicker } from '@navikt/ft-form-hooks';\nimport { BorderBox, VerticalSpacer } from '@navikt/ft-ui-komponenter';\nimport { dateBeforeOrEqualToToday, hasValidDate, required } from '@navikt/ft-form-validators';\n\nexport type FormValues = {\n  mottattDato?: string;\n};\n\ninterface OwnProps {\n  readOnly: boolean;\n}\n\n/**\n * MottattDatoPanel\n *\n * Komponenten vises som del av skjermbildet for registrering av papirsøknad.\n * Komponenten har inputfelter og må derfor rendres som etterkommer av form-komponent.\n */\nconst MottattDatoPanel: FunctionComponent<OwnProps> = ({ readOnly }) => (\n  <BorderBox>\n    <Heading size=\"small\">\n      <FormattedMessage key=\"regDatoTittel\" id=\"Registrering.Omsoknaden.MottattDato\" />\n    </Heading>\n    <VerticalSpacer sixteenPx />\n    <Datepicker\n      name=\"mottattDato\"\n      label={<FormattedMessage key=\"regDatoUnder\" id=\"Registrering.Omsoknaden.MottattDato\" />}\n      validate={[required, hasValidDate, dateBeforeOrEqualToToday]}\n      isReadOnly={readOnly}\n    />\n  </BorderBox>\n);\n\nexport default MottattDatoPanel;\n","import React, { FunctionComponent } from 'react';\nimport { RawIntlProvider } from 'react-intl';\n\nimport { createIntl } from '@navikt/ft-utils';\n\nimport MottattDatoPanel from './components/MottattDatoPanel';\nimport messages from '../../i18n/nb_NO.json';\n\nconst intl = createIntl(messages);\n\ninterface OwnProps {\n  readOnly: boolean;\n}\n\nconst MottattDatoPapirsoknadIndex: FunctionComponent<OwnProps> = ({ readOnly }) => (\n  <RawIntlProvider value={intl}>\n    <MottattDatoPanel readOnly={readOnly} />\n  </RawIntlProvider>\n);\n\nexport default MottattDatoPapirsoknadIndex;\n","import React, { FunctionComponent, useEffect } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { Heading } from '@navikt/ds-react';\nimport { BorderBox, FlexColumn, FlexContainer, FlexRow, VerticalSpacer } from '@navikt/ft-ui-komponenter';\nimport {\n  dateBeforeOrEqualToToday,\n  hasValidDate,\n  hasValidInteger,\n  isDatesEqual,\n  maxValue,\n  minValue,\n  required,\n} from '@navikt/ft-form-validators';\nimport { Datepicker, InputField, RadioGroupPanel } from '@navikt/ft-form-hooks';\n\nimport { familieHendelseType as fht } from '@navikt/fp-kodeverk';\n\nimport { useFieldArray, useFormContext } from 'react-hook-form';\nimport styles from './omsorgOgAdopsjonPanel.module.css';\n\nconst MAX_ANTALL_BARN = 10;\n\nconst minAntall = minValue(1);\nconst maxAntall = maxValue(10);\n\nconst OMSORG_NAME_PREFIX = 'omsorg';\n\nexport type FormValues = {\n  omsorgsovertakelsesdato?: string;\n  antallBarn?: string;\n  foedselsDato?: { id: number; dato?: string }[];\n};\n\nexport type TransformedFormValues = {\n  omsorgsovertakelsesdato?: string;\n  antallBarn?: string;\n  foedselsDato?: (string | undefined)[];\n};\n\nconst getValideringMotAnnenFødselsdato = (index: number, fodselsdato?: string | string[]) => (fDato?: string) => {\n  if (index === 0 && fodselsdato && fDato) {\n    return isDatesEqual(fDato, Array.isArray(fodselsdato) ? fodselsdato[0] : fodselsdato);\n  }\n  return undefined;\n};\n\ninterface OwnProps {\n  familieHendelseType: string;\n  readOnly?: boolean;\n  isForeldrepengerFagsak: boolean;\n  fodselsdatoer?: string | string[];\n}\n\ninterface StaticFunctions {\n  transformValues: (formValues: FormValues) => TransformedFormValues;\n}\n\n/**\n * OmsorgOgAdopsjonPanel\n *\n * Komponenten vises som del av skjermbildet for registrering av papirsøknad ved adopsjon og omsorgsovertakelse.\n * Komponenten har inputfelter og må derfor rendres som etterkommer av form-komponent.\n */\nconst OmsorgOgAdopsjonPanel: FunctionComponent<OwnProps> & StaticFunctions = ({\n  readOnly = true,\n  familieHendelseType,\n  isForeldrepengerFagsak,\n  fodselsdatoer,\n}) => {\n  const { formatMessage } = useIntl();\n\n  const { control, watch } = useFormContext<{ [OMSORG_NAME_PREFIX]: FormValues }>();\n  const { fields, remove, append } = useFieldArray({\n    control,\n    name: `${OMSORG_NAME_PREFIX}.foedselsDato`,\n  });\n\n  const antallBarnState = watch(`${OMSORG_NAME_PREFIX}.antallBarn`);\n  const antallBarn = antallBarnState ? parseInt(antallBarnState, 10) : 0;\n\n  useEffect(() => {\n    if (fields.length > Math.max(antallBarn, 0)) {\n      for (let i = fields.length; i > antallBarn; i -= 1) {\n        remove(i - 1);\n      }\n    } else if (fields.length < Math.min(antallBarn, MAX_ANTALL_BARN)) {\n      for (let i = fields.length; i < antallBarn; i += 1) {\n        append({ id: i, dato: undefined });\n      }\n    }\n  }, [antallBarn]);\n\n  return (\n    <BorderBox>\n      <Heading size=\"small\">\n        <FormattedMessage\n          id={\n            familieHendelseType === fht.ADOPSJON ? 'Registrering.Adopsjon.Title' : 'Registrering.Adopsjon.OmsorgTitle'\n          }\n        />\n      </Heading>\n      <VerticalSpacer sixteenPx />\n      <FlexContainer>\n        {isForeldrepengerFagsak && familieHendelseType === fht.ADOPSJON && (\n          <>\n            <FlexRow>\n              <FlexColumn className={styles.col}>\n                <RadioGroupPanel\n                  name={`${OMSORG_NAME_PREFIX}.erEktefellesBarn`}\n                  label={<FormattedMessage id=\"Registrering.Adopsjon.GjelderEktefellesBarn\" />}\n                  validate={[required]}\n                  isReadOnly={readOnly}\n                  isTrueOrFalseSelection\n                  isHorizontal\n                  radios={[\n                    {\n                      label: formatMessage({ id: 'Registrering.Adopsjon.Ja' }),\n                      value: 'true',\n                    },\n                    {\n                      label: formatMessage({ id: 'Registrering.Adopsjon.Nei' }),\n                      value: 'false',\n                    },\n                  ]}\n                />\n              </FlexColumn>\n            </FlexRow>\n            <VerticalSpacer sixteenPx />\n          </>\n        )}\n        <FlexRow>\n          <FlexColumn>\n            <Datepicker\n              name={`${OMSORG_NAME_PREFIX}.omsorgsovertakelsesdato`}\n              label={formatMessage({\n                id:\n                  familieHendelseType === fht.ADOPSJON\n                    ? 'Registrering.Adopsjon.DatoForOvertakelsenStebarn'\n                    : 'Registrering.Adopsjon.DatoForOvertakelsen',\n              })}\n              isReadOnly={readOnly}\n              validate={familieHendelseType === fht.ADOPSJON ? [required, hasValidDate] : [hasValidDate]}\n            />\n          </FlexColumn>\n        </FlexRow>\n        <VerticalSpacer sixteenPx />\n        <FlexRow>\n          {familieHendelseType === fht.ADOPSJON && (\n            <FlexColumn>\n              <Datepicker\n                name={`${OMSORG_NAME_PREFIX}.ankomstdato`}\n                label={formatMessage({ id: 'Registrering.Adopsjon.Ankomstdato' })}\n                isReadOnly={readOnly}\n                validate={[hasValidDate]}\n              />\n            </FlexColumn>\n          )}\n          <FlexColumn className={styles.col}>\n            <InputField\n              name={`${OMSORG_NAME_PREFIX}.antallBarn`}\n              label={formatMessage({ id: 'Registrering.Adopsjon.AntallBarn' })}\n              readOnly={readOnly}\n              parse={value => {\n                const parsedValue = parseInt(value.toString(), 10);\n                return Number.isNaN(parsedValue) ? value : parsedValue;\n              }}\n              className={styles.barnInput}\n              validate={\n                familieHendelseType === fht.ADOPSJON\n                  ? [required, hasValidInteger, minAntall, maxAntall]\n                  : [\n                      hasValidInteger,\n                      (value: string) => (value ? minAntall(parseInt(value, 10)) : undefined),\n                      (value: string) => (value ? maxAntall(parseInt(value, 10)) : undefined),\n                    ]\n              }\n            />\n          </FlexColumn>\n        </FlexRow>\n        <FlexRow>\n          <FlexColumn className={styles.col}>\n            {fields.map((field, index) => (\n              <React.Fragment key={field.id}>\n                <VerticalSpacer sixteenPx />\n                <Datepicker\n                  name={`${OMSORG_NAME_PREFIX}.foedselsDato.${index}.dato`}\n                  isReadOnly={readOnly}\n                  validate={\n                    familieHendelseType === fht.ADOPSJON\n                      ? [\n                          required,\n                          hasValidDate,\n                          dateBeforeOrEqualToToday,\n                          getValideringMotAnnenFødselsdato(index, fodselsdatoer),\n                        ]\n                      : [hasValidDate, dateBeforeOrEqualToToday, getValideringMotAnnenFødselsdato(index, fodselsdatoer)]\n                  }\n                  label={formatMessage({ id: 'Registrering.Adopsjon.FodselsdatoBarnN' }, { n: index + 1 })}\n                />\n              </React.Fragment>\n            ))}\n          </FlexColumn>\n        </FlexRow>\n      </FlexContainer>\n    </BorderBox>\n  );\n};\n\nOmsorgOgAdopsjonPanel.transformValues = values => ({\n  ...values,\n  foedselsDato:\n    values.foedselsDato && values.foedselsDato.length > 0 ? values.foedselsDato.map(f => f.dato) : undefined,\n});\n\nexport default OmsorgOgAdopsjonPanel;\n","import React, { FunctionComponent } from 'react';\nimport { RawIntlProvider } from 'react-intl';\n\nimport { createIntl } from '@navikt/ft-utils';\n\nimport OmsorgOgAdopsjonPanel, { FormValues, TransformedFormValues } from './components/OmsorgOgAdopsjonPanel';\nimport messages from '../../i18n/nb_NO.json';\n\nconst intl = createIntl(messages);\n\ninterface OwnProps {\n  readOnly: boolean;\n  familieHendelseType: string;\n  isForeldrepengerFagsak: boolean;\n  fodselsdato?: string | string[];\n}\n\ninterface StaticFunctions {\n  transformValues: (formValues: FormValues) => TransformedFormValues;\n}\n\nconst OmsorgOgAdopsjonPapirsoknadIndex: FunctionComponent<OwnProps> & StaticFunctions = ({\n  readOnly,\n  familieHendelseType,\n  isForeldrepengerFagsak,\n  fodselsdato,\n}) => (\n  <RawIntlProvider value={intl}>\n    <OmsorgOgAdopsjonPanel\n      readOnly={readOnly}\n      familieHendelseType={familieHendelseType}\n      isForeldrepengerFagsak={isForeldrepengerFagsak}\n      fodselsdatoer={fodselsdato}\n    />\n  </RawIntlProvider>\n);\n\nOmsorgOgAdopsjonPapirsoknadIndex.transformValues = OmsorgOgAdopsjonPanel.transformValues;\n\nexport default OmsorgOgAdopsjonPapirsoknadIndex;\n","import React, { FunctionComponent, ReactElement, useMemo } from 'react';\nimport classnames from 'classnames/bind';\nimport { useIntl } from 'react-intl';\nimport { Datepicker, SelectField, PeriodFieldArray } from '@navikt/ft-form-hooks';\nimport { landkoder as Landkode } from '@navikt/fp-kodeverk';\nimport { KodeverkMedNavn } from '@navikt/ft-types';\n\nimport {\n  dateAfterOrEqual,\n  dateBeforeOrEqual,\n  dateRangesNotOverlapping,\n  hasValidDate,\n  required,\n} from '@navikt/ft-form-validators';\nimport { UseFormGetValues, useFieldArray, useFormContext } from 'react-hook-form';\nimport moment from 'moment';\nimport { ISO_DATE_FORMAT } from '@navikt/ft-utils';\nimport { AvsnittSkiller, FlexColumn, FlexContainer, FlexRow, VerticalSpacer } from '@navikt/ft-ui-komponenter';\nimport styles from './utenlandsOppholdField.module.css';\n\nconst classNames = classnames.bind(styles);\n\nconst defaultUtenlandsOpphold = {\n  land: '',\n  periodeFom: '',\n  periodeTom: '',\n};\n\nexport type FormValues = {\n  land?: string;\n  periodeFom?: string;\n  periodeTom?: string;\n};\n\ntype Keys = 'tidligereOppholdUtenlands' | 'fremtidigeOppholdUtenlands';\n\nconst getValue = (\n  getValues: UseFormGetValues<{ [K in Keys]: FormValues[] }>,\n  fieldName: string,\n  // @ts-ignore\n): string => getValues(fieldName);\n\nconst getOverlappingValidator = (getValues: UseFormGetValues<{ [K in Keys]: FormValues[] }>, name: Keys) => () => {\n  const perioder = getValues(name);\n  const periodeMap = perioder\n    .filter(({ periodeFom, periodeTom }) => periodeFom && periodeFom !== '' && periodeTom && periodeTom !== '')\n    .map(({ periodeFom, periodeTom }) => [periodeFom, periodeTom]);\n  // @ts-ignore Fiks\n  return periodeMap.length > 0 ? dateRangesNotOverlapping(periodeMap) : undefined;\n};\n\nconst countrySelectValues = (countryCodes: KodeverkMedNavn[]): ReactElement[] =>\n  countryCodes\n    .filter(({ kode }) => kode !== Landkode.NORGE)\n    .map(\n      ({ kode, navn }): ReactElement => (\n        <option value={kode} key={kode}>\n          {navn}\n        </option>\n      ),\n    );\n\nconst getValiderFørEllerEtter =\n  (getValues: UseFormGetValues<{ [K in Keys]: FormValues[] }>, name: string, index: number, sjekkFør: boolean) =>\n  () => {\n    const fomVerdi = getValue(getValues, `${name}.${index}.periodeFom`);\n    const tomVerdi = getValue(getValues, `${name}.${index}.periodeTom`);\n\n    if (!tomVerdi || !fomVerdi) {\n      return null;\n    }\n\n    return sjekkFør ? dateBeforeOrEqual(tomVerdi)(fomVerdi) : dateAfterOrEqual(fomVerdi)(tomVerdi);\n  };\n\ninterface OwnProps {\n  erTidligereOpphold: boolean;\n  mottattDato?: string;\n  countryCodes: KodeverkMedNavn[];\n  readOnly: boolean;\n}\n\n/**\n * UtenlandsOppholdField\n *\n * Komponenten vises som del av skjermbildet for registrering av papirsøknad dersom søknad gjelder engangsstønad.\n * Komponenten lar saksbehandler legge inn informasjon om ett eller flere utenlandsopphold fra søknaden. Komponenten eksponerer valideringsregler\n * som lar seg tilpasse om opphold skal være fram eller tilbake i tid.\n * Komponenten har inputfelter og må derfor rendres som etterkommer av form-komponent.\n */\nconst UtenlandsOppholdField: FunctionComponent<OwnProps> = ({\n  erTidligereOpphold,\n  mottattDato,\n  readOnly,\n  countryCodes,\n}) => {\n  const intl = useIntl();\n\n  const name = erTidligereOpphold ? 'tidligereOppholdUtenlands' : 'fremtidigeOppholdUtenlands';\n\n  const {\n    control,\n    getValues,\n    trigger,\n    formState: { isSubmitted },\n  } = useFormContext<{ [K in Keys]: FormValues[] }>();\n  const { fields, remove, append } = useFieldArray({\n    control,\n    name,\n  });\n\n  const land = useMemo(() => countrySelectValues(countryCodes), [countryCodes]);\n\n  return (\n    <PeriodFieldArray<FormValues>\n      fields={fields}\n      titleText={intl.formatMessage({ id: 'Registrering.RegistreringOpphold.AngiOpphold' })}\n      bodyText={intl.formatMessage({ id: 'Registrering.RegistreringOpphold.Add' })}\n      emptyPeriodTemplate={defaultUtenlandsOpphold}\n      createAddButtonInsteadOfImageLink\n      readOnly={readOnly}\n      remove={remove}\n      append={append}\n    >\n      {(field, index, getRemoveButton) => (\n        <React.Fragment key={field.id}>\n          {index > 0 && (\n            <>\n              <AvsnittSkiller />\n              <VerticalSpacer sixteenPx />\n            </>\n          )}\n          <SelectField\n            name={`${name}.${index}.land`}\n            label={intl.formatMessage({ id: 'Registrering.RegistreringOpphold.Country' })}\n            selectValues={land}\n            className={styles.selectBredde}\n            readOnly={readOnly}\n            validate={[required]}\n          />\n          <VerticalSpacer sixteenPx />\n          <FlexContainer>\n            <FlexRow className={classNames({ datesRowWithRemoveButton: index > 0 })}>\n              <FlexColumn>\n                <Datepicker\n                  name={`${name}.${index}.periodeFom`}\n                  label={intl.formatMessage({ id: 'Registrering.RegistreringOpphold.periodeFom' })}\n                  isReadOnly={readOnly}\n                  validate={[\n                    required,\n                    hasValidDate,\n                    getValiderFørEllerEtter(getValues, name, index, true),\n                    () => {\n                      const fomVerdi = getValue(getValues, `${name}.${index}.periodeFom`);\n                      if (erTidligereOpphold) {\n                        return dateBeforeOrEqual(moment().format(ISO_DATE_FORMAT))(fomVerdi);\n                      }\n                      return mottattDato ? dateAfterOrEqual(mottattDato)(fomVerdi) : undefined;\n                    },\n                    getOverlappingValidator(getValues, name),\n                  ]}\n                  onChange={() => (isSubmitted ? trigger() : undefined)}\n                />\n              </FlexColumn>\n              <FlexColumn>\n                <Datepicker\n                  name={`${name}.${index}.periodeTom`}\n                  label={intl.formatMessage({ id: 'Registrering.RegistreringOpphold.periodeTom' })}\n                  isReadOnly={readOnly}\n                  validate={[\n                    required,\n                    hasValidDate,\n                    getValiderFørEllerEtter(getValues, name, index, false),\n                    () => {\n                      const tomVerdi = getValue(getValues, `${name}.${index}.periodeTom`);\n                      if (erTidligereOpphold) {\n                        return dateBeforeOrEqual(moment().format(ISO_DATE_FORMAT))(tomVerdi);\n                      }\n                      return mottattDato ? dateAfterOrEqual(mottattDato)(tomVerdi) : undefined;\n                    },\n                    getOverlappingValidator(getValues, name),\n                  ]}\n                  onChange={() => (isSubmitted ? trigger() : undefined)}\n                />\n              </FlexColumn>\n              {getRemoveButton && <FlexColumn>{getRemoveButton()}</FlexColumn>}\n            </FlexRow>\n          </FlexContainer>\n          <VerticalSpacer sixteenPx />\n        </React.Fragment>\n      )}\n    </PeriodFieldArray>\n  );\n};\n\nexport default UtenlandsOppholdField;\n","import React, { FunctionComponent, useMemo } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { RadioGroupPanel } from '@navikt/ft-form-hooks';\nimport { ArrowBox, BorderBox, VerticalSpacer } from '@navikt/ft-ui-komponenter';\nimport { KodeverkType } from '@navikt/fp-kodeverk';\nimport { Heading } from '@navikt/ds-react';\nimport { required } from '@navikt/ft-form-validators';\nimport { AlleKodeverk } from '@navikt/fp-types';\nimport { useFormContext } from 'react-hook-form';\nimport UtenlandsOppholdField, { FormValues as FormValuesFieldArray } from './UtenlandsOppholdField';\n\nexport type FormValues = {\n  oppholdINorge?: boolean;\n  harTidligereOppholdUtenlands?: boolean;\n  harFremtidigeOppholdUtenlands?: boolean;\n  tidligereOppholdUtenlands?: FormValuesFieldArray[];\n  fremtidigeOppholdUtenlands?: FormValuesFieldArray[];\n};\n\ninterface OwnProps {\n  erAdopsjon: boolean;\n  readOnly: boolean;\n  alleKodeverk: AlleKodeverk;\n  mottattDato?: string;\n}\n\ninterface StaticFunctions {\n  buildInitialValues: () => FormValues;\n  transformValues: (formValues: FormValues) => FormValues;\n}\n\n/**\n * OppholdINorgePanel\n *\n * Komponenten vises som del av skjermbildet for registrering av papirsøknad dersom søknad gjelder engangsstønad.\n * Inneholder delen av skjemaet som omhandler informasjon om utenlandsopphold.\n * Komponenten har inputfelter og må derfor rendres som etterkommer av form-komponent.\n */\nconst OppholdINorgePanel: FunctionComponent<OwnProps> & StaticFunctions = ({\n  readOnly = true,\n  alleKodeverk,\n  mottattDato,\n  erAdopsjon,\n}) => {\n  const { formatMessage } = useIntl();\n  const sortedCountriesByName = useMemo(\n    () => alleKodeverk[KodeverkType.LANDKODER].slice().sort((a, b) => a.navn.localeCompare(b.navn)),\n    [alleKodeverk],\n  );\n\n  const { watch } = useFormContext<any>();\n  const harTidligereOppholdUtenlands = watch('harTidligereOppholdUtenlands') || false;\n  const harFremtidigeOppholdUtenlands = watch('harFremtidigeOppholdUtenlands') || false;\n\n  return (\n    <BorderBox>\n      <Heading size=\"small\">\n        <FormattedMessage id=\"Registrering.Opphold\" />\n      </Heading>\n      <VerticalSpacer sixteenPx />\n      <RadioGroupPanel\n        name=\"oppholdINorge\"\n        label={\n          <FormattedMessage id={erAdopsjon ? 'Registrering.OppholdVedAdopsjon' : 'Registrering.OppholdVedFodsel'} />\n        }\n        validate={[required]}\n        isReadOnly={readOnly}\n        isTrueOrFalseSelection\n        isHorizontal\n        radios={[\n          {\n            label: formatMessage({ id: 'Registrering.Opphold.Yes' }),\n            value: 'true',\n          },\n          {\n            label: formatMessage({ id: 'Registrering.Opphold.No' }),\n            value: 'false',\n          },\n        ]}\n      />\n      <VerticalSpacer sixteenPx />\n      <RadioGroupPanel\n        name=\"harTidligereOppholdUtenlands\"\n        label={<FormattedMessage id=\"Registrering.OppholdSisteTolv\" />}\n        validate={[required]}\n        isReadOnly={readOnly}\n        isTrueOrFalseSelection\n        isHorizontal\n        radios={[\n          {\n            label: formatMessage({ id: 'Registrering.Opphold.Yes' }),\n            value: 'false',\n          },\n          {\n            label: formatMessage({ id: 'Registrering.Opphold.No' }),\n            value: 'true',\n          },\n        ]}\n      />\n      {harTidligereOppholdUtenlands ? (\n        <>\n          <VerticalSpacer eightPx />\n          <ArrowBox alignOffset={64}>\n            <UtenlandsOppholdField\n              erTidligereOpphold\n              mottattDato={mottattDato}\n              countryCodes={sortedCountriesByName}\n              readOnly={readOnly}\n            />\n          </ArrowBox>\n        </>\n      ) : null}\n      <VerticalSpacer sixteenPx />\n      <RadioGroupPanel\n        name=\"harFremtidigeOppholdUtenlands\"\n        label={<FormattedMessage id=\"Registrering.OppholdNesteTolv\" />}\n        validate={[required]}\n        isReadOnly={readOnly}\n        isTrueOrFalseSelection\n        isHorizontal\n        radios={[\n          {\n            label: formatMessage({ id: 'Registrering.Opphold.Yes' }),\n            value: 'false',\n          },\n          {\n            label: formatMessage({ id: 'Registrering.Opphold.No' }),\n            value: 'true',\n          },\n        ]}\n      />\n      {harFremtidigeOppholdUtenlands ? (\n        <>\n          <VerticalSpacer eightPx />\n          <ArrowBox alignOffset={64}>\n            <UtenlandsOppholdField\n              erTidligereOpphold={false}\n              mottattDato={mottattDato}\n              countryCodes={sortedCountriesByName}\n              readOnly={readOnly}\n            />\n          </ArrowBox>\n        </>\n      ) : null}\n    </BorderBox>\n  );\n};\n\nOppholdINorgePanel.buildInitialValues = (): FormValues => ({\n  tidligereOppholdUtenlands: [{ periodeFom: undefined, periodeTom: undefined }],\n  fremtidigeOppholdUtenlands: [{ periodeFom: undefined, periodeTom: undefined }],\n});\n\nOppholdINorgePanel.transformValues = (formValues: FormValues): FormValues => ({\n  ...formValues,\n  fremtidigeOppholdUtenlands: formValues.harFremtidigeOppholdUtenlands\n    ? formValues.fremtidigeOppholdUtenlands\n    : undefined,\n  tidligereOppholdUtenlands: formValues.harTidligereOppholdUtenlands ? formValues.tidligereOppholdUtenlands : undefined,\n});\n\nexport default OppholdINorgePanel;\n","import React, { FunctionComponent } from 'react';\nimport { RawIntlProvider } from 'react-intl';\nimport { createIntl } from '@navikt/ft-utils';\nimport { AlleKodeverk } from '@navikt/fp-types';\n\nimport OppholdINorgePanel, { FormValues } from './components/OppholdINorgePanel';\n\nimport messages from '../../i18n/nb_NO.json';\n\nconst intl = createIntl(messages);\n\ninterface OwnProps {\n  readOnly: boolean;\n  erAdopsjon: boolean;\n  alleKodeverk: AlleKodeverk;\n  mottattDato?: string;\n}\n\ninterface StaticFunctions {\n  buildInitialValues: () => FormValues;\n  transformValues: (formValues: FormValues) => FormValues;\n}\n\nconst OppholdINorgePapirsoknadIndex: FunctionComponent<OwnProps> & StaticFunctions = ({\n  readOnly,\n  erAdopsjon,\n  alleKodeverk,\n  mottattDato,\n}) => (\n  <RawIntlProvider value={intl}>\n    <OppholdINorgePanel\n      readOnly={readOnly}\n      erAdopsjon={erAdopsjon}\n      alleKodeverk={alleKodeverk}\n      mottattDato={mottattDato}\n    />\n  </RawIntlProvider>\n);\n\nOppholdINorgePapirsoknadIndex.buildInitialValues = OppholdINorgePanel.buildInitialValues;\n\nOppholdINorgePapirsoknadIndex.transformValues = OppholdINorgePanel.transformValues;\n\nexport default OppholdINorgePapirsoknadIndex;\n","import React, { FunctionComponent } from 'react';\nimport { useIntl } from 'react-intl';\nimport { RadioGroupPanel } from '@navikt/ft-form-hooks';\nimport { BorderBox, VerticalSpacer } from '@navikt/ft-ui-komponenter';\nimport { Heading } from '@navikt/ds-react';\n\nimport { familieHendelseType, foreldreType } from '@navikt/fp-kodeverk';\n\nimport SoknadData from '../../felles/SoknadData';\n\nexport const rettighet = {\n  ANNEN_FORELDER_DOED: 'ANNEN_FORELDER_DOED',\n  OVERTA_FORELDREANSVARET_ALENE: 'OVERTA_FORELDREANSVARET_ALENE',\n  MANN_ADOPTERER_ALENE: 'MANN_ADOPTERER_ALENE',\n  IKKE_RELEVANT: 'IKKE_RELEVANT',\n};\n\ninterface OwnProps {\n  soknadData: SoknadData;\n  readOnly?: boolean;\n}\n\n/**\n * RettigheterPanel\n *\n * Komponenten vises som del av skjermbildet for registrering av papirsøknad dersom søknad gjelder engangsstønad og søker er far.\n * Komponenten har inputfelter og må derfor rendres som etterkommer av form-komponent.\n */\nconst RettigheterPanel: FunctionComponent<OwnProps> = ({ readOnly = true, soknadData }) => {\n  const intl = useIntl();\n\n  const options = [\n    {\n      label: intl.formatMessage({ id: 'Registrering.Rettigheter.AnnenForelderDoed' }),\n      value: rettighet.ANNEN_FORELDER_DOED,\n    },\n    {\n      label: intl.formatMessage({ id: 'Registrering.Rettigheter.OvertaForeldreansvaretAlene' }),\n      value: rettighet.OVERTA_FORELDREANSVARET_ALENE,\n    },\n    {\n      label: intl.formatMessage({ id: 'Registrering.Rettigheter.MannAdoptererAlene' }),\n      value: rettighet.MANN_ADOPTERER_ALENE,\n    },\n    {\n      label: intl.formatMessage({ id: 'Registrering.Rettigheter.IkkeRelevant' }),\n      value: rettighet.IKKE_RELEVANT,\n    },\n  ];\n\n  const visMannAdoptererAlene =\n    soknadData.getFamilieHendelseType() !== familieHendelseType.FODSEL &&\n    soknadData.getForeldreType() === foreldreType.FAR;\n  if (!visMannAdoptererAlene) {\n    options.splice(2, 1);\n  }\n\n  return (\n    <BorderBox>\n      <Heading size=\"small\">{intl.formatMessage({ id: 'Registrering.Rettigheter.Title' })}</Heading>\n      <VerticalSpacer sixteenPx />\n      <RadioGroupPanel name=\"rettigheter\" isReadOnly={readOnly} radios={options} />\n    </BorderBox>\n  );\n};\n\nexport default RettigheterPanel;\n","import React, { FunctionComponent } from 'react';\nimport { RawIntlProvider } from 'react-intl';\nimport { createIntl } from '@navikt/ft-utils';\n\nimport RettigheterPanel from './components/RettigheterPanel';\nimport SoknadData from '../felles/SoknadData';\nimport messages from '../../i18n/nb_NO.json';\n\nconst intl = createIntl(messages);\n\ninterface OwnProps {\n  readOnly: boolean;\n  soknadData: SoknadData;\n}\n\nconst RettigheterPapirsoknadIndex: FunctionComponent<OwnProps> = ({ readOnly, soknadData }) => (\n  <RawIntlProvider value={intl}>\n    <RettigheterPanel readOnly={readOnly} soknadData={soknadData} />\n  </RawIntlProvider>\n);\n\nexport default RettigheterPapirsoknadIndex;\n","import React, { FunctionComponent } from 'react';\nimport { useIntl } from 'react-intl';\nimport { BorderBox, VerticalSpacer } from '@navikt/ft-ui-komponenter';\nimport { required } from '@navikt/ft-form-validators';\nimport { RadioGroupPanel } from '@navikt/ft-form-hooks';\nimport { Heading } from '@navikt/ds-react';\n\nconst sprakvalg = {\n  BOKMAL: 'NB',\n  NYNORSK: 'NN',\n  ENGELSK: 'EN',\n};\n\ninterface OwnProps {\n  readOnly: boolean;\n}\n\n/**\n * Komponenten vises som del av skjermbildet for registrering av papirsøknad dersom søknad gjelder engangsstønad.\n */\nconst SprakPanel: FunctionComponent<OwnProps> = ({ readOnly }) => {\n  const intl = useIntl();\n  return (\n    <BorderBox>\n      <Heading size=\"small\">{intl.formatMessage({ id: 'Registrering.Sprak' })}</Heading>\n      <VerticalSpacer sixteenPx />\n      <RadioGroupPanel\n        name=\"språkkode\"\n        validate={[required]}\n        isReadOnly={readOnly}\n        radios={[\n          {\n            label: intl.formatMessage({ id: 'Registrering.Sprak.Bokmal' }),\n            value: sprakvalg.BOKMAL,\n          },\n          {\n            label: intl.formatMessage({ id: 'Registrering.Sprak.Nynorsk' }),\n            value: sprakvalg.NYNORSK,\n          },\n          {\n            label: intl.formatMessage({ id: 'Registrering.Sprak.Engelsk' }),\n            value: sprakvalg.ENGELSK,\n          },\n        ]}\n      />\n    </BorderBox>\n  );\n};\n\nexport default SprakPanel;\n","import React, { FunctionComponent } from 'react';\nimport { RawIntlProvider } from 'react-intl';\n\nimport { createIntl } from '@navikt/ft-utils';\n\nimport SprakPanel from './components/SprakPanel';\nimport messages from '../../i18n/nb_NO.json';\n\nconst intl = createIntl(messages);\n\ninterface OwnProps {\n  readOnly: boolean;\n}\n\nconst SprakPapirsoknadIndex: FunctionComponent<OwnProps> = ({ readOnly }) => (\n  <RawIntlProvider value={intl}>\n    <SprakPanel readOnly={readOnly} />\n  </RawIntlProvider>\n);\n\nexport default SprakPapirsoknadIndex;\n","import React, { FunctionComponent, ReactElement } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { Datepicker, InputField, RadioGroupPanel, SelectField } from '@navikt/ft-form-hooks';\nimport { ArrowBox, FlexColumn, FlexContainer, FlexRow, VerticalSpacer } from '@navikt/ft-ui-komponenter';\nimport {\n  dateBeforeOrEqualToToday,\n  hasValidDate,\n  hasValidInteger,\n  hasValidOrgNumber,\n  required,\n  validPeriodeFomTom,\n} from '@navikt/ft-form-validators';\nimport { KodeverkType } from '@navikt/fp-kodeverk';\nimport { AlleKodeverk, KodeverkMedNavn } from '@navikt/fp-types';\n\nimport { useFormContext } from 'react-hook-form';\nimport styles from './virksomhetIdentifikasjonPanel.module.css';\n\nconst countrySelectValues = (countryCodes: KodeverkMedNavn[]): ReactElement[] =>\n  countryCodes.map(({ kode, navn }) => (\n    <option value={kode} key={kode}>\n      {navn}\n    </option>\n  ));\n\ninterface OwnProps {\n  readOnly?: boolean;\n  alleKodeverk: AlleKodeverk;\n}\n\nexport type FormValues = {\n  fom?: string;\n  tom?: string;\n  navn?: string;\n  virksomhetRegistrertINorge?: boolean;\n  organisasjonsnummer?: string;\n  landJobberFra?: string;\n};\n\n/**\n * VirksomhetIdentifikasjonPanel\n *\n * Komponenten vises som del av skjermbildet for registrering av\n * papirsøknad dersom søknad gjelder foreldrepenger og saksbehandler skal legge til ny virksomhet for søker.\n */\nconst VirksomhetIdentifikasjonPanel: FunctionComponent<OwnProps> = ({ readOnly = true, alleKodeverk }) => {\n  const intl = useIntl();\n  const sortedCountriesByName = alleKodeverk[KodeverkType.LANDKODER]\n    .slice()\n    .sort((a, b) => a.navn.localeCompare(b.navn));\n\n  const { watch, getValues } = useFormContext<FormValues>();\n\n  const virksomhetRegistrertINorge = watch('virksomhetRegistrertINorge');\n\n  return (\n    <>\n      <InputField\n        name=\"navn\"\n        validate={[required]}\n        label={<FormattedMessage id=\"Registrering.VirksomhetIdentifikasjonPanel.Name\" />}\n        className={styles.navnBredde}\n        readOnly={readOnly}\n      />\n      <VerticalSpacer sixteenPx />\n      <RadioGroupPanel\n        name=\"virksomhetRegistrertINorge\"\n        label={<FormattedMessage id=\"Registrering.VirksomhetIdentifikasjonPanel.RegisteredInNorway\" />}\n        validate={[required]}\n        isReadOnly={readOnly}\n        isTrueOrFalseSelection\n        isHorizontal\n        radios={[\n          {\n            label: intl.formatMessage({ id: 'Registrering.VirksomhetIdentifikasjonPanel.Yes' }),\n            value: 'true',\n          },\n          {\n            label: intl.formatMessage({ id: 'Registrering.VirksomhetIdentifikasjonPanel.No' }),\n            value: 'false',\n          },\n        ]}\n      />\n      {virksomhetRegistrertINorge && (\n        <>\n          <VerticalSpacer eightPx />\n          <div className={styles.orgNrBredde}>\n            <ArrowBox>\n              <InputField\n                name=\"organisasjonsnummer\"\n                readOnly={readOnly}\n                validate={[required, hasValidInteger, hasValidOrgNumber]}\n                label={<FormattedMessage id=\"Registrering.VirksomhetIdentifikasjonPanel.OrganizationNumber\" />}\n              />\n            </ArrowBox>\n          </div>\n          <VerticalSpacer sixteenPx />\n        </>\n      )}\n      {!virksomhetRegistrertINorge && virksomhetRegistrertINorge !== undefined && (\n        <>\n          <VerticalSpacer eightPx />\n          <ArrowBox alignOffset={57}>\n            <SelectField\n              name=\"landJobberFra\"\n              className={styles.landBredde}\n              selectValues={countrySelectValues(sortedCountriesByName)}\n              validate={[required]}\n              label={intl.formatMessage({ id: 'Registrering.VirksomhetIdentifikasjonPanel.Country' })}\n            />\n            <VerticalSpacer sixteenPx />\n            <FlexContainer>\n              <FlexRow>\n                <FlexColumn>\n                  <Datepicker\n                    isReadOnly={readOnly}\n                    validate={[required, hasValidDate, dateBeforeOrEqualToToday]}\n                    name=\"fom\"\n                    label={intl.formatMessage({ id: 'Registrering.VirksomhetIdentifikasjonPanel.periodeFom' })}\n                  />\n                </FlexColumn>\n                <FlexColumn>\n                  <Datepicker\n                    isReadOnly={readOnly}\n                    validate={[\n                      hasValidDate,\n                      tomDato => {\n                        const fom = getValues('fom');\n                        return fom ? validPeriodeFomTom(fom, tomDato) : null;\n                      },\n                    ]}\n                    name=\"tom\"\n                    label={intl.formatMessage({ id: 'Registrering.VirksomhetIdentifikasjonPanel.periodeTom' })}\n                  />\n                </FlexColumn>\n              </FlexRow>\n            </FlexContainer>\n          </ArrowBox>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default VirksomhetIdentifikasjonPanel;\n","import React, { FunctionComponent } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { ArrowBox, VerticalSpacer } from '@navikt/ft-ui-komponenter';\nimport { InputField, RadioGroupPanel } from '@navikt/ft-form-hooks';\nimport { required, hasValidInteger, hasValidText } from '@navikt/ft-form-validators';\n\nimport { useFormContext } from 'react-hook-form';\nimport styles from './virksomhetRegnskapPanel.module.css';\n\nexport type FormValues = {\n  harRegnskapsforer?: boolean;\n  navnRegnskapsforer?: string;\n  tlfRegnskapsforer?: string;\n};\n\ninterface OwnProps {\n  readOnly?: boolean;\n}\n\n/**\n * VirksomhetRegnskapPanel\n *\n * Komponenten vises som del av skjermbildet for registrering av papirsøknad dersom\n * søknad gjelder foreldrepenger og saksbehandler skal legge til ny virksomhet for søker.\n */\nconst VirksomhetRegnskapPanel: FunctionComponent<OwnProps> = ({ readOnly = true }) => {\n  const { watch } = useFormContext<FormValues>();\n  const harRegnskapsforer = watch('harRegnskapsforer') || false;\n\n  return (\n    <>\n      <RadioGroupPanel\n        name=\"harRegnskapsforer\"\n        label={<FormattedMessage id=\"Registrering.VirksomhetRegnskapPanel.Accountant\" />}\n        isReadOnly={readOnly}\n        isTrueOrFalseSelection\n        isHorizontal\n        radios={[\n          {\n            label: <FormattedMessage id=\"Registrering.VirksomhetRegnskapPanel.Yes\" />,\n            value: 'true',\n          },\n          {\n            label: <FormattedMessage id=\"Registrering.VirksomhetRegnskapPanel.No\" />,\n            value: 'false',\n          },\n        ]}\n      />\n      {harRegnskapsforer && (\n        <>\n          <VerticalSpacer eightPx />\n          <ArrowBox>\n            <InputField\n              name=\"navnRegnskapsforer\"\n              className={styles.navnBredde}\n              readOnly={readOnly}\n              validate={[required, hasValidText]}\n              label={<FormattedMessage id=\"Registrering.VirksomhetRegnskapPanel.AccountantName\" />}\n            />\n            <VerticalSpacer sixteenPx />\n            <InputField\n              name=\"tlfRegnskapsforer\"\n              readOnly={readOnly}\n              validate={[required, hasValidInteger]}\n              className={styles.tlfBredde}\n              label={<FormattedMessage id=\"Registrering.VirksomhetRegnskapPanel.AccountantPhone\" />}\n            />\n          </ArrowBox>\n          <VerticalSpacer sixteenPx />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default VirksomhetRegnskapPanel;\n","import React, { FunctionComponent, useEffect } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { ErrorMessage, Label } from '@navikt/ds-react';\nimport { ArrowBox, VerticalSpacer } from '@navikt/ft-ui-komponenter';\nimport { hasValidDate, hasValidInteger, required, hasValidText } from '@navikt/ft-form-validators';\nimport { CheckboxField, Datepicker, InputField, RadioGroupPanel, TextAreaField } from '@navikt/ft-form-hooks';\n\nimport { useFormContext } from 'react-hook-form';\nimport styles from './virksomhetStartetEndretPanel.module.css';\n\ntype VirtuellFeilType = {\n  ingenArsakValgt?: boolean;\n};\n\nexport type FormValues = {\n  varigEndretEllerStartetSisteFireAr?: boolean;\n  harVarigEndring?: boolean;\n  varigEndringGjeldendeFom?: string;\n  erNyoppstartet?: boolean;\n  erNyIArbeidslivet?: boolean;\n  nyIArbeidslivetFom?: string;\n  beskrivelseAvEndring?: string;\n  inntekt?: number;\n};\n\ninterface OwnProps {\n  readOnly: boolean;\n}\n\n/**\n * VirksomhetStartetEndretPanel\n *\n * Komponenten vises som del av skjermbildet for registrering av\n * papirsøknad dersom søknad gjelder foreldrepenger og saksbehandler skal legge til ny virksomhet for søker.\n */\nexport const VirksomhetStartetEndretPanel: FunctionComponent<OwnProps> = ({ readOnly }) => {\n  const intl = useIntl();\n  const { watch, setError, clearErrors, formState } = useFormContext<FormValues & VirtuellFeilType>();\n  const varigEndretEllerStartetSisteFireAr = watch('varigEndretEllerStartetSisteFireAr') || false;\n  const harVarigEndring = watch('harVarigEndring') || false;\n  const erNyoppstartet = watch('erNyoppstartet') || false;\n  const erNyIArbeidslivet = watch('erNyIArbeidslivet') || false;\n\n  const isError = !harVarigEndring && !erNyoppstartet && !erNyIArbeidslivet;\n\n  useEffect(() => {\n    if (isError && varigEndretEllerStartetSisteFireAr) {\n      setError('ingenArsakValgt', {\n        type: 'custom',\n        message: intl.formatMessage({ id: 'Registrering.VirksomhetStartetPanel.MaFylleUtEnArsak' }),\n      });\n    }\n    if (!isError || !varigEndretEllerStartetSisteFireAr) {\n      clearErrors('ingenArsakValgt');\n    }\n  }, [isError, varigEndretEllerStartetSisteFireAr]);\n\n  return (\n    <>\n      <VerticalSpacer sixteenPx />\n      <RadioGroupPanel\n        name=\"varigEndretEllerStartetSisteFireAr\"\n        label={<FormattedMessage id=\"Registrering.VirksomhetStartetPanel.NewlyStartedOrChanged\" />}\n        isReadOnly={readOnly}\n        isTrueOrFalseSelection\n        isHorizontal\n        radios={[\n          {\n            label: <FormattedMessage id=\"Registrering.VirksomhetStartetPanel.Yes\" />,\n            value: 'true',\n          },\n          {\n            label: <FormattedMessage id=\"Registrering.VirksomhetStartetPanel.No\" />,\n            value: 'false',\n          },\n        ]}\n      />\n      {varigEndretEllerStartetSisteFireAr && (\n        <div>\n          <VerticalSpacer eightPx />\n          <ArrowBox>\n            <Label size=\"small\">\n              <FormattedMessage id=\"Registrering.VirksomhetStartetPanel.Reason\" />\n            </Label>\n            <VerticalSpacer fourPx />\n            <CheckboxField\n              name=\"harVarigEndring\"\n              label={<FormattedMessage id=\"Registrering.VirksomhetStartetPanel.HarVarigEndring\" />}\n            />\n            <VerticalSpacer fourPx />\n            {harVarigEndring && (\n              <>\n                <VerticalSpacer sixteenPx />\n                <ArrowBox>\n                  <Datepicker\n                    name=\"varigEndringGjeldendeFom\"\n                    isReadOnly={readOnly}\n                    validate={[hasValidDate, required]}\n                    label={<FormattedMessage id=\"Registrering.VirksomhetStartetPanel.GjeldendeFom\" />}\n                  />\n                </ArrowBox>\n              </>\n            )}\n            <CheckboxField\n              name=\"erNyoppstartet\"\n              label={<FormattedMessage id=\"Registrering.VirksomhetStartetPanel.ErNyoppstartet\" />}\n            />\n            <VerticalSpacer fourPx />\n            <CheckboxField\n              name=\"erNyIArbeidslivet\"\n              label={<FormattedMessage id=\"Registrering.VirksomhetNyIArbeidslivetPanel.ErNyIArbeidslivet\" />}\n            />\n            <VerticalSpacer fourPx />\n            {erNyIArbeidslivet && (\n              <>\n                <VerticalSpacer sixteenPx />\n                <ArrowBox>\n                  <Datepicker\n                    name=\"nyIArbeidslivetFom\"\n                    isReadOnly={readOnly}\n                    validate={[hasValidDate, required]}\n                    label={<FormattedMessage id=\"Registrering.VirksomhetStartetPanel.GjeldendeFom\" />}\n                  />\n                </ArrowBox>\n              </>\n            )}\n            {formState.isSubmitted && formState.errors?.ingenArsakValgt?.message && (\n              <ErrorMessage>{formState.errors?.ingenArsakValgt?.message}</ErrorMessage>\n            )}\n            <VerticalSpacer sixteenPx />\n            <TextAreaField\n              name=\"beskrivelseAvEndring\"\n              label={<FormattedMessage id=\"Registrering.VirksomhetStartetPanel.VirksomhetEndretBeskrivelse\" />}\n              validate={[hasValidText]}\n            />\n            <VerticalSpacer sixteenPx />\n            <InputField\n              name=\"inntekt\"\n              label={<FormattedMessage id=\"Registrering.VirksomhetStartetPanel.Inntekt\" />}\n              readOnly={readOnly}\n              validate={[hasValidInteger, required]}\n              className={styles.inntektBredde}\n              parse={value => {\n                const parsedValue = parseInt(value.toString(), 10);\n                return Number.isNaN(parsedValue) ? value : parsedValue;\n              }}\n            />\n          </ArrowBox>\n        </div>\n      )}\n      <VerticalSpacer eightPx />\n    </>\n  );\n};\n\nexport default VirksomhetStartetEndretPanel;\n","import React, { FunctionComponent } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { RadioGroupPanel } from '@navikt/ft-form-hooks';\n\nexport type FormValues = {\n  familieEllerVennerTilknyttetNaringen: boolean;\n};\n\ninterface OwnProps {\n  readOnly?: boolean;\n}\n\n/**\n * VirksomhetRelasjonPanel\n *\n * Presentasjonskomponent. Komponenten vises som del av skjermbildet for registrering av\n * papirsøknad dersom søknad gjelder foreldrepenger og saksbehandler skal legge til ny virksomhet for\n * søker.\n */\nconst VirksomhetRelasjonPanel: FunctionComponent<OwnProps> = ({ readOnly = true }) => (\n  <RadioGroupPanel\n    name=\"familieEllerVennerTilknyttetNaringen\"\n    label={<FormattedMessage id=\"Registrering.VirksomhetRelasjonPanel.Relation\" />}\n    isReadOnly={readOnly}\n    isTrueOrFalseSelection\n    radios={[\n      {\n        label: <FormattedMessage id=\"Registrering.VirksomhetRelasjonPanel.Yes\" />,\n        value: 'true',\n      },\n      {\n        label: <FormattedMessage id=\"Registrering.VirksomhetRelasjonPanel.No\" />,\n        value: 'false',\n      },\n    ]}\n  />\n);\n\nexport default VirksomhetRelasjonPanel;\n","import React, { Fragment, FunctionComponent, useEffect, useMemo } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Label, ErrorMessage } from '@navikt/ds-react';\nimport { VerticalSpacer } from '@navikt/ft-ui-komponenter';\nimport { CheckboxField } from '@navikt/ft-form-hooks';\nimport { AlleKodeverk } from '@navikt/fp-types';\nimport { naringsvirksomhetType, KodeverkType } from '@navikt/fp-kodeverk';\nimport { isRequiredMessage } from '@navikt/ft-form-validators';\nimport { useFormContext } from 'react-hook-form';\n\nconst TYPE_VIRKSOMHET_PREFIX = 'typeVirksomhet';\n\nconst naringsvirksomhetTypeOrder = {\n  [naringsvirksomhetType.DAGMAMMA]: 1,\n  [naringsvirksomhetType.FISKE]: 2,\n  [naringsvirksomhetType.JORDBRUK_ELLER_SKOGBRUK]: 3,\n  [naringsvirksomhetType.ANNEN]: 4,\n};\n\nconst compare = (arg1: number, arg2: number): number => {\n  if (arg1 > arg2) {\n    return 1;\n  }\n  return arg1 < arg2 ? -1 : 0;\n};\n\ntype VirtualErrorField = {\n  notRegisteredInput?: string;\n};\n\nexport type FormValues = {\n  [TYPE_VIRKSOMHET_PREFIX]: Record<string, boolean>;\n};\n\ninterface OwnProps {\n  readOnly: boolean;\n  alleKodeverk: AlleKodeverk;\n}\n\n/**\n * VirksomhetTypeNaringPanel\n *\n * Presentasjonskomponent. Komponenten vises som del av skjermbildet for registrering av\n * papirsøknad dersom søknad gjelder foreldrepenger og saksbehandler skal legge til ny virksomhet for søker.\n */\nconst VirksomhetTypeNaringPanel: FunctionComponent<OwnProps> = ({ readOnly, alleKodeverk }) => {\n  const virksomhetTyper = alleKodeverk[KodeverkType.VIRKSOMHET_TYPE];\n  const naringvirksomhetTyper = useMemo(\n    () =>\n      virksomhetTyper\n        .filter(t => t.kode !== naringsvirksomhetType.FRILANSER)\n        .sort((a, b) => compare(naringsvirksomhetTypeOrder[a.kode], naringsvirksomhetTypeOrder[b.kode])),\n    [],\n  );\n\n  const { watch, setError, formState, clearErrors } = useFormContext<FormValues & VirtualErrorField>();\n\n  const checkboxVerdier = watch(TYPE_VIRKSOMHET_PREFIX);\n\n  const isError = !checkboxVerdier || !Object.values(checkboxVerdier).some(v => v === true);\n\n  useEffect(() => {\n    if (isError) {\n      setError('notRegisteredInput', {\n        type: 'custom',\n        message: isRequiredMessage(),\n      });\n    }\n    if (!isError) {\n      clearErrors('notRegisteredInput');\n    }\n  }, [isError]);\n\n  return (\n    <>\n      <VerticalSpacer eightPx />\n      <Label size=\"small\">\n        <FormattedMessage id=\"Registrering.VirksomhetNaeringTypePanel.Title\" />\n      </Label>\n      <VerticalSpacer fourPx />\n      {naringvirksomhetTyper.map(nv => (\n        <Fragment key={nv.kode}>\n          <VerticalSpacer fourPx />\n          <CheckboxField\n            name={`${TYPE_VIRKSOMHET_PREFIX}.${nv.kode}`}\n            key={nv.kode}\n            label={nv.navn}\n            readOnly={readOnly}\n          />\n        </Fragment>\n      ))}\n      {formState.isSubmitted && formState.errors.notRegisteredInput?.message && (\n        <ErrorMessage>{formState.errors.notRegisteredInput?.message}</ErrorMessage>\n      )}\n    </>\n  );\n};\n\nexport default VirksomhetTypeNaringPanel;\n","import React, { FunctionComponent } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { useForm } from 'react-hook-form';\nimport { Button, Modal, Heading } from '@navikt/ds-react';\nimport { VerticalSpacer } from '@navikt/ft-ui-komponenter';\nimport { Form } from '@navikt/ft-form-hooks';\nimport { AlleKodeverk } from '@navikt/fp-types';\n\nimport VirksomhetIdentifikasjonPanel, { FormValues as IdFormValues } from './VirksomhetIdentifikasjonPanel';\nimport VirksomhetRegnskapPanel, { FormValues as RegnskapFormValues } from './VirksomhetRegnskapPanel';\nimport VirksomhetStartetEndretPanel, { FormValues as StartedEndretFormValues } from './VirksomhetStartetEndretPanel';\nimport VirksomhetRelasjonPanel, { FormValues as RelasjonFormValues } from './VirksomhetRelasjonPanel';\nimport VirksomhetTypeNaringPanel, { FormValues as TypeNaringFormValues } from './VirksomhetTypeNaringPanel';\n\nimport styles from './registrerVirksomhetModalForm.module.css';\n\nexport type FormValues = IdFormValues &\n  RelasjonFormValues &\n  RegnskapFormValues &\n  StartedEndretFormValues &\n  TypeNaringFormValues;\n\ninterface OwnProps {\n  showModal?: boolean;\n  onSubmit: (value: FormValues) => void;\n  closeEvent: () => void;\n  readOnly?: boolean;\n  alleKodeverk: AlleKodeverk;\n  virksomhet?: FormValues;\n}\n\n/**\n * RegistrerVirksomhetModalForm\n *\n * Komponenten vises som del av skjermbildet for registrering av papirsøknad dersom søknad gjelder\n * foreldrepenger og saksbehandler skal legge til ny virksomhet for søker.\n */\nconst RegistrerVirksomhetModalForm: FunctionComponent<OwnProps> = ({\n  showModal = false,\n  readOnly = false,\n  closeEvent,\n  onSubmit,\n  alleKodeverk,\n  virksomhet,\n}) => {\n  const intl = useIntl();\n\n  const formMethods = useForm<FormValues>({\n    defaultValues: virksomhet,\n  });\n\n  return (\n    <Form formMethods={formMethods}>\n      <Modal\n        open={showModal}\n        aria-label={intl.formatMessage({ id: 'Registrering.RegistrerVirksomhetModalForm.ModalDescription' })}\n        onClose={closeEvent}\n      >\n        <Modal.Header>\n          <Heading size=\"small\">\n            <FormattedMessage id=\"Registrering.RegistrerVirksomhetModalForm.Title\" />\n          </Heading>\n        </Modal.Header>\n        <Modal.Body>\n          <VirksomhetIdentifikasjonPanel readOnly={readOnly} alleKodeverk={alleKodeverk} />\n          <VirksomhetTypeNaringPanel readOnly={readOnly} alleKodeverk={alleKodeverk} />\n          <VirksomhetStartetEndretPanel readOnly={readOnly} />\n          <VirksomhetRegnskapPanel readOnly={readOnly} />\n          <VerticalSpacer sixteenPx />\n          <VirksomhetRelasjonPanel readOnly={readOnly} />\n          <VerticalSpacer sixteenPx />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            size=\"small\"\n            variant=\"primary\"\n            onClick={formMethods.handleSubmit(onSubmit)}\n            disabled={readOnly}\n            className={styles.savebutton}\n            type=\"button\"\n          >\n            <FormattedMessage id=\"Registrering.RegistrerVirksomhetModalForm.Save\" />\n          </Button>\n          <Button\n            size=\"small\"\n            variant=\"secondary\"\n            onClick={closeEvent}\n            disabled={readOnly}\n            className={styles.cancelbutton}\n            type=\"button\"\n          >\n            <FormattedMessage id=\"Registrering.RegistrerVirksomhetModalForm.Cancel\" />\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </Form>\n  );\n};\n\nexport default RegistrerVirksomhetModalForm;\n","import React, { FunctionComponent, useCallback, useEffect, useState } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { PlusCircleIcon, XMarkIcon } from '@navikt/aksel-icons';\nimport { Label, BodyShort, Detail, ErrorMessage, Link } from '@navikt/ds-react';\nimport { FlexColumn, FlexContainer, FlexRow, VerticalSpacer } from '@navikt/ft-ui-komponenter';\nimport { AlleKodeverk } from '@navikt/fp-types';\n\nimport { useFieldArray, useFormContext } from 'react-hook-form';\n\nimport RegistrerVirksomhetModalForm, { FormValues as ModalFormValues } from './RegistrerVirksomhetModalForm';\n\nimport styles from './registrerVirksomhetPanel.module.css';\n\nexport const EGEN_VIRKSOMHET_NAME_PREFIX = 'egenVirksomhet';\n\ntype VirtueltValideringsfeilFelt = {\n  notRegisteredInput?: string;\n};\n\nexport type FormValues = {\n  virksomheter: ModalFormValues[];\n};\n\ninterface OwnProps {\n  readOnly?: boolean;\n  alleKodeverk: AlleKodeverk;\n}\n\n/**\n * RegistrererVirksomhetPanel\n *\n * Komponenten vises som del av skjermbildet for registrering av papirsøknad dersom søknad gjelder\n * foreldrepenger og søker har arbeidet i egen virksomhet.\n * Viser registrerte virksomheter samt knapp for å legge til nye virksomheter.\n */\nconst RegistrerVirksomhetPanel: FunctionComponent<OwnProps> = ({ readOnly = false, alleKodeverk }) => {\n  const intl = useIntl();\n  const [virksomhetIndex, setVirksomhetIndex] = useState<number>();\n\n  const { control, setError, formState, clearErrors } = useFormContext<{\n    [EGEN_VIRKSOMHET_NAME_PREFIX]: FormValues & VirtueltValideringsfeilFelt;\n  }>();\n  const { fields, remove, append, update } = useFieldArray({\n    control,\n    name: `${EGEN_VIRKSOMHET_NAME_PREFIX}.virksomheter`,\n  });\n\n  const visModal = useCallback(\n    (index?: number): void => {\n      setVirksomhetIndex(index !== undefined ? index : -1);\n    },\n    [setVirksomhetIndex],\n  );\n\n  const lukkModal = useCallback((): void => {\n    setVirksomhetIndex(undefined);\n  }, [setVirksomhetIndex]);\n\n  const leggTilVirksomhet = useCallback(\n    (virksomhet: ModalFormValues) => {\n      const justertVirksomhet = {\n        ...virksomhet,\n        landJobberFra: virksomhet.virksomhetRegistrertINorge ? 'NOR' : virksomhet.landJobberFra,\n        varigEndringGjeldendeFom: virksomhet.nyIArbeidslivetFom || virksomhet.varigEndringGjeldendeFom,\n      };\n\n      if (virksomhetIndex === -1) {\n        append(justertVirksomhet);\n      } else if (virksomhetIndex !== undefined) {\n        update(virksomhetIndex, justertVirksomhet);\n      }\n\n      lukkModal();\n    },\n    [append, update, lukkModal, virksomhetIndex],\n  );\n\n  useEffect(() => {\n    if (fields.length === 0) {\n      setError(`${EGEN_VIRKSOMHET_NAME_PREFIX}.notRegisteredInput`, {\n        type: 'custom',\n        message: intl.formatMessage({ id: 'Registrering.RegistrerVirksomhetPanel.ArrayMinLength' }),\n      });\n    }\n    if (fields.length > 0) {\n      clearErrors(`${EGEN_VIRKSOMHET_NAME_PREFIX}.notRegisteredInput`);\n    }\n  }, [fields.length]);\n\n  return (\n    <div className={styles.fieldsList}>\n      {fields.length > 0 && (\n        <React.Fragment key={1}>\n          <Label size=\"small\">\n            <FormattedMessage id=\"Registrering.RegistrerVirksomhetPanel.Name\" />\n          </Label>\n          <hr className={styles.divider} />\n          {fields.map((field, index) => (\n            <FlexContainer key={field.id}>\n              <FlexRow>\n                <FlexColumn>\n                  <Link className={styles.customLink} onClick={() => visModal(index)} onKeyDown={() => visModal(index)}>\n                    <BodyShort size=\"small\">{field.navn}</BodyShort>\n                  </Link>\n                </FlexColumn>\n                <FlexColumn>\n                  <XMarkIcon\n                    className={styles.removeButton}\n                    onClick={() => remove(index)}\n                    onKeyDown={() => remove(index)}\n                  />\n                </FlexColumn>\n              </FlexRow>\n              <hr className={styles.divider} />\n              <VerticalSpacer eightPx />\n            </FlexContainer>\n          ))}\n        </React.Fragment>\n      )}\n      <Link onClick={() => visModal()} onKeyDown={e => (e.nativeEvent.code === 'Space' ? visModal() : false)}>\n        <PlusCircleIcon className={styles.addCircleIcon} />\n        <Detail className={styles.imageText}>\n          <FormattedMessage id=\"Registrering.RegistrerVirksomhetPanel.Add\" />\n        </Detail>\n      </Link>\n      {formState.isSubmitted && formState.errors[EGEN_VIRKSOMHET_NAME_PREFIX]?.notRegisteredInput?.message && (\n        <ErrorMessage>{formState.errors[EGEN_VIRKSOMHET_NAME_PREFIX]?.notRegisteredInput?.message}</ErrorMessage>\n      )}\n      {virksomhetIndex !== undefined && (\n        <RegistrerVirksomhetModalForm\n          showModal\n          virksomhet={virksomhetIndex !== -1 && fields.length > virksomhetIndex ? fields[virksomhetIndex] : undefined}\n          onSubmit={leggTilVirksomhet}\n          closeEvent={lukkModal}\n          readOnly={readOnly}\n          alleKodeverk={alleKodeverk}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default RegistrerVirksomhetPanel;\n","import React, { FunctionComponent } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { Heading } from '@navikt/ds-react';\nimport { RadioGroupPanel } from '@navikt/ft-form-hooks';\nimport { BorderBox, VerticalSpacer } from '@navikt/ft-ui-komponenter';\nimport { required } from '@navikt/ft-form-validators';\nimport { AlleKodeverk } from '@navikt/fp-types';\n\nimport { useFormContext } from 'react-hook-form';\nimport RegistrerVirksomhetPanel, {\n  EGEN_VIRKSOMHET_NAME_PREFIX,\n  FormValues as VirksomhetFormValues,\n} from './RegistrerVirksomhetPanel';\n\nexport type FormValues = {\n  harArbeidetIEgenVirksomhet: boolean;\n} & VirksomhetFormValues;\n\ninterface OwnProps {\n  alleKodeverk: AlleKodeverk;\n  readOnly?: boolean;\n}\n\n/**\n * EgenVirksomhetPanel\n *\n * Komponenten vises som del av skjermbildet for registrering av papirsøknad dersom søknad gjelder foreldrepenger.\n * Søker må oppgi om hen har arbdeidet i egen virksomhet.\n */\nconst EgenVirksomhetPanel: FunctionComponent<OwnProps> = ({ readOnly = true, alleKodeverk }) => {\n  const intl = useIntl();\n\n  const { watch } = useFormContext<{ [EGEN_VIRKSOMHET_NAME_PREFIX]: FormValues }>();\n  const harArbeidetIEgenVirksomhet = watch(`${EGEN_VIRKSOMHET_NAME_PREFIX}.harArbeidetIEgenVirksomhet`) || null;\n\n  return (\n    <BorderBox>\n      <Heading size=\"small\">\n        <FormattedMessage id=\"Registrering.EgenVirksomhet.Title\" />\n      </Heading>\n      <VerticalSpacer sixteenPx />\n      <RadioGroupPanel\n        name={`${EGEN_VIRKSOMHET_NAME_PREFIX}.harArbeidetIEgenVirksomhet`}\n        validate={[required]}\n        isReadOnly={readOnly}\n        hideLegend\n        isTrueOrFalseSelection\n        radios={[\n          {\n            label: intl.formatMessage({ id: 'Registrering.EgenVirksomhet.No' }),\n            value: 'false',\n          },\n          {\n            label: intl.formatMessage({ id: 'Registrering.EgenVirksomhet.Yes' }),\n            value: 'true',\n          },\n        ]}\n      />\n      {harArbeidetIEgenVirksomhet && <RegistrerVirksomhetPanel readOnly={readOnly} alleKodeverk={alleKodeverk} />}\n    </BorderBox>\n  );\n};\n\nexport default EgenVirksomhetPanel;\n","import React, { FunctionComponent } from 'react';\nimport { RawIntlProvider } from 'react-intl';\nimport { createIntl } from '@navikt/ft-utils';\nimport { AlleKodeverk } from '@navikt/fp-types';\n\nimport EgenVirksomhetPanel from './components/EgenVirksomhetPanel';\nimport messages from '../../i18n/nb_NO.json';\n\nconst intl = createIntl(messages);\n\ninterface OwnProps {\n  readOnly: boolean;\n  alleKodeverk: AlleKodeverk;\n}\n\nconst VirksomhetPapirsoknadIndex: FunctionComponent<OwnProps> = ({ readOnly, alleKodeverk }) => (\n  <RawIntlProvider value={intl}>\n    <EgenVirksomhetPanel readOnly={readOnly} alleKodeverk={alleKodeverk} />\n  </RawIntlProvider>\n);\n\nexport default VirksomhetPapirsoknadIndex;\n","import React, { FunctionComponent } from 'react';\nimport { RadioGroupPanel } from '@navikt/ft-form-hooks';\nimport { required } from '@navikt/ft-form-validators';\nimport { BorderBox, VerticalSpacer } from '@navikt/ft-ui-komponenter';\nimport { createIntl } from '@navikt/ft-utils';\n\nimport { Heading } from '@navikt/ds-react';\nimport messages from '../../i18n/nb_NO.json';\n\nconst intl = createIntl(messages);\n\nexport type FormValues = {\n  dekningsgrad: string;\n};\n\ninterface OwnProps {\n  readOnly: boolean;\n}\n\n/**\n * Komponenten vises som del av skjermbildet for registrering av papirsøknad dersom søknad gjelder foreldrepenger.\n */\nconst DekningsgradIndex: FunctionComponent<OwnProps> = ({ readOnly }) => (\n  <BorderBox>\n    <Heading size=\"small\">{intl.formatMessage({ id: 'Registrering.Dekningsgrad.Title' })}</Heading>\n    <VerticalSpacer sixteenPx />\n    <RadioGroupPanel\n      name=\"dekningsgrad\"\n      validate={[required]}\n      isReadOnly={readOnly}\n      isHorizontal\n      radios={[\n        {\n          label: intl.formatMessage({ id: 'Registrering.Dekningsgrad.prosent.80' }),\n          value: '80_PROSENT',\n        },\n        {\n          label: intl.formatMessage({ id: 'Registrering.Dekningsgrad.prosent.100' }),\n          value: '100_PROSENT',\n        },\n      ]}\n    />\n  </BorderBox>\n);\n\nexport default DekningsgradIndex;\n","import React, { FunctionComponent } from 'react';\nimport { Detail, Heading } from '@navikt/ds-react';\nimport { RadioGroupPanel } from '@navikt/ft-form-hooks';\nimport { required } from '@navikt/ft-form-validators';\nimport { createIntl } from '@navikt/ft-utils';\nimport { BorderBox, VerticalSpacer } from '@navikt/ft-ui-komponenter';\n\nimport messages from '../../i18n/nb_NO.json';\n\nconst intl = createIntl(messages);\n\ninterface OwnProps {\n  readOnly: boolean;\n  annenForelderInformertRequired?: boolean;\n}\n\n/**\n * Presentasjonskomponent. Komponenten vises som del av skjermbildet for registrering av papirsøknad dersom søknad gjelder foreldrepenger.\n */\nconst BekreftelsePanel: FunctionComponent<OwnProps> = ({ readOnly, annenForelderInformertRequired = false }) => (\n  <BorderBox>\n    <Heading size=\"small\">{intl.formatMessage({ id: 'Registrering.TheOtherParent.Confirmation' })}</Heading>\n    <VerticalSpacer sixteenPx />\n    <Detail>{intl.formatMessage({ id: 'Registrering.TheOtherParent.OtherParentKnowPeriods' })}</Detail>\n    <VerticalSpacer eightPx />\n    <RadioGroupPanel\n      name=\"annenForelderInformert\"\n      validate={annenForelderInformertRequired ? [required] : []}\n      isReadOnly={readOnly}\n      isHorizontal\n      isTrueOrFalseSelection\n      radios={[\n        {\n          label: intl.formatMessage({ id: 'Registrering.TheOtherParent.Yes' }),\n          value: 'true',\n        },\n        {\n          label: intl.formatMessage({ id: 'Registrering.TheOtherParent.No' }),\n          value: 'false',\n        },\n      ]}\n    />\n  </BorderBox>\n);\n\nexport default BekreftelsePanel;\n","import React, { FunctionComponent } from 'react';\nimport { useIntl } from 'react-intl';\n\nimport { RadioGroupPanel } from '@navikt/ft-form-hooks';\nimport { required } from '@navikt/ft-form-validators';\nimport { VerticalSpacer } from '@navikt/ft-ui-komponenter';\nimport { useFormContext } from 'react-hook-form';\n\nconst ANNEN_FORELDER_NAME_PREFIX = 'annenForelder';\n\nexport type FormValues = {\n  sokerHarAleneomsorg: boolean;\n  denAndreForelderenHarRettPaForeldrepenger?: boolean;\n  annenForelderRettEØS?: boolean;\n  morMottarUføretrygd?: boolean;\n};\n\ninterface OwnProps {\n  readOnly: boolean;\n  denAndreForelderenHarRettPaForeldrepenger?: boolean;\n  sokerErMor: boolean;\n}\n\n// TODO Kvifor ligg dette panelet her og ikkje under ANNEN_FORELDER?\n\nconst PermisjonRettigheterPanel: FunctionComponent<OwnProps> = ({ readOnly, sokerErMor }) => {\n  const intl = useIntl();\n\n  const { watch } = useFormContext<{ [ANNEN_FORELDER_NAME_PREFIX]: FormValues }>();\n  const sokerHarAleneomsorg = watch(`${ANNEN_FORELDER_NAME_PREFIX}.sokerHarAleneomsorg`);\n  const annenForelderHarRett = watch(`${ANNEN_FORELDER_NAME_PREFIX}.denAndreForelderenHarRettPaForeldrepenger`);\n  const annenForelderRettEØS = watch(`${ANNEN_FORELDER_NAME_PREFIX}.annenForelderRettEØS`);\n\n  return (\n    <>\n      <RadioGroupPanel\n        name={`${ANNEN_FORELDER_NAME_PREFIX}.sokerHarAleneomsorg`}\n        label={intl.formatMessage({ id: 'Registrering.Permisjon.SøkerHarAleneomsorg' })}\n        validate={[required]}\n        isReadOnly={readOnly}\n        isHorizontal\n        isTrueOrFalseSelection\n        radios={[\n          {\n            label: intl.formatMessage({ id: 'Registrering.Permisjon.SøkerHarAleneomsorg.Yes' }),\n            value: 'true',\n          },\n          {\n            label: intl.formatMessage({ id: 'Registrering.Permisjon.SøkerHarAleneomsorg.No' }),\n            value: 'false',\n          },\n        ]}\n      />\n      <VerticalSpacer sixteenPx />\n      {sokerHarAleneomsorg === false && (\n        <RadioGroupPanel\n          name={`${ANNEN_FORELDER_NAME_PREFIX}.denAndreForelderenHarRettPaForeldrepenger`}\n          label={intl.formatMessage({ id: 'Registrering.Permisjon.HarRettPaForeldrepenger' })}\n          validate={[required]}\n          isReadOnly={readOnly}\n          isHorizontal\n          isTrueOrFalseSelection\n          radios={[\n            {\n              label: intl.formatMessage({ id: 'Registrering.Permisjon.HarRettPaForeldrepenger.Yes' }),\n              value: 'true',\n            },\n            {\n              label: intl.formatMessage({ id: 'Registrering.Permisjon.HarRettPaForeldrepenger.No' }),\n              value: 'false',\n            },\n          ]}\n        />\n      )}\n      {sokerHarAleneomsorg === false && annenForelderHarRett === false && (\n        <RadioGroupPanel\n          name={`${ANNEN_FORELDER_NAME_PREFIX}.annenForelderRettEØS`}\n          label={intl.formatMessage({ id: 'Registrering.Permisjon.AnnenForelderRettEØS' })}\n          validate={[required]}\n          isReadOnly={readOnly}\n          isHorizontal\n          isTrueOrFalseSelection\n          radios={[\n            {\n              label: intl.formatMessage({ id: 'Registrering.Permisjon.AnnenForelderRettEØS.Yes' }),\n              value: 'true',\n            },\n            {\n              label: intl.formatMessage({ id: 'Registrering.Permisjon.AnnenForelderRettEØS.No' }),\n              value: 'false',\n            },\n          ]}\n        />\n      )}\n      {!sokerErMor &&\n        sokerHarAleneomsorg === false &&\n        annenForelderHarRett === false &&\n        annenForelderRettEØS === false && (\n          <RadioGroupPanel\n            name={`${ANNEN_FORELDER_NAME_PREFIX}.morMottarUføretrygd`}\n            label={intl.formatMessage({ id: 'Registrering.Permisjon.MorUføretrygd' })}\n            validate={[required]}\n            isReadOnly={readOnly}\n            isHorizontal\n            isTrueOrFalseSelection\n            radios={[\n              {\n                label: intl.formatMessage({ id: 'Registrering.Permisjon.MorUføretrygd.Yes' }),\n                value: 'true',\n              },\n              {\n                label: intl.formatMessage({ id: 'Registrering.Permisjon.MorUføretrygd.No' }),\n                value: 'false',\n              },\n            ]}\n          />\n        )}\n    </>\n  );\n};\n\nexport default PermisjonRettigheterPanel;\n","import React, { FunctionComponent, ReactElement, useEffect } from 'react';\nimport moment from 'moment';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { UseFormGetValues, useFieldArray, useFormContext } from 'react-hook-form';\nimport { Label, Alert, Button } from '@navikt/ds-react';\nimport { XMarkIcon } from '@navikt/aksel-icons';\nimport { VerticalSpacer, FlexColumn, FlexContainer, FlexRow } from '@navikt/ft-ui-komponenter';\nimport { CheckboxField, Datepicker, SelectField, PeriodFieldArray, InputField } from '@navikt/ft-form-hooks';\nimport {\n  dateAfterOrEqual,\n  dateBeforeOrEqual,\n  dateRangesNotOverlapping,\n  hasValidDate,\n  hasValidDecimal,\n  maxValue,\n  required,\n} from '@navikt/ft-form-validators';\nimport { AlleKodeverk, KodeverkMedNavn } from '@navikt/fp-types';\nimport { ISO_DATE_FORMAT } from '@navikt/ft-utils';\n\nimport { KodeverkType, uttakPeriodeType } from '@navikt/fp-kodeverk';\n\nimport styles from './renderPermisjonPeriodeFieldArray.module.css';\n\nconst maxValue100 = maxValue(100);\n\nconst TIDSROM_PERMISJON_FORM_NAME_PREFIX = 'tidsromPermisjon';\nexport const PERMISJON_PERIODE_FIELD_ARRAY_NAME = 'permisjonsPerioder';\n\nexport const gyldigeUttakperioder = [\n  uttakPeriodeType.FELLESPERIODE,\n  uttakPeriodeType.FEDREKVOTE,\n  uttakPeriodeType.FORELDREPENGER_FOR_FODSEL,\n  uttakPeriodeType.FORELDREPENGER,\n  uttakPeriodeType.MODREKVOTE,\n];\n\nconst mapPeriodeTyper = (typer: KodeverkMedNavn[]): ReactElement[] =>\n  typer\n    .filter(({ kode }) => gyldigeUttakperioder.includes(kode))\n    .map(({ kode, navn }) => (\n      <option value={kode} key={kode}>\n        {navn}\n      </option>\n    ));\n\nconst mapAktiviteter = (aktiviteter: KodeverkMedNavn[]): ReactElement[] =>\n  aktiviteter.map(({ kode, navn }) => (\n    <option value={kode} key={kode}>\n      {navn}\n    </option>\n  ));\n\nexport const PERIODS_WITH_NO_MORS_AKTIVITET = [\n  uttakPeriodeType.FEDREKVOTE,\n  uttakPeriodeType.FORELDREPENGER_FOR_FODSEL,\n  uttakPeriodeType.MODREKVOTE,\n];\n\nconst getLabel = (erForsteRad: boolean, text: string): string => (erForsteRad ? text : '');\n\nconst erPeriodeFormFør01012019 = (periodeFom: string | undefined): boolean =>\n  !!periodeFom && moment(periodeFom, ISO_DATE_FORMAT).isBefore(moment('2019-01-01'));\n\nexport type FormValues = {\n  periodeType: string;\n  periodeFom: string;\n  periodeTom: string;\n  flerbarnsdager?: boolean;\n  morsAktivitet?: string;\n  harSamtidigUttak?: boolean;\n  samtidigUttaksprosent?: number;\n};\n\nconst getOverlappingValidator =\n  (\n    getValues: UseFormGetValues<{\n      [TIDSROM_PERMISJON_FORM_NAME_PREFIX]: { [PERMISJON_PERIODE_FIELD_ARRAY_NAME]: FormValues[] };\n    }>,\n  ) =>\n  () => {\n    const perioder = getValues(`${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.${PERMISJON_PERIODE_FIELD_ARRAY_NAME}`);\n    const periodeMap = perioder\n      .filter(({ periodeFom, periodeTom }) => periodeFom !== '' && periodeTom !== '')\n      .map(({ periodeFom, periodeTom }) => [periodeFom, periodeTom]);\n    return dateRangesNotOverlapping(periodeMap);\n  };\n\nconst getValiderFomOgTomVerdi =\n  (\n    getValues: UseFormGetValues<{\n      [TIDSROM_PERMISJON_FORM_NAME_PREFIX]: { [PERMISJON_PERIODE_FIELD_ARRAY_NAME]: FormValues[] };\n    }>,\n    index: number,\n    erFør: boolean,\n  ) =>\n  () => {\n    const fomVerdi = getValues(\n      `${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.${PERMISJON_PERIODE_FIELD_ARRAY_NAME}.${index}.periodeFom`,\n    );\n    const tomVerdi = getValues(\n      `${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.${PERMISJON_PERIODE_FIELD_ARRAY_NAME}.${index}.periodeTom`,\n    );\n    if (!tomVerdi || !fomVerdi) {\n      return null;\n    }\n\n    return erFør ? dateBeforeOrEqual(tomVerdi)(fomVerdi) : dateAfterOrEqual(fomVerdi)(tomVerdi);\n  };\n\ninterface OwnProps {\n  readOnly: boolean;\n  sokerErMor: boolean;\n  alleKodeverk: AlleKodeverk;\n}\n\ninterface StaticFunctions {\n  transformValues: (values: FormValues[]) => any;\n}\n\n/**\n * RenderPermisjonPeriodeFieldArray\n *\n * Viser inputfelter for dato for bestemmelse av perioder med permijon.\n */\nconst RenderPermisjonPeriodeFieldArray: FunctionComponent<OwnProps> & StaticFunctions = ({\n  sokerErMor,\n  readOnly,\n  alleKodeverk,\n}) => {\n  const intl = useIntl();\n\n  const periodeTyper = alleKodeverk[KodeverkType.UTTAK_PERIODE_TYPE];\n  const morsAktivitetTyper = alleKodeverk[KodeverkType.MORS_AKTIVITET];\n\n  if (morsAktivitetTyper.filter(({ kode }) => kode === '-').length === 0) {\n    morsAktivitetTyper.unshift({ kode: '-', navn: '', kodeverk: '' });\n  }\n\n  const {\n    control,\n    getValues,\n    trigger,\n    watch,\n    formState: { isSubmitted },\n  } = useFormContext<{\n    [TIDSROM_PERMISJON_FORM_NAME_PREFIX]: {\n      [PERMISJON_PERIODE_FIELD_ARRAY_NAME]: FormValues[];\n    };\n  }>();\n\n  const { fields, remove, append } = useFieldArray({\n    control,\n    name: `${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.${PERMISJON_PERIODE_FIELD_ARRAY_NAME}`,\n  });\n\n  useEffect(() => {\n    if (fields.length === 0) {\n      // @ts-ignore Fiks\n      append({});\n    }\n  }, []);\n\n  return (\n    <PeriodFieldArray\n      readOnly={readOnly}\n      fields={fields}\n      bodyText={intl.formatMessage({ id: 'Registrering.Permisjon.nyPeriode' })}\n      emptyPeriodTemplate={{}}\n      append={append}\n      remove={remove}\n    >\n      {(field, index) => {\n        const erForsteRad = index === 0;\n\n        const periode = watch(`${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.${PERMISJON_PERIODE_FIELD_ARRAY_NAME}.${index}`);\n\n        const periodeFomForTidlig = erPeriodeFormFør01012019(periode.periodeFom);\n        const visEllerSkulOverskriftStyle = erForsteRad ? styles.visOverskrift : styles.skjulOverskrift;\n\n        const skalDisableMorsAktivitet =\n          PERIODS_WITH_NO_MORS_AKTIVITET.includes(periode.periodeType) || periode.periodeType === '';\n\n        const namePart1 = `${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.${PERMISJON_PERIODE_FIELD_ARRAY_NAME}.${index}`;\n        return (\n          <div key={field.id}>\n            <FlexContainer>\n              <FlexRow wrap>\n                <FlexColumn className={styles.selectFieldWidth}>\n                  <SelectField\n                    readOnly={readOnly}\n                    name={`${namePart1}.periodeType`}\n                    label={getLabel(erForsteRad, intl.formatMessage({ id: 'Registrering.Permisjon.periodeType' }))}\n                    selectValues={mapPeriodeTyper(periodeTyper)}\n                    validate={[required]}\n                  />\n                </FlexColumn>\n                <FlexColumn>\n                  <Datepicker\n                    isReadOnly={readOnly}\n                    name={`${namePart1}.periodeFom`}\n                    label={getLabel(erForsteRad, intl.formatMessage({ id: 'Registrering.Permisjon.periodeFom' }))}\n                    validate={[\n                      required,\n                      hasValidDate,\n                      getValiderFomOgTomVerdi(getValues, index, true),\n                      getOverlappingValidator(getValues),\n                    ]}\n                    onChange={() => (isSubmitted ? trigger() : undefined)}\n                  />\n                </FlexColumn>\n                <FlexColumn>\n                  <Datepicker\n                    isReadOnly={readOnly}\n                    name={`${namePart1}.periodeTom`}\n                    label={getLabel(erForsteRad, intl.formatMessage({ id: 'Registrering.Permisjon.periodeTom' }))}\n                    validate={[\n                      required,\n                      hasValidDate,\n                      getValiderFomOgTomVerdi(getValues, index, false),\n                      getOverlappingValidator(getValues),\n                    ]}\n                    onChange={() => (isSubmitted ? trigger() : undefined)}\n                  />\n                </FlexColumn>\n                {!sokerErMor && (\n                  <FlexColumn>\n                    <SelectField\n                      readOnly={readOnly}\n                      disabled={skalDisableMorsAktivitet}\n                      name={`${namePart1}.morsAktivitet`}\n                      label={getLabel(\n                        erForsteRad,\n                        intl.formatMessage({ id: 'Registrering.Permisjon.Fellesperiode.morsAktivitet' }),\n                      )}\n                      selectValues={mapAktiviteter(morsAktivitetTyper)}\n                      hideValueOnDisable\n                    />\n                  </FlexColumn>\n                )}\n                <FlexColumn className={styles.smalHeader}>\n                  <Label size=\"small\" className={visEllerSkulOverskriftStyle}>\n                    <FormattedMessage id=\"Registrering.Permisjon.Flerbarnsdager\" />\n                  </Label>\n                  <CheckboxField readOnly={readOnly} name={`${namePart1}.flerbarnsdager`} label=\" \" />\n                </FlexColumn>\n                <FlexColumn className={styles.smalHeader}>\n                  <Label size=\"small\" className={visEllerSkulOverskriftStyle}>\n                    <FormattedMessage id=\"Registrering.Permisjon.HarSamtidigUttak\" />\n                  </Label>\n                  <CheckboxField readOnly={readOnly} name={`${namePart1}.harSamtidigUttak`} label=\" \" />\n                </FlexColumn>\n                {periode.harSamtidigUttak && (\n                  <FlexColumn className={erForsteRad ? '' : styles.alignSamtidigUttak}>\n                    <InputField\n                      name={`${namePart1}.samtidigUttaksprosent`}\n                      validate={[hasValidDecimal, maxValue100]}\n                      label={intl.formatMessage({ id: 'Registrering.Permisjon.SamtidigUttaksprosent' })}\n                      normalizeOnBlur={value => (Number.isNaN(value) ? value : parseFloat(value.toString()).toFixed(2))}\n                    />\n                  </FlexColumn>\n                )}\n                <FlexColumn>\n                  {!readOnly && (\n                    <Button\n                      className={erForsteRad ? styles.buttonRemoveFirst : styles.buttonRemove}\n                      type=\"button\"\n                      variant=\"tertiary-neutral\"\n                      icon={<XMarkIcon />}\n                      onClick={() => {\n                        remove(index);\n                      }}\n                    />\n                  )}\n                </FlexColumn>\n              </FlexRow>\n              {periodeFomForTidlig && (\n                <>\n                  <FlexRow wrap>\n                    <Alert size=\"small\" variant=\"warning\">\n                      <FormattedMessage id=\"Registrering.Permisjon.PeriodeFomForTidlig\" />\n                    </Alert>\n                  </FlexRow>\n                  <VerticalSpacer sixteenPx />\n                </>\n              )}\n            </FlexContainer>\n            <VerticalSpacer eightPx />\n          </div>\n        );\n      }}\n    </PeriodFieldArray>\n  );\n};\n\nRenderPermisjonPeriodeFieldArray.transformValues = (values: FormValues[]) =>\n  values.map(value => {\n    if (PERIODS_WITH_NO_MORS_AKTIVITET.includes(value.periodeType)) {\n      return {\n        periodeType: value.periodeType,\n        periodeFom: value.periodeFom,\n        periodeTom: value.periodeTom,\n        flerbarnsdager: value.flerbarnsdager ? value.flerbarnsdager : false,\n        harSamtidigUttak: value.harSamtidigUttak ? value.harSamtidigUttak : false,\n        samtidigUttaksprosent: value.samtidigUttaksprosent,\n      };\n    }\n    return {\n      periodeType: value.periodeType,\n      periodeFom: value.periodeFom,\n      periodeTom: value.periodeTom,\n      morsAktivitet: value.morsAktivitet,\n      flerbarnsdager: value.flerbarnsdager ? value.flerbarnsdager : false,\n      harSamtidigUttak: value.harSamtidigUttak ? value.harSamtidigUttak : false,\n      samtidigUttaksprosent: value.samtidigUttaksprosent,\n    };\n  });\n\nexport default RenderPermisjonPeriodeFieldArray;\n","import React, { FunctionComponent, ReactElement, useEffect, useCallback } from 'react';\nimport { useIntl } from 'react-intl';\nimport { UseFormGetValues, useFieldArray, useFormContext } from 'react-hook-form';\nimport { AvsnittSkiller, FlexColumn, FlexContainer, FlexRow, VerticalSpacer } from '@navikt/ft-ui-komponenter';\nimport { Datepicker, SelectField, PeriodFieldArray } from '@navikt/ft-form-hooks';\nimport { KodeverkMedNavn } from '@navikt/ft-types';\n\nimport {\n  dateAfterOrEqual,\n  dateBeforeOrEqual,\n  dateRangesNotOverlapping,\n  hasValidDate,\n  required,\n} from '@navikt/ft-form-validators';\nimport { gyldigeUttakperioder } from './RenderPermisjonPeriodeFieldArray';\n\nimport styles from './renderUtsettelsePeriodeFieldArray.module.css';\n\nexport const TIDSROM_PERMISJON_FORM_NAME_PREFIX = 'tidsromPermisjon';\nexport const UTSETTELSE_PERIODE_FIELD_ARRAY_NAME = 'utsettelsePeriode';\n\ntype PeriodeData = {\n  periodeFom: string;\n  periodeTom: string;\n  arsakForUtsettelse: string;\n  periodeForUtsettelse?: string;\n  erArbeidstaker?: string;\n};\n\nexport type FormValues = PeriodeData[];\n\nconst defaultUtsettelsePeriode: PeriodeData = {\n  periodeFom: '',\n  periodeTom: '',\n  arsakForUtsettelse: '',\n};\n\nconst getOverlappingValidator =\n  (\n    getValues: UseFormGetValues<{\n      [TIDSROM_PERMISJON_FORM_NAME_PREFIX]: { [UTSETTELSE_PERIODE_FIELD_ARRAY_NAME]: FormValues };\n    }>,\n  ) =>\n  () => {\n    const perioder = getValues(`${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.${UTSETTELSE_PERIODE_FIELD_ARRAY_NAME}`);\n    const periodeMap = perioder\n      .filter(({ periodeFom, periodeTom }) => periodeFom !== '' && periodeTom !== '')\n      .map(({ periodeFom, periodeTom }) => [periodeFom, periodeTom]);\n    return periodeMap.length > 0 ? dateRangesNotOverlapping(periodeMap) : undefined;\n  };\n\nconst getValiderFomTomRekkefølge =\n  (\n    getValues: UseFormGetValues<{\n      [TIDSROM_PERMISJON_FORM_NAME_PREFIX]: { [UTSETTELSE_PERIODE_FIELD_ARRAY_NAME]: FormValues };\n    }>,\n    index: number,\n    erFør: boolean,\n  ) =>\n  () => {\n    const fomVerdi = getValues(\n      `${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.${UTSETTELSE_PERIODE_FIELD_ARRAY_NAME}.${index}.periodeFom`,\n    );\n    const tomVerdi = getValues(\n      `${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.${UTSETTELSE_PERIODE_FIELD_ARRAY_NAME}.${index}.periodeTom`,\n    );\n    if (!tomVerdi && !fomVerdi) {\n      return null;\n    }\n    return erFør ? dateBeforeOrEqual(tomVerdi)(fomVerdi) : dateAfterOrEqual(fomVerdi)(tomVerdi);\n  };\n\nconst mapTyper = (typer: KodeverkMedNavn[]): ReactElement[] =>\n  typer.map(({ kode, navn }) => (\n    <option value={kode} key={kode}>\n      {navn}\n    </option>\n  ));\n\nconst mapKvoter = (typer: KodeverkMedNavn[]): ReactElement[] =>\n  typer\n    .filter(({ kode }) => gyldigeUttakperioder.includes(kode))\n    .map(({ kode, navn }) => (\n      <option value={kode} key={kode}>\n        {navn}\n      </option>\n    ));\n\ninterface OwnProps {\n  utsettelseReasons: KodeverkMedNavn[];\n  utsettelseKvoter: KodeverkMedNavn[];\n  readOnly: boolean;\n}\n\n/**\n * RenderUtsettelsePeriodeFieldArray\n *\n * Viser inputfelter for dato for bestemmelse av utsettelseperiode.\n */\nconst RenderUtsettelsePeriodeFieldArray: FunctionComponent<OwnProps> = ({\n  utsettelseReasons,\n  utsettelseKvoter,\n  readOnly,\n}) => {\n  const intl = useIntl();\n\n  const {\n    control,\n    getValues,\n    trigger,\n    formState: { isSubmitted },\n  } = useFormContext<{\n    [TIDSROM_PERMISJON_FORM_NAME_PREFIX]: {\n      [UTSETTELSE_PERIODE_FIELD_ARRAY_NAME]: FormValues;\n    };\n  }>();\n\n  const { fields, remove, append } = useFieldArray({\n    control,\n    name: `${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.${UTSETTELSE_PERIODE_FIELD_ARRAY_NAME}`,\n  });\n\n  useEffect(() => {\n    if (fields.length === 0) {\n      append(defaultUtsettelsePeriode);\n    }\n  }, []);\n\n  const triggerValidationOnChange = useCallback(() => (isSubmitted ? trigger() : undefined), [isSubmitted, trigger]);\n\n  const fieldArrayName = `${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.${UTSETTELSE_PERIODE_FIELD_ARRAY_NAME}`;\n  return (\n    <PeriodFieldArray\n      fields={fields}\n      emptyPeriodTemplate={defaultUtsettelsePeriode}\n      bodyText={intl.formatMessage({ id: 'Registrering.Permisjon.Utsettelse.LeggTilPeriode' })}\n      readOnly={readOnly}\n      append={append}\n      remove={remove}\n    >\n      {(field, index, getRemoveButton) => (\n        <div key={field.id} className={index !== fields.length - 1 ? styles.notLastRow : ''}>\n          {index > 0 && (\n            <>\n              <AvsnittSkiller />\n              <VerticalSpacer sixteenPx />\n            </>\n          )}\n          <FlexContainer wrap>\n            <FlexRow>\n              <FlexColumn>\n                <SelectField\n                  name={`${fieldArrayName}.${index}.periodeForUtsettelse`}\n                  label={index === 0 ? intl.formatMessage({ id: 'Registrering.Permisjon.Utsettelse.Periode' }) : ''}\n                  selectValues={mapKvoter(utsettelseKvoter)}\n                  validate={[required]}\n                />\n              </FlexColumn>\n              <FlexColumn>\n                <Datepicker\n                  name={`${fieldArrayName}.${index}.periodeFom`}\n                  label={index === 0 ? intl.formatMessage({ id: 'Registrering.Permisjon.periodeFom' }) : ''}\n                  validate={[\n                    required,\n                    hasValidDate,\n                    getValiderFomTomRekkefølge(getValues, index, true),\n                    getOverlappingValidator(getValues),\n                  ]}\n                  onChange={triggerValidationOnChange}\n                />\n              </FlexColumn>\n              <FlexColumn>\n                <Datepicker\n                  name={`${fieldArrayName}.${index}.periodeTom`}\n                  label={index === 0 ? intl.formatMessage({ id: 'Registrering.Permisjon.periodeTom' }) : ''}\n                  validate={[\n                    required,\n                    hasValidDate,\n                    getValiderFomTomRekkefølge(getValues, index, false),\n                    getOverlappingValidator(getValues),\n                  ]}\n                  onChange={triggerValidationOnChange}\n                />\n              </FlexColumn>\n              <FlexColumn>\n                <SelectField\n                  name={`${fieldArrayName}.${index}.arsakForUtsettelse`}\n                  label={index === 0 ? intl.formatMessage({ id: 'Registrering.Permisjon.Utsettelse.Arsak' }) : ''}\n                  selectValues={mapTyper(utsettelseReasons)}\n                  validate={[required]}\n                  onChange={triggerValidationOnChange}\n                />\n              </FlexColumn>\n            </FlexRow>\n            <VerticalSpacer eightPx />\n            <FlexRow>\n              <FlexColumn>\n                <SelectField\n                  label={index === 0 ? intl.formatMessage({ id: 'Registrering.Permisjon.ArbeidskategoriLabel' }) : ''}\n                  name={`${fieldArrayName}.${index}.erArbeidstaker`}\n                  selectValues={[\n                    <option value=\"true\" key=\"true\">\n                      {intl.formatMessage({ id: 'Registrering.Permisjon.ErArbeidstaker' })}\n                    </option>,\n                    <option value=\"false\" key=\"false\">\n                      {intl.formatMessage({ id: 'Registrering.Permisjon.ErIkkeArbeidstaker' })}\n                    </option>,\n                  ]}\n                  validate={[\n                    erArbeidstaker => {\n                      const typeArbeidRequired =\n                        getValues(\n                          `${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.${UTSETTELSE_PERIODE_FIELD_ARRAY_NAME}.${index}.arsakForUtsettelse`,\n                        ) === 'ARBEID';\n                      return typeArbeidRequired ? required(erArbeidstaker) : undefined;\n                    },\n                  ]}\n                />\n              </FlexColumn>\n              {getRemoveButton && <FlexColumn>{getRemoveButton()}</FlexColumn>}\n            </FlexRow>\n          </FlexContainer>\n        </div>\n      )}\n    </PeriodFieldArray>\n  );\n};\n\nexport default RenderUtsettelsePeriodeFieldArray;\n","import React, { FunctionComponent } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Label } from '@navikt/ds-react';\nimport { CheckboxField } from '@navikt/ft-form-hooks';\nimport { VerticalSpacer } from '@navikt/ft-ui-komponenter';\n\nimport { AlleKodeverk } from '@navikt/fp-types';\nimport { KodeverkType } from '@navikt/fp-kodeverk';\n\nimport { useFormContext } from 'react-hook-form';\nimport RenderUtsettelsePeriodeFieldArray, {\n  UTSETTELSE_PERIODE_FIELD_ARRAY_NAME,\n  TIDSROM_PERMISJON_FORM_NAME_PREFIX,\n  FormValues as UtsettelsePeriodeFormValues,\n} from './RenderUtsettelsePeriodeFieldArray';\n\nexport type FormValues = {\n  skalUtsette?: boolean;\n  [UTSETTELSE_PERIODE_FIELD_ARRAY_NAME]?: UtsettelsePeriodeFormValues;\n};\n\ninterface OwnProps {\n  readOnly: boolean;\n  alleKodeverk: AlleKodeverk;\n}\n\ninterface StaticFunctions {\n  buildInitialValues: () => any;\n}\n\n/**\n * PermisjonUtsettelsePanel\n *\n * Viser panel for utsettelse\n * Komponenten har inputfelter og må derfor rendres som etterkommer av form komponent.\n */\nconst PermisjonUtsettelsePanel: FunctionComponent<OwnProps> & StaticFunctions = ({ readOnly, alleKodeverk }) => {\n  const utsettelseReasons = alleKodeverk[KodeverkType.UTSETTELSE_AARSAK_TYPE];\n  const utsettelseKvoter = alleKodeverk[KodeverkType.UTTAK_PERIODE_TYPE];\n\n  const { watch } = useFormContext<{ [TIDSROM_PERMISJON_FORM_NAME_PREFIX]: FormValues }>();\n  const skalUtsette = watch(`${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.skalUtsette`) || false;\n\n  return (\n    <>\n      <Label size=\"small\">\n        <FormattedMessage id=\"Registrering.Permisjon.Utsettelse.Title\" />\n      </Label>\n      <VerticalSpacer sixteenPx />\n      <CheckboxField\n        readOnly={readOnly}\n        name={`${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.skalUtsette`}\n        label={<FormattedMessage id=\"Registrering.Permisjon.Utsettelse.UtsettUttaket\" />}\n      />\n      {skalUtsette && (\n        <RenderUtsettelsePeriodeFieldArray\n          utsettelseReasons={utsettelseReasons}\n          utsettelseKvoter={utsettelseKvoter}\n          readOnly={readOnly}\n        />\n      )}\n    </>\n  );\n};\n\nPermisjonUtsettelsePanel.buildInitialValues = () => ({\n  [UTSETTELSE_PERIODE_FIELD_ARRAY_NAME]: [{}],\n  skalUtsette: false,\n});\n\nexport default PermisjonUtsettelsePanel;\n","//! moment.js\n//! version : 2.29.4\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\n    var hookCallback;\n\n    function hooks() {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback(callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return (\n            input instanceof Array ||\n            Object.prototype.toString.call(input) === '[object Array]'\n        );\n    }\n\n    function isObject(input) {\n        // IE8 will treat undefined and null as object if it wasn't for\n        // input != null\n        return (\n            input != null &&\n            Object.prototype.toString.call(input) === '[object Object]'\n        );\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function isObjectEmpty(obj) {\n        if (Object.getOwnPropertyNames) {\n            return Object.getOwnPropertyNames(obj).length === 0;\n        } else {\n            var k;\n            for (k in obj) {\n                if (hasOwnProp(obj, k)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    function isUndefined(input) {\n        return input === void 0;\n    }\n\n    function isNumber(input) {\n        return (\n            typeof input === 'number' ||\n            Object.prototype.toString.call(input) === '[object Number]'\n        );\n    }\n\n    function isDate(input) {\n        return (\n            input instanceof Date ||\n            Object.prototype.toString.call(input) === '[object Date]'\n        );\n    }\n\n    function map(arr, fn) {\n        var res = [],\n            i,\n            arrLen = arr.length;\n        for (i = 0; i < arrLen; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function createUTC(input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty: false,\n            unusedTokens: [],\n            unusedInput: [],\n            overflow: -2,\n            charsLeftOver: 0,\n            nullInput: false,\n            invalidEra: null,\n            invalidMonth: null,\n            invalidFormat: false,\n            userInvalidated: false,\n            iso: false,\n            parsedDateParts: [],\n            era: null,\n            meridiem: null,\n            rfc2822: false,\n            weekdayMismatch: false,\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    var some;\n    if (Array.prototype.some) {\n        some = Array.prototype.some;\n    } else {\n        some = function (fun) {\n            var t = Object(this),\n                len = t.length >>> 0,\n                i;\n\n            for (i = 0; i < len; i++) {\n                if (i in t && fun.call(this, t[i], i, t)) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m),\n                parsedParts = some.call(flags.parsedDateParts, function (i) {\n                    return i != null;\n                }),\n                isNowValid =\n                    !isNaN(m._d.getTime()) &&\n                    flags.overflow < 0 &&\n                    !flags.empty &&\n                    !flags.invalidEra &&\n                    !flags.invalidMonth &&\n                    !flags.invalidWeekday &&\n                    !flags.weekdayMismatch &&\n                    !flags.nullInput &&\n                    !flags.invalidFormat &&\n                    !flags.userInvalidated &&\n                    (!flags.meridiem || (flags.meridiem && parsedParts));\n\n            if (m._strict) {\n                isNowValid =\n                    isNowValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n\n            if (Object.isFrozen == null || !Object.isFrozen(m)) {\n                m._isValid = isNowValid;\n            } else {\n                return isNowValid;\n            }\n        }\n        return m._isValid;\n    }\n\n    function createInvalid(flags) {\n        var m = createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        } else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = (hooks.momentProperties = []),\n        updateInProgress = false;\n\n    function copyConfig(to, from) {\n        var i,\n            prop,\n            val,\n            momentPropertiesLen = momentProperties.length;\n\n        if (!isUndefined(from._isAMomentObject)) {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (!isUndefined(from._i)) {\n            to._i = from._i;\n        }\n        if (!isUndefined(from._f)) {\n            to._f = from._f;\n        }\n        if (!isUndefined(from._l)) {\n            to._l = from._l;\n        }\n        if (!isUndefined(from._strict)) {\n            to._strict = from._strict;\n        }\n        if (!isUndefined(from._tzm)) {\n            to._tzm = from._tzm;\n        }\n        if (!isUndefined(from._isUTC)) {\n            to._isUTC = from._isUTC;\n        }\n        if (!isUndefined(from._offset)) {\n            to._offset = from._offset;\n        }\n        if (!isUndefined(from._pf)) {\n            to._pf = getParsingFlags(from);\n        }\n        if (!isUndefined(from._locale)) {\n            to._locale = from._locale;\n        }\n\n        if (momentPropertiesLen > 0) {\n            for (i = 0; i < momentPropertiesLen; i++) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (!isUndefined(val)) {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        if (!this.isValid()) {\n            this._d = new Date(NaN);\n        }\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment(obj) {\n        return (\n            obj instanceof Moment || (obj != null && obj._isAMomentObject != null)\n        );\n    }\n\n    function warn(msg) {\n        if (\n            hooks.suppressDeprecationWarnings === false &&\n            typeof console !== 'undefined' &&\n            console.warn\n        ) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (hooks.deprecationHandler != null) {\n                hooks.deprecationHandler(null, msg);\n            }\n            if (firstTime) {\n                var args = [],\n                    arg,\n                    i,\n                    key,\n                    argLen = arguments.length;\n                for (i = 0; i < argLen; i++) {\n                    arg = '';\n                    if (typeof arguments[i] === 'object') {\n                        arg += '\\n[' + i + '] ';\n                        for (key in arguments[0]) {\n                            if (hasOwnProp(arguments[0], key)) {\n                                arg += key + ': ' + arguments[0][key] + ', ';\n                            }\n                        }\n                        arg = arg.slice(0, -2); // Remove trailing comma and space\n                    } else {\n                        arg = arguments[i];\n                    }\n                    args.push(arg);\n                }\n                warn(\n                    msg +\n                        '\\nArguments: ' +\n                        Array.prototype.slice.call(args).join('') +\n                        '\\n' +\n                        new Error().stack\n                );\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(name, msg);\n        }\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    hooks.suppressDeprecationWarnings = false;\n    hooks.deprecationHandler = null;\n\n    function isFunction(input) {\n        return (\n            (typeof Function !== 'undefined' && input instanceof Function) ||\n            Object.prototype.toString.call(input) === '[object Function]'\n        );\n    }\n\n    function set(config) {\n        var prop, i;\n        for (i in config) {\n            if (hasOwnProp(config, i)) {\n                prop = config[i];\n                if (isFunction(prop)) {\n                    this[i] = prop;\n                } else {\n                    this['_' + i] = prop;\n                }\n            }\n        }\n        this._config = config;\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        this._dayOfMonthOrdinalParseLenient = new RegExp(\n            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n                '|' +\n                /\\d{1,2}/.source\n        );\n    }\n\n    function mergeConfigs(parentConfig, childConfig) {\n        var res = extend({}, parentConfig),\n            prop;\n        for (prop in childConfig) {\n            if (hasOwnProp(childConfig, prop)) {\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                    res[prop] = {};\n                    extend(res[prop], parentConfig[prop]);\n                    extend(res[prop], childConfig[prop]);\n                } else if (childConfig[prop] != null) {\n                    res[prop] = childConfig[prop];\n                } else {\n                    delete res[prop];\n                }\n            }\n        }\n        for (prop in parentConfig) {\n            if (\n                hasOwnProp(parentConfig, prop) &&\n                !hasOwnProp(childConfig, prop) &&\n                isObject(parentConfig[prop])\n            ) {\n                // make sure changes to properties don't modify parent config\n                res[prop] = extend({}, res[prop]);\n            }\n        }\n        return res;\n    }\n\n    function Locale(config) {\n        if (config != null) {\n            this.set(config);\n        }\n    }\n\n    var keys;\n\n    if (Object.keys) {\n        keys = Object.keys;\n    } else {\n        keys = function (obj) {\n            var i,\n                res = [];\n            for (i in obj) {\n                if (hasOwnProp(obj, i)) {\n                    res.push(i);\n                }\n            }\n            return res;\n        };\n    }\n\n    var defaultCalendar = {\n        sameDay: '[Today at] LT',\n        nextDay: '[Tomorrow at] LT',\n        nextWeek: 'dddd [at] LT',\n        lastDay: '[Yesterday at] LT',\n        lastWeek: '[Last] dddd [at] LT',\n        sameElse: 'L',\n    };\n\n    function calendar(key, mom, now) {\n        var output = this._calendar[key] || this._calendar['sameElse'];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (\n            (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) +\n            absNumber\n        );\n    }\n\n    var formattingTokens =\n            /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,\n        localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,\n        formatFunctions = {},\n        formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken(token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(\n                    func.apply(this, arguments),\n                    token\n                );\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens),\n            i,\n            length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '',\n                i;\n            for (i = 0; i < length; i++) {\n                output += isFunction(array[i])\n                    ? array[i].call(mom, format)\n                    : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] =\n            formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(\n                localFormattingTokens,\n                replaceLongDateFormatTokens\n            );\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var defaultLongDateFormat = {\n        LTS: 'h:mm:ss A',\n        LT: 'h:mm A',\n        L: 'MM/DD/YYYY',\n        LL: 'MMMM D, YYYY',\n        LLL: 'MMMM D, YYYY h:mm A',\n        LLLL: 'dddd, MMMM D, YYYY h:mm A',\n    };\n\n    function longDateFormat(key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper\n            .match(formattingTokens)\n            .map(function (tok) {\n                if (\n                    tok === 'MMMM' ||\n                    tok === 'MM' ||\n                    tok === 'DD' ||\n                    tok === 'dddd'\n                ) {\n                    return tok.slice(1);\n                }\n                return tok;\n            })\n            .join('');\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate() {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d',\n        defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n    function ordinal(number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    var defaultRelativeTime = {\n        future: 'in %s',\n        past: '%s ago',\n        s: 'a few seconds',\n        ss: '%d seconds',\n        m: 'a minute',\n        mm: '%d minutes',\n        h: 'an hour',\n        hh: '%d hours',\n        d: 'a day',\n        dd: '%d days',\n        w: 'a week',\n        ww: '%d weeks',\n        M: 'a month',\n        MM: '%d months',\n        y: 'a year',\n        yy: '%d years',\n    };\n\n    function relativeTime(number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return isFunction(output)\n            ? output(number, withoutSuffix, string, isFuture)\n            : output.replace(/%d/i, number);\n    }\n\n    function pastFuture(diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias(unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string'\n            ? aliases[units] || aliases[units.toLowerCase()]\n            : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    var priorities = {};\n\n    function addUnitPriority(unit, priority) {\n        priorities[unit] = priority;\n    }\n\n    function getPrioritizedUnits(unitsObj) {\n        var units = [],\n            u;\n        for (u in unitsObj) {\n            if (hasOwnProp(unitsObj, u)) {\n                units.push({ unit: u, priority: priorities[u] });\n            }\n        }\n        units.sort(function (a, b) {\n            return a.priority - b.priority;\n        });\n        return units;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    function absFloor(number) {\n        if (number < 0) {\n            // -0 -> 0\n            return Math.ceil(number) || 0;\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    function makeGetSet(unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                set$1(this, unit, value);\n                hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get(this, unit);\n            }\n        };\n    }\n\n    function get(mom, unit) {\n        return mom.isValid()\n            ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]()\n            : NaN;\n    }\n\n    function set$1(mom, unit, value) {\n        if (mom.isValid() && !isNaN(value)) {\n            if (\n                unit === 'FullYear' &&\n                isLeapYear(mom.year()) &&\n                mom.month() === 1 &&\n                mom.date() === 29\n            ) {\n                value = toInt(value);\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](\n                    value,\n                    mom.month(),\n                    daysInMonth(value, mom.month())\n                );\n            } else {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function stringGet(units) {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units]();\n        }\n        return this;\n    }\n\n    function stringSet(units, value) {\n        if (typeof units === 'object') {\n            units = normalizeObjectUnits(units);\n            var prioritized = getPrioritizedUnits(units),\n                i,\n                prioritizedLen = prioritized.length;\n            for (i = 0; i < prioritizedLen; i++) {\n                this[prioritized[i].unit](units[prioritized[i].unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    var match1 = /\\d/, //       0 - 9\n        match2 = /\\d\\d/, //      00 - 99\n        match3 = /\\d{3}/, //     000 - 999\n        match4 = /\\d{4}/, //    0000 - 9999\n        match6 = /[+-]?\\d{6}/, // -999999 - 999999\n        match1to2 = /\\d\\d?/, //       0 - 99\n        match3to4 = /\\d\\d\\d\\d?/, //     999 - 9999\n        match5to6 = /\\d\\d\\d\\d\\d\\d?/, //   99999 - 999999\n        match1to3 = /\\d{1,3}/, //       0 - 999\n        match1to4 = /\\d{1,4}/, //       0 - 9999\n        match1to6 = /[+-]?\\d{1,6}/, // -999999 - 999999\n        matchUnsigned = /\\d+/, //       0 - inf\n        matchSigned = /[+-]?\\d+/, //    -inf - inf\n        matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi, // +00:00 -00:00 +0000 -0000 or Z\n        matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi, // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n        matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/, // 123456789 123456789.123\n        // any word (or two) characters or numbers including two/three word month in arabic.\n        // includes scottish gaelic two word and hyphenated months\n        matchWord =\n            /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i,\n        regexes;\n\n    regexes = {};\n\n    function addRegexToken(token, regex, strictRegex) {\n        regexes[token] = isFunction(regex)\n            ? regex\n            : function (isStrict, localeData) {\n                  return isStrict && strictRegex ? strictRegex : regex;\n              };\n    }\n\n    function getParseRegexForToken(token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(\n            s\n                .replace('\\\\', '')\n                .replace(\n                    /\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g,\n                    function (matched, p1, p2, p3, p4) {\n                        return p1 || p2 || p3 || p4;\n                    }\n                )\n        );\n    }\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken(token, callback) {\n        var i,\n            func = callback,\n            tokenLen;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (isNumber(callback)) {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        tokenLen = token.length;\n        for (i = 0; i < tokenLen; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken(token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0,\n        MONTH = 1,\n        DATE = 2,\n        HOUR = 3,\n        MINUTE = 4,\n        SECOND = 5,\n        MILLISECOND = 6,\n        WEEK = 7,\n        WEEKDAY = 8;\n\n    function mod(n, x) {\n        return ((n % x) + x) % x;\n    }\n\n    var indexOf;\n\n    if (Array.prototype.indexOf) {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function (o) {\n            // I know\n            var i;\n            for (i = 0; i < this.length; ++i) {\n                if (this[i] === o) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n    }\n\n    function daysInMonth(year, month) {\n        if (isNaN(year) || isNaN(month)) {\n            return NaN;\n        }\n        var modMonth = mod(month, 12);\n        year += (month - modMonth) / 12;\n        return modMonth === 1\n            ? isLeapYear(year)\n                ? 29\n                : 28\n            : 31 - ((modMonth % 7) % 2);\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PRIORITY\n\n    addUnitPriority('month', 8);\n\n    // PARSING\n\n    addRegexToken('M', match1to2);\n    addRegexToken('MM', match1to2, match2);\n    addRegexToken('MMM', function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var defaultLocaleMonths =\n            'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n                '_'\n            ),\n        defaultLocaleMonthsShort =\n            'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/,\n        defaultMonthsShortRegex = matchWord,\n        defaultMonthsRegex = matchWord;\n\n    function localeMonths(m, format) {\n        if (!m) {\n            return isArray(this._months)\n                ? this._months\n                : this._months['standalone'];\n        }\n        return isArray(this._months)\n            ? this._months[m.month()]\n            : this._months[\n                  (this._months.isFormat || MONTHS_IN_FORMAT).test(format)\n                      ? 'format'\n                      : 'standalone'\n              ][m.month()];\n    }\n\n    function localeMonthsShort(m, format) {\n        if (!m) {\n            return isArray(this._monthsShort)\n                ? this._monthsShort\n                : this._monthsShort['standalone'];\n        }\n        return isArray(this._monthsShort)\n            ? this._monthsShort[m.month()]\n            : this._monthsShort[\n                  MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'\n              ][m.month()];\n    }\n\n    function handleStrictParse(monthName, format, strict) {\n        var i,\n            ii,\n            mom,\n            llc = monthName.toLocaleLowerCase();\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = createUTC([2000, i]);\n                this._shortMonthsParse[i] = this.monthsShort(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeMonthsParse(monthName, format, strict) {\n        var i, mom, regex;\n\n        if (this._monthsParseExact) {\n            return handleStrictParse.call(this, monthName, format, strict);\n        }\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp(\n                    '^' + this.months(mom, '').replace('.', '') + '$',\n                    'i'\n                );\n                this._shortMonthsParse[i] = new RegExp(\n                    '^' + this.monthsShort(mom, '').replace('.', '') + '$',\n                    'i'\n                );\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex =\n                    '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (\n                strict &&\n                format === 'MMMM' &&\n                this._longMonthsParse[i].test(monthName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'MMM' &&\n                this._shortMonthsParse[i].test(monthName)\n            ) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth(mom, value) {\n        var dayOfMonth;\n\n        if (!mom.isValid()) {\n            // No op\n            return mom;\n        }\n\n        if (typeof value === 'string') {\n            if (/^\\d+$/.test(value)) {\n                value = toInt(value);\n            } else {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (!isNumber(value)) {\n                    return mom;\n                }\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth(value) {\n        if (value != null) {\n            setMonth(this, value);\n            hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth() {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    function monthsShortRegex(isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            } else {\n                return this._monthsShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsShortRegex')) {\n                this._monthsShortRegex = defaultMonthsShortRegex;\n            }\n            return this._monthsShortStrictRegex && isStrict\n                ? this._monthsShortStrictRegex\n                : this._monthsShortRegex;\n        }\n    }\n\n    function monthsRegex(isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            } else {\n                return this._monthsRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this._monthsRegex = defaultMonthsRegex;\n            }\n            return this._monthsStrictRegex && isStrict\n                ? this._monthsStrictRegex\n                : this._monthsRegex;\n        }\n    }\n\n    function computeMonthsParse() {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var shortPieces = [],\n            longPieces = [],\n            mixedPieces = [],\n            i,\n            mom;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            shortPieces.push(this.monthsShort(mom, ''));\n            longPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.monthsShort(mom, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for (i = 0; i < 24; i++) {\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp(\n            '^(' + longPieces.join('|') + ')',\n            'i'\n        );\n        this._monthsShortStrictRegex = new RegExp(\n            '^(' + shortPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n        var y = this.year();\n        return y <= 9999 ? zeroFill(y, 4) : '+' + y;\n    });\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY', 4], 0, 'year');\n    addFormatToken(0, ['YYYYY', 5], 0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PRIORITIES\n\n    addUnitPriority('year', 1);\n\n    // PARSING\n\n    addRegexToken('Y', matchSigned);\n    addRegexToken('YY', match1to2, match2);\n    addRegexToken('YYYY', match1to4, match4);\n    addRegexToken('YYYYY', match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] =\n            input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    // HOOKS\n\n    hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', true);\n\n    function getIsLeapYear() {\n        return isLeapYear(this.year());\n    }\n\n    function createDate(y, m, d, h, M, s, ms) {\n        // can't just apply() to create a date:\n        // https://stackoverflow.com/q/181348\n        var date;\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            date = new Date(y + 400, m, d, h, M, s, ms);\n            if (isFinite(date.getFullYear())) {\n                date.setFullYear(y);\n            }\n        } else {\n            date = new Date(y, m, d, h, M, s, ms);\n        }\n\n        return date;\n    }\n\n    function createUTCDate(y) {\n        var date, args;\n        // the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            args = Array.prototype.slice.call(arguments);\n            // preserve leap years using a full 400 year cycle, then reset\n            args[0] = y + 400;\n            date = new Date(Date.UTC.apply(null, args));\n            if (isFinite(date.getUTCFullYear())) {\n                date.setUTCFullYear(y);\n            }\n        } else {\n            date = new Date(Date.UTC.apply(null, arguments));\n        }\n\n        return date;\n    }\n\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n            fwd = 7 + dow - doy,\n            // first-week day local weekday -- which local weekday is fwd\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n        return -fwdlw + fwd - 1;\n    }\n\n    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7,\n            weekOffset = firstWeekOffset(year, dow, doy),\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n            resYear,\n            resDayOfYear;\n\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear,\n        };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n            resWeek,\n            resYear;\n\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n\n        return {\n            week: resWeek,\n            year: resYear,\n        };\n    }\n\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy),\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n\n    // FORMATTING\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PRIORITIES\n\n    addUnitPriority('week', 5);\n    addUnitPriority('isoWeek', 5);\n\n    // PARSING\n\n    addRegexToken('w', match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W', match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(\n        ['w', 'ww', 'W', 'WW'],\n        function (input, week, config, token) {\n            week[token.substr(0, 1)] = toInt(input);\n        }\n    );\n\n    // HELPERS\n\n    // LOCALES\n\n    function localeWeek(mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow: 0, // Sunday is the first day of the week.\n        doy: 6, // The week that contains Jan 6th is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek() {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear() {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek(input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek(input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PRIORITY\n    addUnitPriority('day', 11);\n    addUnitPriority('weekday', 11);\n    addUnitPriority('isoWeekday', 11);\n\n    // PARSING\n\n    addRegexToken('d', match1to2);\n    addRegexToken('e', match1to2);\n    addRegexToken('E', match1to2);\n    addRegexToken('dd', function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken('ddd', function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken('dddd', function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    });\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    function parseIsoWeekday(input, locale) {\n        if (typeof input === 'string') {\n            return locale.weekdaysParse(input) % 7 || 7;\n        }\n        return isNaN(input) ? null : input;\n    }\n\n    // LOCALES\n    function shiftWeekdays(ws, n) {\n        return ws.slice(n, 7).concat(ws.slice(0, n));\n    }\n\n    var defaultLocaleWeekdays =\n            'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        defaultWeekdaysRegex = matchWord,\n        defaultWeekdaysShortRegex = matchWord,\n        defaultWeekdaysMinRegex = matchWord;\n\n    function localeWeekdays(m, format) {\n        var weekdays = isArray(this._weekdays)\n            ? this._weekdays\n            : this._weekdays[\n                  m && m !== true && this._weekdays.isFormat.test(format)\n                      ? 'format'\n                      : 'standalone'\n              ];\n        return m === true\n            ? shiftWeekdays(weekdays, this._week.dow)\n            : m\n            ? weekdays[m.day()]\n            : weekdays;\n    }\n\n    function localeWeekdaysShort(m) {\n        return m === true\n            ? shiftWeekdays(this._weekdaysShort, this._week.dow)\n            : m\n            ? this._weekdaysShort[m.day()]\n            : this._weekdaysShort;\n    }\n\n    function localeWeekdaysMin(m) {\n        return m === true\n            ? shiftWeekdays(this._weekdaysMin, this._week.dow)\n            : m\n            ? this._weekdaysMin[m.day()]\n            : this._weekdaysMin;\n    }\n\n    function handleStrictParse$1(weekdayName, format, strict) {\n        var i,\n            ii,\n            mom,\n            llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n\n            for (i = 0; i < 7; ++i) {\n                mom = createUTC([2000, 1]).day(i);\n                this._minWeekdaysParse[i] = this.weekdaysMin(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeWeekdaysParse(weekdayName, format, strict) {\n        var i, mom, regex;\n\n        if (this._weekdaysParseExact) {\n            return handleStrictParse$1.call(this, weekdayName, format, strict);\n        }\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n\n            mom = createUTC([2000, 1]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n                this._shortWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n                this._minWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n            }\n            if (!this._weekdaysParse[i]) {\n                regex =\n                    '^' +\n                    this.weekdays(mom, '') +\n                    '|^' +\n                    this.weekdaysShort(mom, '') +\n                    '|^' +\n                    this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (\n                strict &&\n                format === 'dddd' &&\n                this._fullWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'ddd' &&\n                this._shortWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'dd' &&\n                this._minWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n\n        if (input != null) {\n            var weekday = parseIsoWeekday(input, this.localeData());\n            return this.day(this.day() % 7 ? weekday : weekday - 7);\n        } else {\n            return this.day() || 7;\n        }\n    }\n\n    function weekdaysRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            } else {\n                return this._weekdaysRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = defaultWeekdaysRegex;\n            }\n            return this._weekdaysStrictRegex && isStrict\n                ? this._weekdaysStrictRegex\n                : this._weekdaysRegex;\n        }\n    }\n\n    function weekdaysShortRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            } else {\n                return this._weekdaysShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n            }\n            return this._weekdaysShortStrictRegex && isStrict\n                ? this._weekdaysShortStrictRegex\n                : this._weekdaysShortRegex;\n        }\n    }\n\n    function weekdaysMinRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            } else {\n                return this._weekdaysMinRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n            }\n            return this._weekdaysMinStrictRegex && isStrict\n                ? this._weekdaysMinStrictRegex\n                : this._weekdaysMinRegex;\n        }\n    }\n\n    function computeWeekdaysParse() {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var minPieces = [],\n            shortPieces = [],\n            longPieces = [],\n            mixedPieces = [],\n            i,\n            mom,\n            minp,\n            shortp,\n            longp;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, 1]).day(i);\n            minp = regexEscape(this.weekdaysMin(mom, ''));\n            shortp = regexEscape(this.weekdaysShort(mom, ''));\n            longp = regexEscape(this.weekdays(mom, ''));\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n\n        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n\n        this._weekdaysStrictRegex = new RegExp(\n            '^(' + longPieces.join('|') + ')',\n            'i'\n        );\n        this._weekdaysShortStrictRegex = new RegExp(\n            '^(' + shortPieces.join('|') + ')',\n            'i'\n        );\n        this._weekdaysMinStrictRegex = new RegExp(\n            '^(' + minPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n\n    function kFormat() {\n        return this.hours() || 24;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n    addFormatToken('k', ['kk', 2], 0, kFormat);\n\n    addFormatToken('hmm', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('hmmss', 0, 0, function () {\n        return (\n            '' +\n            hFormat.apply(this) +\n            zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2)\n        );\n    });\n\n    addFormatToken('Hmm', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('Hmmss', 0, 0, function () {\n        return (\n            '' +\n            this.hours() +\n            zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2)\n        );\n    });\n\n    function meridiem(token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(\n                this.hours(),\n                this.minutes(),\n                lowercase\n            );\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PRIORITY\n    addUnitPriority('hour', 13);\n\n    // PARSING\n\n    function matchMeridiem(isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a', matchMeridiem);\n    addRegexToken('A', matchMeridiem);\n    addRegexToken('H', match1to2);\n    addRegexToken('h', match1to2);\n    addRegexToken('k', match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], function (input, array, config) {\n        var kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n    });\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        var pos1 = input.length - 4,\n            pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        var pos1 = input.length - 4,\n            pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n\n    // LOCALES\n\n    function localeIsPM(input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return (input + '').toLowerCase().charAt(0) === 'p';\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i,\n        // Setting the hour should keep the time, because the user explicitly\n        // specified which hour they want. So trying to maintain the same hour (in\n        // a new timezone) makes sense. Adding/subtracting hours does not follow\n        // this rule.\n        getSetHour = makeGetSet('Hours', true);\n\n    function localeMeridiem(hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n    var baseConfig = {\n        calendar: defaultCalendar,\n        longDateFormat: defaultLongDateFormat,\n        invalidDate: defaultInvalidDate,\n        ordinal: defaultOrdinal,\n        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n        relativeTime: defaultRelativeTime,\n\n        months: defaultLocaleMonths,\n        monthsShort: defaultLocaleMonthsShort,\n\n        week: defaultLocaleWeek,\n\n        weekdays: defaultLocaleWeekdays,\n        weekdaysMin: defaultLocaleWeekdaysMin,\n        weekdaysShort: defaultLocaleWeekdaysShort,\n\n        meridiemParse: defaultLocaleMeridiemParse,\n    };\n\n    // internal storage for locale config files\n    var locales = {},\n        localeFamilies = {},\n        globalLocale;\n\n    function commonPrefix(arr1, arr2) {\n        var i,\n            minl = Math.min(arr1.length, arr2.length);\n        for (i = 0; i < minl; i += 1) {\n            if (arr1[i] !== arr2[i]) {\n                return i;\n            }\n        }\n        return minl;\n    }\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0,\n            j,\n            next,\n            locale,\n            split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (\n                    next &&\n                    next.length >= j &&\n                    commonPrefix(split, next) >= j - 1\n                ) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return globalLocale;\n    }\n\n    function isLocaleNameSane(name) {\n        // Prevent names that look like filesystem paths, i.e contain '/' or '\\'\n        return name.match('^[^/\\\\\\\\]*$') != null;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null,\n            aliasedRequire;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (\n            locales[name] === undefined &&\n            typeof module !== 'undefined' &&\n            module &&\n            module.exports &&\n            isLocaleNameSane(name)\n        ) {\n            try {\n                oldLocale = globalLocale._abbr;\n                aliasedRequire = require;\n                aliasedRequire('./locale/' + name);\n                getSetGlobalLocale(oldLocale);\n            } catch (e) {\n                // mark as not found to avoid repeating expensive file require call causing high CPU\n                // when trying to find en-US, en_US, en-us for every format call\n                locales[name] = null; // null means not found\n            }\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function getSetGlobalLocale(key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) {\n                data = getLocale(key);\n            } else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            } else {\n                if (typeof console !== 'undefined' && console.warn) {\n                    //warn user if arguments are passed but the locale could not be set\n                    console.warn(\n                        'Locale ' + key + ' not found. Did you forget to load it?'\n                    );\n                }\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale(name, config) {\n        if (config !== null) {\n            var locale,\n                parentConfig = baseConfig;\n            config.abbr = name;\n            if (locales[name] != null) {\n                deprecateSimple(\n                    'defineLocaleOverride',\n                    'use moment.updateLocale(localeName, config) to change ' +\n                        'an existing locale. moment.defineLocale(localeName, ' +\n                        'config) should only be used for creating a new locale ' +\n                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.'\n                );\n                parentConfig = locales[name]._config;\n            } else if (config.parentLocale != null) {\n                if (locales[config.parentLocale] != null) {\n                    parentConfig = locales[config.parentLocale]._config;\n                } else {\n                    locale = loadLocale(config.parentLocale);\n                    if (locale != null) {\n                        parentConfig = locale._config;\n                    } else {\n                        if (!localeFamilies[config.parentLocale]) {\n                            localeFamilies[config.parentLocale] = [];\n                        }\n                        localeFamilies[config.parentLocale].push({\n                            name: name,\n                            config: config,\n                        });\n                        return null;\n                    }\n                }\n            }\n            locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n            if (localeFamilies[name]) {\n                localeFamilies[name].forEach(function (x) {\n                    defineLocale(x.name, x.config);\n                });\n            }\n\n            // backwards compat for now: also set the locale\n            // make sure we set the locale AFTER all child locales have been\n            // created, so we won't end up with the child locale set.\n            getSetGlobalLocale(name);\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    function updateLocale(name, config) {\n        if (config != null) {\n            var locale,\n                tmpLocale,\n                parentConfig = baseConfig;\n\n            if (locales[name] != null && locales[name].parentLocale != null) {\n                // Update existing child locale in-place to avoid memory-leaks\n                locales[name].set(mergeConfigs(locales[name]._config, config));\n            } else {\n                // MERGE\n                tmpLocale = loadLocale(name);\n                if (tmpLocale != null) {\n                    parentConfig = tmpLocale._config;\n                }\n                config = mergeConfigs(parentConfig, config);\n                if (tmpLocale == null) {\n                    // updateLocale is called for creating a new locale\n                    // Set abbr so it will have a name (getters return\n                    // undefined otherwise).\n                    config.abbr = name;\n                }\n                locale = new Locale(config);\n                locale.parentLocale = locales[name];\n                locales[name] = locale;\n            }\n\n            // backwards compat for now: also set the locale\n            getSetGlobalLocale(name);\n        } else {\n            // pass null for config to unupdate, useful for tests\n            if (locales[name] != null) {\n                if (locales[name].parentLocale != null) {\n                    locales[name] = locales[name].parentLocale;\n                    if (name === getSetGlobalLocale()) {\n                        getSetGlobalLocale(name);\n                    }\n                } else if (locales[name] != null) {\n                    delete locales[name];\n                }\n            }\n        }\n        return locales[name];\n    }\n\n    // returns locale data\n    function getLocale(key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    function listLocales() {\n        return keys(locales);\n    }\n\n    function checkOverflow(m) {\n        var overflow,\n            a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH] < 0 || a[MONTH] > 11\n                    ? MONTH\n                    : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH])\n                    ? DATE\n                    : a[HOUR] < 0 ||\n                      a[HOUR] > 24 ||\n                      (a[HOUR] === 24 &&\n                          (a[MINUTE] !== 0 ||\n                              a[SECOND] !== 0 ||\n                              a[MILLISECOND] !== 0))\n                    ? HOUR\n                    : a[MINUTE] < 0 || a[MINUTE] > 59\n                    ? MINUTE\n                    : a[SECOND] < 0 || a[SECOND] > 59\n                    ? SECOND\n                    : a[MILLISECOND] < 0 || a[MILLISECOND] > 999\n                    ? MILLISECOND\n                    : -1;\n\n            if (\n                getParsingFlags(m)._overflowDayOfYear &&\n                (overflow < YEAR || overflow > DATE)\n            ) {\n                overflow = DATE;\n            }\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                overflow = WEEK;\n            }\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                overflow = WEEKDAY;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex =\n            /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n        basicIsoRegex =\n            /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d|))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n        tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/,\n        isoDates = [\n            ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n            ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n            ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n            ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n            ['YYYY-DDD', /\\d{4}-\\d{3}/],\n            ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n            ['YYYYYYMMDD', /[+-]\\d{10}/],\n            ['YYYYMMDD', /\\d{8}/],\n            ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n            ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n            ['YYYYDDD', /\\d{7}/],\n            ['YYYYMM', /\\d{6}/, false],\n            ['YYYY', /\\d{4}/, false],\n        ],\n        // iso time formats and regexes\n        isoTimes = [\n            ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n            ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n            ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n            ['HH:mm', /\\d\\d:\\d\\d/],\n            ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n            ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n            ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n            ['HHmm', /\\d\\d\\d\\d/],\n            ['HH', /\\d\\d/],\n        ],\n        aspNetJsonRegex = /^\\/?Date\\((-?\\d+)/i,\n        // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n        rfc2822 =\n            /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/,\n        obsOffsets = {\n            UT: 0,\n            GMT: 0,\n            EDT: -4 * 60,\n            EST: -5 * 60,\n            CDT: -5 * 60,\n            CST: -6 * 60,\n            MDT: -6 * 60,\n            MST: -7 * 60,\n            PDT: -7 * 60,\n            PST: -8 * 60,\n        };\n\n    // date from iso format\n    function configFromISO(config) {\n        var i,\n            l,\n            string = config._i,\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n            allowTime,\n            dateFormat,\n            timeFormat,\n            tzFormat,\n            isoDatesLen = isoDates.length,\n            isoTimesLen = isoTimes.length;\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n            for (i = 0, l = isoDatesLen; i < l; i++) {\n                if (isoDates[i][1].exec(match[1])) {\n                    dateFormat = isoDates[i][0];\n                    allowTime = isoDates[i][2] !== false;\n                    break;\n                }\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for (i = 0, l = isoTimesLen; i < l; i++) {\n                    if (isoTimes[i][1].exec(match[3])) {\n                        // match[2] should be 'T' or space\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) {\n                    tzFormat = 'Z';\n                } else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    function extractFromRFC2822Strings(\n        yearStr,\n        monthStr,\n        dayStr,\n        hourStr,\n        minuteStr,\n        secondStr\n    ) {\n        var result = [\n            untruncateYear(yearStr),\n            defaultLocaleMonthsShort.indexOf(monthStr),\n            parseInt(dayStr, 10),\n            parseInt(hourStr, 10),\n            parseInt(minuteStr, 10),\n        ];\n\n        if (secondStr) {\n            result.push(parseInt(secondStr, 10));\n        }\n\n        return result;\n    }\n\n    function untruncateYear(yearStr) {\n        var year = parseInt(yearStr, 10);\n        if (year <= 49) {\n            return 2000 + year;\n        } else if (year <= 999) {\n            return 1900 + year;\n        }\n        return year;\n    }\n\n    function preprocessRFC2822(s) {\n        // Remove comments and folding whitespace and replace multiple-spaces with a single space\n        return s\n            .replace(/\\([^()]*\\)|[\\n\\t]/g, ' ')\n            .replace(/(\\s\\s+)/g, ' ')\n            .replace(/^\\s\\s*/, '')\n            .replace(/\\s\\s*$/, '');\n    }\n\n    function checkWeekday(weekdayStr, parsedInput, config) {\n        if (weekdayStr) {\n            // TODO: Replace the vanilla JS Date object with an independent day-of-week check.\n            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n                weekdayActual = new Date(\n                    parsedInput[0],\n                    parsedInput[1],\n                    parsedInput[2]\n                ).getDay();\n            if (weekdayProvided !== weekdayActual) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n        if (obsOffset) {\n            return obsOffsets[obsOffset];\n        } else if (militaryOffset) {\n            // the only allowed military tz is Z\n            return 0;\n        } else {\n            var hm = parseInt(numOffset, 10),\n                m = hm % 100,\n                h = (hm - m) / 100;\n            return h * 60 + m;\n        }\n    }\n\n    // date and time from ref 2822 format\n    function configFromRFC2822(config) {\n        var match = rfc2822.exec(preprocessRFC2822(config._i)),\n            parsedArray;\n        if (match) {\n            parsedArray = extractFromRFC2822Strings(\n                match[4],\n                match[3],\n                match[2],\n                match[5],\n                match[6],\n                match[7]\n            );\n            if (!checkWeekday(match[1], parsedArray, config)) {\n                return;\n            }\n\n            config._a = parsedArray;\n            config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n            config._d = createUTCDate.apply(null, config._a);\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n            getParsingFlags(config).rfc2822 = true;\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from 1) ASP.NET, 2) ISO, 3) RFC 2822 formats, or 4) optional fallback if parsing isn't strict\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        configFromRFC2822(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        if (config._strict) {\n            config._isValid = false;\n        } else {\n            // Final attempt, use Input Fallback\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    hooks.createFromInputFallback = deprecate(\n        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n            'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n            'discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(hooks.now());\n        if (config._useUTC) {\n            return [\n                nowValue.getUTCFullYear(),\n                nowValue.getUTCMonth(),\n                nowValue.getUTCDate(),\n            ];\n        }\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray(config) {\n        var i,\n            date,\n            input = [],\n            currentDate,\n            expectedWeekday,\n            yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear != null) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (\n                config._dayOfYear > daysInYear(yearToUse) ||\n                config._dayOfYear === 0\n            ) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] =\n                config._a[i] == null ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (\n            config._a[HOUR] === 24 &&\n            config._a[MINUTE] === 0 &&\n            config._a[SECOND] === 0 &&\n            config._a[MILLISECOND] === 0\n        ) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(\n            null,\n            input\n        );\n        expectedWeekday = config._useUTC\n            ? config._d.getUTCDay()\n            : config._d.getDay();\n\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n\n        // check for mismatching day of week\n        if (\n            config._w &&\n            typeof config._w.d !== 'undefined' &&\n            config._w.d !== expectedWeekday\n        ) {\n            getParsingFlags(config).weekdayMismatch = true;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(\n                w.GG,\n                config._a[YEAR],\n                weekOfYear(createLocal(), 1, 4).year\n            );\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) {\n                weekdayOverflow = true;\n            }\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            curWeek = weekOfYear(createLocal(), dow, doy);\n\n            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n            // Default to current week.\n            week = defaults(w.w, curWeek.week);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) {\n                    weekdayOverflow = true;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from beginning of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) {\n                    weekdayOverflow = true;\n                }\n            } else {\n                // default to beginning of week\n                weekday = dow;\n            }\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n            getParsingFlags(config)._overflowWeeks = true;\n        } else if (weekdayOverflow != null) {\n            getParsingFlags(config)._overflowWeekday = true;\n        } else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n\n    // constant that refers to the ISO standard\n    hooks.ISO_8601 = function () {};\n\n    // constant that refers to the RFC 2822 form\n    hooks.RFC_2822 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n        if (config._f === hooks.RFC_2822) {\n            configFromRFC2822(config);\n            return;\n        }\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i,\n            parsedInput,\n            tokens,\n            token,\n            skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0,\n            era,\n            tokenLen;\n\n        tokens =\n            expandFormat(config._f, config._locale).match(formattingTokens) || [];\n        tokenLen = tokens.length;\n        for (i = 0; i < tokenLen; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) ||\n                [])[0];\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(\n                    string.indexOf(parsedInput) + parsedInput.length\n                );\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                } else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            } else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver =\n            stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (\n            config._a[HOUR] <= 12 &&\n            getParsingFlags(config).bigHour === true &&\n            config._a[HOUR] > 0\n        ) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n\n        getParsingFlags(config).parsedDateParts = config._a.slice(0);\n        getParsingFlags(config).meridiem = config._meridiem;\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(\n            config._locale,\n            config._a[HOUR],\n            config._meridiem\n        );\n\n        // handle era\n        era = getParsingFlags(config).era;\n        if (era !== null) {\n            config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR]);\n        }\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n    function meridiemFixWrap(locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n            scoreToBeat,\n            i,\n            currentScore,\n            validFormatFound,\n            bestFormatIsValid = false,\n            configfLen = config._f.length;\n\n        if (configfLen === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < configfLen; i++) {\n            currentScore = 0;\n            validFormatFound = false;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (isValid(tempConfig)) {\n                validFormatFound = true;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (!bestFormatIsValid) {\n                if (\n                    scoreToBeat == null ||\n                    currentScore < scoreToBeat ||\n                    validFormatFound\n                ) {\n                    scoreToBeat = currentScore;\n                    bestMoment = tempConfig;\n                    if (validFormatFound) {\n                        bestFormatIsValid = true;\n                    }\n                }\n            } else {\n                if (currentScore < scoreToBeat) {\n                    scoreToBeat = currentScore;\n                    bestMoment = tempConfig;\n                }\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i),\n            dayOrDate = i.day === undefined ? i.date : i.day;\n        config._a = map(\n            [i.year, i.month, dayOrDate, i.hour, i.minute, i.second, i.millisecond],\n            function (obj) {\n                return obj && parseInt(obj, 10);\n            }\n        );\n\n        configFromArray(config);\n    }\n\n    function createFromConfig(config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig(config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return createInvalid({ nullInput: true });\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isDate(input)) {\n            config._d = input;\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        } else {\n            configFromInput(config);\n        }\n\n        if (!isValid(config)) {\n            config._d = null;\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (isUndefined(input)) {\n            config._d = new Date(hooks.now());\n        } else if (isDate(input)) {\n            config._d = new Date(input.valueOf());\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (isObject(input)) {\n            configFromObject(config);\n        } else if (isNumber(input)) {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC(input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (format === true || format === false) {\n            strict = format;\n            format = undefined;\n        }\n\n        if (locale === true || locale === false) {\n            strict = locale;\n            locale = undefined;\n        }\n\n        if (\n            (isObject(input) && isObjectEmpty(input)) ||\n            (isArray(input) && input.length === 0)\n        ) {\n            input = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function createLocal(input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n            'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n            function () {\n                var other = createLocal.apply(null, arguments);\n                if (this.isValid() && other.isValid()) {\n                    return other < this ? this : other;\n                } else {\n                    return createInvalid();\n                }\n            }\n        ),\n        prototypeMax = deprecate(\n            'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n            function () {\n                var other = createLocal.apply(null, arguments);\n                if (this.isValid() && other.isValid()) {\n                    return other > this ? this : other;\n                } else {\n                    return createInvalid();\n                }\n            }\n        );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min() {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max() {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n        return Date.now ? Date.now() : +new Date();\n    };\n\n    var ordering = [\n        'year',\n        'quarter',\n        'month',\n        'week',\n        'day',\n        'hour',\n        'minute',\n        'second',\n        'millisecond',\n    ];\n\n    function isDurationValid(m) {\n        var key,\n            unitHasDecimal = false,\n            i,\n            orderLen = ordering.length;\n        for (key in m) {\n            if (\n                hasOwnProp(m, key) &&\n                !(\n                    indexOf.call(ordering, key) !== -1 &&\n                    (m[key] == null || !isNaN(m[key]))\n                )\n            ) {\n                return false;\n            }\n        }\n\n        for (i = 0; i < orderLen; ++i) {\n            if (m[ordering[i]]) {\n                if (unitHasDecimal) {\n                    return false; // only allow non-integers for smallest unit\n                }\n                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                    unitHasDecimal = true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function isValid$1() {\n        return this._isValid;\n    }\n\n    function createInvalid$1() {\n        return createDuration(NaN);\n    }\n\n    function Duration(duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        this._isValid = isDurationValid(normalizedInput);\n\n        // representation for dateAddRemove\n        this._milliseconds =\n            +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days + weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months + quarters * 3 + years * 12;\n\n        this._data = {};\n\n        this._locale = getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration(obj) {\n        return obj instanceof Duration;\n    }\n\n    function absRound(number) {\n        if (number < 0) {\n            return Math.round(-1 * number) * -1;\n        } else {\n            return Math.round(number);\n        }\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if (\n                (dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))\n            ) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    // FORMATTING\n\n    function offset(token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset(),\n                sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return (\n                sign +\n                zeroFill(~~(offset / 60), 2) +\n                separator +\n                zeroFill(~~offset % 60, 2)\n            );\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z', matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n        var matches = (string || '').match(matcher),\n            chunk,\n            parts,\n            minutes;\n\n        if (matches === null) {\n            return null;\n        }\n\n        chunk = matches[matches.length - 1] || [];\n        parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff =\n                (isMoment(input) || isDate(input)\n                    ? input.valueOf()\n                    : createLocal(input).valueOf()) - res.valueOf();\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(res._d.valueOf() + diff);\n            hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return createLocal(input).local();\n        }\n    }\n\n    function getDateOffset(m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset());\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset(input, keepLocalTime, keepMinutes) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(matchShortOffset, input);\n                if (input === null) {\n                    return this;\n                }\n            } else if (Math.abs(input) < 16 && !keepMinutes) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    addSubtract(\n                        this,\n                        createDuration(input - offset, 'm'),\n                        1,\n                        false\n                    );\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone(input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC(keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal(keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset() {\n        if (this._tzm != null) {\n            this.utcOffset(this._tzm, false, true);\n        } else if (typeof this._i === 'string') {\n            var tZone = offsetFromString(matchOffset, this._i);\n            if (tZone != null) {\n                this.utcOffset(tZone);\n            } else {\n                this.utcOffset(0, true);\n            }\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset(input) {\n        if (!this.isValid()) {\n            return false;\n        }\n        input = input ? createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime() {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted() {\n        if (!isUndefined(this._isDSTShifted)) {\n            return this._isDSTShifted;\n        }\n\n        var c = {},\n            other;\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n            this._isDSTShifted =\n                this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal() {\n        return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset() {\n        return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc() {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n\n    // ASP.NET json date format regex\n    var aspNetRegex = /^(-|\\+)?(?:(\\d*)[. ])?(\\d+):(\\d+)(?::(\\d+)(\\.\\d*)?)?$/,\n        // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n        // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n        // and further modified to allow for strings containing both week and day\n        isoRegex =\n            /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n    function createDuration(input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms: input._milliseconds,\n                d: input._days,\n                M: input._months,\n            };\n        } else if (isNumber(input) || !isNaN(+input)) {\n            duration = {};\n            if (key) {\n                duration[key] = +input;\n            } else {\n                duration.milliseconds = +input;\n            }\n        } else if ((match = aspNetRegex.exec(input))) {\n            sign = match[1] === '-' ? -1 : 1;\n            duration = {\n                y: 0,\n                d: toInt(match[DATE]) * sign,\n                h: toInt(match[HOUR]) * sign,\n                m: toInt(match[MINUTE]) * sign,\n                s: toInt(match[SECOND]) * sign,\n                ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign, // the millisecond decimal point is included in the match\n            };\n        } else if ((match = isoRegex.exec(input))) {\n            sign = match[1] === '-' ? -1 : 1;\n            duration = {\n                y: parseIso(match[2], sign),\n                M: parseIso(match[3], sign),\n                w: parseIso(match[4], sign),\n                d: parseIso(match[5], sign),\n                h: parseIso(match[6], sign),\n                m: parseIso(match[7], sign),\n                s: parseIso(match[8], sign),\n            };\n        } else if (duration == null) {\n            // checks for null or undefined\n            duration = {};\n        } else if (\n            typeof duration === 'object' &&\n            ('from' in duration || 'to' in duration)\n        ) {\n            diffRes = momentsDifference(\n                createLocal(duration.from),\n                createLocal(duration.to)\n            );\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        if (isDuration(input) && hasOwnProp(input, '_isValid')) {\n            ret._isValid = input._isValid;\n        }\n\n        return ret;\n    }\n\n    createDuration.fn = Duration.prototype;\n    createDuration.invalid = createInvalid$1;\n\n    function parseIso(inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {};\n\n        res.months =\n            other.month() - base.month() + (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +base.clone().add(res.months, 'M');\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) {\n            return { milliseconds: 0, months: 0 };\n        }\n\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(\n                    name,\n                    'moment().' +\n                        name +\n                        '(period, number) is deprecated. Please use moment().' +\n                        name +\n                        '(number, period). ' +\n                        'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.'\n                );\n                tmp = val;\n                val = period;\n                period = tmp;\n            }\n\n            dur = createDuration(val, period);\n            addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addSubtract(mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = absRound(duration._days),\n            months = absRound(duration._months);\n\n        if (!mom.isValid()) {\n            // No op\n            return;\n        }\n\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (months) {\n            setMonth(mom, get(mom, 'Month') + months * isAdding);\n        }\n        if (days) {\n            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n        }\n        if (milliseconds) {\n            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n        }\n        if (updateOffset) {\n            hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add = createAdder(1, 'add'),\n        subtract = createAdder(-1, 'subtract');\n\n    function isString(input) {\n        return typeof input === 'string' || input instanceof String;\n    }\n\n    // type MomentInput = Moment | Date | string | number | (number | string)[] | MomentInputObject | void; // null | undefined\n    function isMomentInput(input) {\n        return (\n            isMoment(input) ||\n            isDate(input) ||\n            isString(input) ||\n            isNumber(input) ||\n            isNumberOrStringArray(input) ||\n            isMomentInputObject(input) ||\n            input === null ||\n            input === undefined\n        );\n    }\n\n    function isMomentInputObject(input) {\n        var objectTest = isObject(input) && !isObjectEmpty(input),\n            propertyTest = false,\n            properties = [\n                'years',\n                'year',\n                'y',\n                'months',\n                'month',\n                'M',\n                'days',\n                'day',\n                'd',\n                'dates',\n                'date',\n                'D',\n                'hours',\n                'hour',\n                'h',\n                'minutes',\n                'minute',\n                'm',\n                'seconds',\n                'second',\n                's',\n                'milliseconds',\n                'millisecond',\n                'ms',\n            ],\n            i,\n            property,\n            propertyLen = properties.length;\n\n        for (i = 0; i < propertyLen; i += 1) {\n            property = properties[i];\n            propertyTest = propertyTest || hasOwnProp(input, property);\n        }\n\n        return objectTest && propertyTest;\n    }\n\n    function isNumberOrStringArray(input) {\n        var arrayTest = isArray(input),\n            dataTypeTest = false;\n        if (arrayTest) {\n            dataTypeTest =\n                input.filter(function (item) {\n                    return !isNumber(item) && isString(input);\n                }).length === 0;\n        }\n        return arrayTest && dataTypeTest;\n    }\n\n    function isCalendarSpec(input) {\n        var objectTest = isObject(input) && !isObjectEmpty(input),\n            propertyTest = false,\n            properties = [\n                'sameDay',\n                'nextDay',\n                'lastDay',\n                'nextWeek',\n                'lastWeek',\n                'sameElse',\n            ],\n            i,\n            property;\n\n        for (i = 0; i < properties.length; i += 1) {\n            property = properties[i];\n            propertyTest = propertyTest || hasOwnProp(input, property);\n        }\n\n        return objectTest && propertyTest;\n    }\n\n    function getCalendarFormat(myMoment, now) {\n        var diff = myMoment.diff(now, 'days', true);\n        return diff < -6\n            ? 'sameElse'\n            : diff < -1\n            ? 'lastWeek'\n            : diff < 0\n            ? 'lastDay'\n            : diff < 1\n            ? 'sameDay'\n            : diff < 2\n            ? 'nextDay'\n            : diff < 7\n            ? 'nextWeek'\n            : 'sameElse';\n    }\n\n    function calendar$1(time, formats) {\n        // Support for single parameter, formats only overload to the calendar function\n        if (arguments.length === 1) {\n            if (!arguments[0]) {\n                time = undefined;\n                formats = undefined;\n            } else if (isMomentInput(arguments[0])) {\n                time = arguments[0];\n                formats = undefined;\n            } else if (isCalendarSpec(arguments[0])) {\n                formats = arguments[0];\n                time = undefined;\n            }\n        }\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            format = hooks.calendarFormat(this, sod) || 'sameElse',\n            output =\n                formats &&\n                (isFunction(formats[format])\n                    ? formats[format].call(this, now)\n                    : formats[format]);\n\n        return this.format(\n            output || this.localeData().calendar(format, this, createLocal(now))\n        );\n    }\n\n    function clone() {\n        return new Moment(this);\n    }\n\n    function isAfter(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() > localInput.valueOf();\n        } else {\n            return localInput.valueOf() < this.clone().startOf(units).valueOf();\n        }\n    }\n\n    function isBefore(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() < localInput.valueOf();\n        } else {\n            return this.clone().endOf(units).valueOf() < localInput.valueOf();\n        }\n    }\n\n    function isBetween(from, to, units, inclusivity) {\n        var localFrom = isMoment(from) ? from : createLocal(from),\n            localTo = isMoment(to) ? to : createLocal(to);\n        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n            return false;\n        }\n        inclusivity = inclusivity || '()';\n        return (\n            (inclusivity[0] === '('\n                ? this.isAfter(localFrom, units)\n                : !this.isBefore(localFrom, units)) &&\n            (inclusivity[1] === ')'\n                ? this.isBefore(localTo, units)\n                : !this.isAfter(localTo, units))\n        );\n    }\n\n    function isSame(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input),\n            inputMs;\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() === localInput.valueOf();\n        } else {\n            inputMs = localInput.valueOf();\n            return (\n                this.clone().startOf(units).valueOf() <= inputMs &&\n                inputMs <= this.clone().endOf(units).valueOf()\n            );\n        }\n    }\n\n    function isSameOrAfter(input, units) {\n        return this.isSame(input, units) || this.isAfter(input, units);\n    }\n\n    function isSameOrBefore(input, units) {\n        return this.isSame(input, units) || this.isBefore(input, units);\n    }\n\n    function diff(input, units, asFloat) {\n        var that, zoneDelta, output;\n\n        if (!this.isValid()) {\n            return NaN;\n        }\n\n        that = cloneWithOffset(input, this);\n\n        if (!that.isValid()) {\n            return NaN;\n        }\n\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n        units = normalizeUnits(units);\n\n        switch (units) {\n            case 'year':\n                output = monthDiff(this, that) / 12;\n                break;\n            case 'month':\n                output = monthDiff(this, that);\n                break;\n            case 'quarter':\n                output = monthDiff(this, that) / 3;\n                break;\n            case 'second':\n                output = (this - that) / 1e3;\n                break; // 1000\n            case 'minute':\n                output = (this - that) / 6e4;\n                break; // 1000 * 60\n            case 'hour':\n                output = (this - that) / 36e5;\n                break; // 1000 * 60 * 60\n            case 'day':\n                output = (this - that - zoneDelta) / 864e5;\n                break; // 1000 * 60 * 60 * 24, negate dst\n            case 'week':\n                output = (this - that - zoneDelta) / 6048e5;\n                break; // 1000 * 60 * 60 * 24 * 7, negate dst\n            default:\n                output = this - that;\n        }\n\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff(a, b) {\n        if (a.date() < b.date()) {\n            // end-of-month calculations work correct when the start month has more\n            // days than the end month.\n            return -monthDiff(b, a);\n        }\n        // difference in months\n        var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2,\n            adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        //check for negative zero, return zero if negative zero\n        return -(wholeMonthDiff + adjust) || 0;\n    }\n\n    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n    function toString() {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function toISOString(keepOffset) {\n        if (!this.isValid()) {\n            return null;\n        }\n        var utc = keepOffset !== true,\n            m = utc ? this.clone().utc() : this;\n        if (m.year() < 0 || m.year() > 9999) {\n            return formatMoment(\n                m,\n                utc\n                    ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]'\n                    : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ'\n            );\n        }\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            if (utc) {\n                return this.toDate().toISOString();\n            } else {\n                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000)\n                    .toISOString()\n                    .replace('Z', formatMoment(m, 'Z'));\n            }\n        }\n        return formatMoment(\n            m,\n            utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ'\n        );\n    }\n\n    /**\n     * Return a human readable representation of a moment that can\n     * also be evaluated to get a new moment which is the same\n     *\n     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n     */\n    function inspect() {\n        if (!this.isValid()) {\n            return 'moment.invalid(/* ' + this._i + ' */)';\n        }\n        var func = 'moment',\n            zone = '',\n            prefix,\n            year,\n            datetime,\n            suffix;\n        if (!this.isLocal()) {\n            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n            zone = 'Z';\n        }\n        prefix = '[' + func + '(\"]';\n        year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n        datetime = '-MM-DD[T]HH:mm:ss.SSS';\n        suffix = zone + '[\")]';\n\n        return this.format(prefix + year + datetime + suffix);\n    }\n\n    function format(inputString) {\n        if (!inputString) {\n            inputString = this.isUtc()\n                ? hooks.defaultFormatUtc\n                : hooks.defaultFormat;\n        }\n        var output = formatMoment(this, inputString);\n        return this.localeData().postformat(output);\n    }\n\n    function from(time, withoutSuffix) {\n        if (\n            this.isValid() &&\n            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())\n        ) {\n            return createDuration({ to: this, from: time })\n                .locale(this.locale())\n                .humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function fromNow(withoutSuffix) {\n        return this.from(createLocal(), withoutSuffix);\n    }\n\n    function to(time, withoutSuffix) {\n        if (\n            this.isValid() &&\n            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())\n        ) {\n            return createDuration({ from: this, to: time })\n                .locale(this.locale())\n                .humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function toNow(withoutSuffix) {\n        return this.to(createLocal(), withoutSuffix);\n    }\n\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale(key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData() {\n        return this._locale;\n    }\n\n    var MS_PER_SECOND = 1000,\n        MS_PER_MINUTE = 60 * MS_PER_SECOND,\n        MS_PER_HOUR = 60 * MS_PER_MINUTE,\n        MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;\n\n    // actual modulo - handles negative numbers (for dates before 1970):\n    function mod$1(dividend, divisor) {\n        return ((dividend % divisor) + divisor) % divisor;\n    }\n\n    function localStartOfDate(y, m, d) {\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return new Date(y, m, d).valueOf();\n        }\n    }\n\n    function utcStartOfDate(y, m, d) {\n        // Date.UTC remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return Date.UTC(y, m, d);\n        }\n    }\n\n    function startOf(units) {\n        var time, startOfDate;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year(), 0, 1);\n                break;\n            case 'quarter':\n                time = startOfDate(\n                    this.year(),\n                    this.month() - (this.month() % 3),\n                    1\n                );\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month(), 1);\n                break;\n            case 'week':\n                time = startOfDate(\n                    this.year(),\n                    this.month(),\n                    this.date() - this.weekday()\n                );\n                break;\n            case 'isoWeek':\n                time = startOfDate(\n                    this.year(),\n                    this.month(),\n                    this.date() - (this.isoWeekday() - 1)\n                );\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date());\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time -= mod$1(\n                    time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),\n                    MS_PER_HOUR\n                );\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_MINUTE);\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_SECOND);\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function endOf(units) {\n        var time, startOfDate;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year() + 1, 0, 1) - 1;\n                break;\n            case 'quarter':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month() - (this.month() % 3) + 3,\n                        1\n                    ) - 1;\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n                break;\n            case 'week':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month(),\n                        this.date() - this.weekday() + 7\n                    ) - 1;\n                break;\n            case 'isoWeek':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month(),\n                        this.date() - (this.isoWeekday() - 1) + 7\n                    ) - 1;\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time +=\n                    MS_PER_HOUR -\n                    mod$1(\n                        time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),\n                        MS_PER_HOUR\n                    ) -\n                    1;\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function valueOf() {\n        return this._d.valueOf() - (this._offset || 0) * 60000;\n    }\n\n    function unix() {\n        return Math.floor(this.valueOf() / 1000);\n    }\n\n    function toDate() {\n        return new Date(this.valueOf());\n    }\n\n    function toArray() {\n        var m = this;\n        return [\n            m.year(),\n            m.month(),\n            m.date(),\n            m.hour(),\n            m.minute(),\n            m.second(),\n            m.millisecond(),\n        ];\n    }\n\n    function toObject() {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds(),\n        };\n    }\n\n    function toJSON() {\n        // new Date(NaN).toJSON() === null\n        return this.isValid() ? this.toISOString() : null;\n    }\n\n    function isValid$2() {\n        return isValid(this);\n    }\n\n    function parsingFlags() {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt() {\n        return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict,\n        };\n    }\n\n    addFormatToken('N', 0, 0, 'eraAbbr');\n    addFormatToken('NN', 0, 0, 'eraAbbr');\n    addFormatToken('NNN', 0, 0, 'eraAbbr');\n    addFormatToken('NNNN', 0, 0, 'eraName');\n    addFormatToken('NNNNN', 0, 0, 'eraNarrow');\n\n    addFormatToken('y', ['y', 1], 'yo', 'eraYear');\n    addFormatToken('y', ['yy', 2], 0, 'eraYear');\n    addFormatToken('y', ['yyy', 3], 0, 'eraYear');\n    addFormatToken('y', ['yyyy', 4], 0, 'eraYear');\n\n    addRegexToken('N', matchEraAbbr);\n    addRegexToken('NN', matchEraAbbr);\n    addRegexToken('NNN', matchEraAbbr);\n    addRegexToken('NNNN', matchEraName);\n    addRegexToken('NNNNN', matchEraNarrow);\n\n    addParseToken(\n        ['N', 'NN', 'NNN', 'NNNN', 'NNNNN'],\n        function (input, array, config, token) {\n            var era = config._locale.erasParse(input, token, config._strict);\n            if (era) {\n                getParsingFlags(config).era = era;\n            } else {\n                getParsingFlags(config).invalidEra = input;\n            }\n        }\n    );\n\n    addRegexToken('y', matchUnsigned);\n    addRegexToken('yy', matchUnsigned);\n    addRegexToken('yyy', matchUnsigned);\n    addRegexToken('yyyy', matchUnsigned);\n    addRegexToken('yo', matchEraYearOrdinal);\n\n    addParseToken(['y', 'yy', 'yyy', 'yyyy'], YEAR);\n    addParseToken(['yo'], function (input, array, config, token) {\n        var match;\n        if (config._locale._eraYearOrdinalRegex) {\n            match = input.match(config._locale._eraYearOrdinalRegex);\n        }\n\n        if (config._locale.eraYearOrdinalParse) {\n            array[YEAR] = config._locale.eraYearOrdinalParse(input, match);\n        } else {\n            array[YEAR] = parseInt(input, 10);\n        }\n    });\n\n    function localeEras(m, format) {\n        var i,\n            l,\n            date,\n            eras = this._eras || getLocale('en')._eras;\n        for (i = 0, l = eras.length; i < l; ++i) {\n            switch (typeof eras[i].since) {\n                case 'string':\n                    // truncate time\n                    date = hooks(eras[i].since).startOf('day');\n                    eras[i].since = date.valueOf();\n                    break;\n            }\n\n            switch (typeof eras[i].until) {\n                case 'undefined':\n                    eras[i].until = +Infinity;\n                    break;\n                case 'string':\n                    // truncate time\n                    date = hooks(eras[i].until).startOf('day').valueOf();\n                    eras[i].until = date.valueOf();\n                    break;\n            }\n        }\n        return eras;\n    }\n\n    function localeErasParse(eraName, format, strict) {\n        var i,\n            l,\n            eras = this.eras(),\n            name,\n            abbr,\n            narrow;\n        eraName = eraName.toUpperCase();\n\n        for (i = 0, l = eras.length; i < l; ++i) {\n            name = eras[i].name.toUpperCase();\n            abbr = eras[i].abbr.toUpperCase();\n            narrow = eras[i].narrow.toUpperCase();\n\n            if (strict) {\n                switch (format) {\n                    case 'N':\n                    case 'NN':\n                    case 'NNN':\n                        if (abbr === eraName) {\n                            return eras[i];\n                        }\n                        break;\n\n                    case 'NNNN':\n                        if (name === eraName) {\n                            return eras[i];\n                        }\n                        break;\n\n                    case 'NNNNN':\n                        if (narrow === eraName) {\n                            return eras[i];\n                        }\n                        break;\n                }\n            } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {\n                return eras[i];\n            }\n        }\n    }\n\n    function localeErasConvertYear(era, year) {\n        var dir = era.since <= era.until ? +1 : -1;\n        if (year === undefined) {\n            return hooks(era.since).year();\n        } else {\n            return hooks(era.since).year() + (year - era.offset) * dir;\n        }\n    }\n\n    function getEraName() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].name;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].name;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraNarrow() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].narrow;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].narrow;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraAbbr() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].abbr;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].abbr;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraYear() {\n        var i,\n            l,\n            dir,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            dir = eras[i].since <= eras[i].until ? +1 : -1;\n\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (\n                (eras[i].since <= val && val <= eras[i].until) ||\n                (eras[i].until <= val && val <= eras[i].since)\n            ) {\n                return (\n                    (this.year() - hooks(eras[i].since).year()) * dir +\n                    eras[i].offset\n                );\n            }\n        }\n\n        return this.year();\n    }\n\n    function erasNameRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasNameRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasNameRegex : this._erasRegex;\n    }\n\n    function erasAbbrRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasAbbrRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasAbbrRegex : this._erasRegex;\n    }\n\n    function erasNarrowRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasNarrowRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasNarrowRegex : this._erasRegex;\n    }\n\n    function matchEraAbbr(isStrict, locale) {\n        return locale.erasAbbrRegex(isStrict);\n    }\n\n    function matchEraName(isStrict, locale) {\n        return locale.erasNameRegex(isStrict);\n    }\n\n    function matchEraNarrow(isStrict, locale) {\n        return locale.erasNarrowRegex(isStrict);\n    }\n\n    function matchEraYearOrdinal(isStrict, locale) {\n        return locale._eraYearOrdinalRegex || matchUnsigned;\n    }\n\n    function computeErasParse() {\n        var abbrPieces = [],\n            namePieces = [],\n            narrowPieces = [],\n            mixedPieces = [],\n            i,\n            l,\n            eras = this.eras();\n\n        for (i = 0, l = eras.length; i < l; ++i) {\n            namePieces.push(regexEscape(eras[i].name));\n            abbrPieces.push(regexEscape(eras[i].abbr));\n            narrowPieces.push(regexEscape(eras[i].narrow));\n\n            mixedPieces.push(regexEscape(eras[i].name));\n            mixedPieces.push(regexEscape(eras[i].abbr));\n            mixedPieces.push(regexEscape(eras[i].narrow));\n        }\n\n        this._erasRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._erasNameRegex = new RegExp('^(' + namePieces.join('|') + ')', 'i');\n        this._erasAbbrRegex = new RegExp('^(' + abbrPieces.join('|') + ')', 'i');\n        this._erasNarrowRegex = new RegExp(\n            '^(' + narrowPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken(token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg', 'weekYear');\n    addWeekYearFormatToken('ggggg', 'weekYear');\n    addWeekYearFormatToken('GGGG', 'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PRIORITY\n\n    addUnitPriority('weekYear', 1);\n    addUnitPriority('isoWeekYear', 1);\n\n    // PARSING\n\n    addRegexToken('G', matchSigned);\n    addRegexToken('g', matchSigned);\n    addRegexToken('GG', match1to2, match2);\n    addRegexToken('gg', match1to2, match2);\n    addRegexToken('GGGG', match1to4, match4);\n    addRegexToken('gggg', match1to4, match4);\n    addRegexToken('GGGGG', match1to6, match6);\n    addRegexToken('ggggg', match1to6, match6);\n\n    addWeekParseToken(\n        ['gggg', 'ggggg', 'GGGG', 'GGGGG'],\n        function (input, week, config, token) {\n            week[token.substr(0, 2)] = toInt(input);\n        }\n    );\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = hooks.parseTwoDigitYear(input);\n    });\n\n    // MOMENTS\n\n    function getSetWeekYear(input) {\n        return getSetWeekYearHelper.call(\n            this,\n            input,\n            this.week(),\n            this.weekday(),\n            this.localeData()._week.dow,\n            this.localeData()._week.doy\n        );\n    }\n\n    function getSetISOWeekYear(input) {\n        return getSetWeekYearHelper.call(\n            this,\n            input,\n            this.isoWeek(),\n            this.isoWeekday(),\n            1,\n            4\n        );\n    }\n\n    function getISOWeeksInYear() {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getISOWeeksInISOWeekYear() {\n        return weeksInYear(this.isoWeekYear(), 1, 4);\n    }\n\n    function getWeeksInYear() {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getWeeksInWeekYear() {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) {\n            return weekOfYear(this, dow, doy).year;\n        } else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) {\n                week = weeksTarget;\n            }\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PRIORITY\n\n    addUnitPriority('quarter', 7);\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter(input) {\n        return input == null\n            ? Math.ceil((this.month() + 1) / 3)\n            : this.month((input - 1) * 3 + (this.month() % 3));\n    }\n\n    // FORMATTING\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PRIORITY\n    addUnitPriority('date', 9);\n\n    // PARSING\n\n    addRegexToken('D', match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        return isStrict\n            ? locale._dayOfMonthOrdinalParse || locale._ordinalParse\n            : locale._dayOfMonthOrdinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PRIORITY\n    addUnitPriority('dayOfYear', 4);\n\n    // PARSING\n\n    addRegexToken('DDD', match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    // MOMENTS\n\n    function getSetDayOfYear(input) {\n        var dayOfYear =\n            Math.round(\n                (this.clone().startOf('day') - this.clone().startOf('year')) / 864e5\n            ) + 1;\n        return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PRIORITY\n\n    addUnitPriority('minute', 14);\n\n    // PARSING\n\n    addRegexToken('m', match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PRIORITY\n\n    addUnitPriority('second', 15);\n\n    // PARSING\n\n    addRegexToken('s', match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PRIORITY\n\n    addUnitPriority('millisecond', 16);\n\n    // PARSING\n\n    addRegexToken('S', match1to3, match1);\n    addRegexToken('SS', match1to3, match2);\n    addRegexToken('SSS', match1to3, match3);\n\n    var token, getSetMillisecond;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n\n    getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    // FORMATTING\n\n    addFormatToken('z', 0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr() {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName() {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var proto = Moment.prototype;\n\n    proto.add = add;\n    proto.calendar = calendar$1;\n    proto.clone = clone;\n    proto.diff = diff;\n    proto.endOf = endOf;\n    proto.format = format;\n    proto.from = from;\n    proto.fromNow = fromNow;\n    proto.to = to;\n    proto.toNow = toNow;\n    proto.get = stringGet;\n    proto.invalidAt = invalidAt;\n    proto.isAfter = isAfter;\n    proto.isBefore = isBefore;\n    proto.isBetween = isBetween;\n    proto.isSame = isSame;\n    proto.isSameOrAfter = isSameOrAfter;\n    proto.isSameOrBefore = isSameOrBefore;\n    proto.isValid = isValid$2;\n    proto.lang = lang;\n    proto.locale = locale;\n    proto.localeData = localeData;\n    proto.max = prototypeMax;\n    proto.min = prototypeMin;\n    proto.parsingFlags = parsingFlags;\n    proto.set = stringSet;\n    proto.startOf = startOf;\n    proto.subtract = subtract;\n    proto.toArray = toArray;\n    proto.toObject = toObject;\n    proto.toDate = toDate;\n    proto.toISOString = toISOString;\n    proto.inspect = inspect;\n    if (typeof Symbol !== 'undefined' && Symbol.for != null) {\n        proto[Symbol.for('nodejs.util.inspect.custom')] = function () {\n            return 'Moment<' + this.format() + '>';\n        };\n    }\n    proto.toJSON = toJSON;\n    proto.toString = toString;\n    proto.unix = unix;\n    proto.valueOf = valueOf;\n    proto.creationData = creationData;\n    proto.eraName = getEraName;\n    proto.eraNarrow = getEraNarrow;\n    proto.eraAbbr = getEraAbbr;\n    proto.eraYear = getEraYear;\n    proto.year = getSetYear;\n    proto.isLeapYear = getIsLeapYear;\n    proto.weekYear = getSetWeekYear;\n    proto.isoWeekYear = getSetISOWeekYear;\n    proto.quarter = proto.quarters = getSetQuarter;\n    proto.month = getSetMonth;\n    proto.daysInMonth = getDaysInMonth;\n    proto.week = proto.weeks = getSetWeek;\n    proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n    proto.weeksInYear = getWeeksInYear;\n    proto.weeksInWeekYear = getWeeksInWeekYear;\n    proto.isoWeeksInYear = getISOWeeksInYear;\n    proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;\n    proto.date = getSetDayOfMonth;\n    proto.day = proto.days = getSetDayOfWeek;\n    proto.weekday = getSetLocaleDayOfWeek;\n    proto.isoWeekday = getSetISODayOfWeek;\n    proto.dayOfYear = getSetDayOfYear;\n    proto.hour = proto.hours = getSetHour;\n    proto.minute = proto.minutes = getSetMinute;\n    proto.second = proto.seconds = getSetSecond;\n    proto.millisecond = proto.milliseconds = getSetMillisecond;\n    proto.utcOffset = getSetOffset;\n    proto.utc = setOffsetToUTC;\n    proto.local = setOffsetToLocal;\n    proto.parseZone = setOffsetToParsedOffset;\n    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    proto.isDST = isDaylightSavingTime;\n    proto.isLocal = isLocal;\n    proto.isUtcOffset = isUtcOffset;\n    proto.isUtc = isUtc;\n    proto.isUTC = isUtc;\n    proto.zoneAbbr = getZoneAbbr;\n    proto.zoneName = getZoneName;\n    proto.dates = deprecate(\n        'dates accessor is deprecated. Use date instead.',\n        getSetDayOfMonth\n    );\n    proto.months = deprecate(\n        'months accessor is deprecated. Use month instead',\n        getSetMonth\n    );\n    proto.years = deprecate(\n        'years accessor is deprecated. Use year instead',\n        getSetYear\n    );\n    proto.zone = deprecate(\n        'moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',\n        getSetZone\n    );\n    proto.isDSTShifted = deprecate(\n        'isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',\n        isDaylightSavingTimeShifted\n    );\n\n    function createUnix(input) {\n        return createLocal(input * 1000);\n    }\n\n    function createInZone() {\n        return createLocal.apply(null, arguments).parseZone();\n    }\n\n    function preParsePostFormat(string) {\n        return string;\n    }\n\n    var proto$1 = Locale.prototype;\n\n    proto$1.calendar = calendar;\n    proto$1.longDateFormat = longDateFormat;\n    proto$1.invalidDate = invalidDate;\n    proto$1.ordinal = ordinal;\n    proto$1.preparse = preParsePostFormat;\n    proto$1.postformat = preParsePostFormat;\n    proto$1.relativeTime = relativeTime;\n    proto$1.pastFuture = pastFuture;\n    proto$1.set = set;\n    proto$1.eras = localeEras;\n    proto$1.erasParse = localeErasParse;\n    proto$1.erasConvertYear = localeErasConvertYear;\n    proto$1.erasAbbrRegex = erasAbbrRegex;\n    proto$1.erasNameRegex = erasNameRegex;\n    proto$1.erasNarrowRegex = erasNarrowRegex;\n\n    proto$1.months = localeMonths;\n    proto$1.monthsShort = localeMonthsShort;\n    proto$1.monthsParse = localeMonthsParse;\n    proto$1.monthsRegex = monthsRegex;\n    proto$1.monthsShortRegex = monthsShortRegex;\n    proto$1.week = localeWeek;\n    proto$1.firstDayOfYear = localeFirstDayOfYear;\n    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n    proto$1.weekdays = localeWeekdays;\n    proto$1.weekdaysMin = localeWeekdaysMin;\n    proto$1.weekdaysShort = localeWeekdaysShort;\n    proto$1.weekdaysParse = localeWeekdaysParse;\n\n    proto$1.weekdaysRegex = weekdaysRegex;\n    proto$1.weekdaysShortRegex = weekdaysShortRegex;\n    proto$1.weekdaysMinRegex = weekdaysMinRegex;\n\n    proto$1.isPM = localeIsPM;\n    proto$1.meridiem = localeMeridiem;\n\n    function get$1(format, index, field, setter) {\n        var locale = getLocale(),\n            utc = createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function listMonthsImpl(format, index, field) {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return get$1(format, index, field, 'month');\n        }\n\n        var i,\n            out = [];\n        for (i = 0; i < 12; i++) {\n            out[i] = get$1(format, i, field, 'month');\n        }\n        return out;\n    }\n\n    // ()\n    // (5)\n    // (fmt, 5)\n    // (fmt)\n    // (true)\n    // (true, 5)\n    // (true, fmt, 5)\n    // (true, fmt)\n    function listWeekdaysImpl(localeSorted, format, index, field) {\n        if (typeof localeSorted === 'boolean') {\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        } else {\n            format = localeSorted;\n            index = format;\n            localeSorted = false;\n\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        }\n\n        var locale = getLocale(),\n            shift = localeSorted ? locale._week.dow : 0,\n            i,\n            out = [];\n\n        if (index != null) {\n            return get$1(format, (index + shift) % 7, field, 'day');\n        }\n\n        for (i = 0; i < 7; i++) {\n            out[i] = get$1(format, (i + shift) % 7, field, 'day');\n        }\n        return out;\n    }\n\n    function listMonths(format, index) {\n        return listMonthsImpl(format, index, 'months');\n    }\n\n    function listMonthsShort(format, index) {\n        return listMonthsImpl(format, index, 'monthsShort');\n    }\n\n    function listWeekdays(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n    }\n\n    function listWeekdaysShort(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n    }\n\n    function listWeekdaysMin(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n    }\n\n    getSetGlobalLocale('en', {\n        eras: [\n            {\n                since: '0001-01-01',\n                until: +Infinity,\n                offset: 1,\n                name: 'Anno Domini',\n                narrow: 'AD',\n                abbr: 'AD',\n            },\n            {\n                since: '0000-12-31',\n                until: -Infinity,\n                offset: 1,\n                name: 'Before Christ',\n                narrow: 'BC',\n                abbr: 'BC',\n            },\n        ],\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    toInt((number % 100) / 10) === 1\n                        ? 'th'\n                        : b === 1\n                        ? 'st'\n                        : b === 2\n                        ? 'nd'\n                        : b === 3\n                        ? 'rd'\n                        : 'th';\n            return number + output;\n        },\n    });\n\n    // Side effect imports\n\n    hooks.lang = deprecate(\n        'moment.lang is deprecated. Use moment.locale instead.',\n        getSetGlobalLocale\n    );\n    hooks.langData = deprecate(\n        'moment.langData is deprecated. Use moment.localeData instead.',\n        getLocale\n    );\n\n    var mathAbs = Math.abs;\n\n    function abs() {\n        var data = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days = mathAbs(this._days);\n        this._months = mathAbs(this._months);\n\n        data.milliseconds = mathAbs(data.milliseconds);\n        data.seconds = mathAbs(data.seconds);\n        data.minutes = mathAbs(data.minutes);\n        data.hours = mathAbs(data.hours);\n        data.months = mathAbs(data.months);\n        data.years = mathAbs(data.years);\n\n        return this;\n    }\n\n    function addSubtract$1(duration, input, value, direction) {\n        var other = createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days += direction * other._days;\n        duration._months += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function add$1(input, value) {\n        return addSubtract$1(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function subtract$1(input, value) {\n        return addSubtract$1(this, input, value, -1);\n    }\n\n    function absCeil(number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble() {\n        var milliseconds = this._milliseconds,\n            days = this._days,\n            months = this._months,\n            data = this._data,\n            seconds,\n            minutes,\n            hours,\n            years,\n            monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (\n            !(\n                (milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0)\n            )\n        ) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds = absFloor(milliseconds / 1000);\n        data.seconds = seconds % 60;\n\n        minutes = absFloor(seconds / 60);\n        data.minutes = minutes % 60;\n\n        hours = absFloor(minutes / 60);\n        data.hours = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days = days;\n        data.months = months;\n        data.years = years;\n\n        return this;\n    }\n\n    function daysToMonths(days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return (days * 4800) / 146097;\n    }\n\n    function monthsToDays(months) {\n        // the reverse of daysToMonths\n        return (months * 146097) / 4800;\n    }\n\n    function as(units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        var days,\n            months,\n            milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'quarter' || units === 'year') {\n            days = this._days + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            switch (units) {\n                case 'month':\n                    return months;\n                case 'quarter':\n                    return months / 3;\n                case 'year':\n                    return months / 12;\n            }\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week':\n                    return days / 7 + milliseconds / 6048e5;\n                case 'day':\n                    return days + milliseconds / 864e5;\n                case 'hour':\n                    return days * 24 + milliseconds / 36e5;\n                case 'minute':\n                    return days * 1440 + milliseconds / 6e4;\n                case 'second':\n                    return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond':\n                    return Math.floor(days * 864e5) + milliseconds;\n                default:\n                    throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function valueOf$1() {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs(alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms'),\n        asSeconds = makeAs('s'),\n        asMinutes = makeAs('m'),\n        asHours = makeAs('h'),\n        asDays = makeAs('d'),\n        asWeeks = makeAs('w'),\n        asMonths = makeAs('M'),\n        asQuarters = makeAs('Q'),\n        asYears = makeAs('y');\n\n    function clone$1() {\n        return createDuration(this);\n    }\n\n    function get$2(units) {\n        units = normalizeUnits(units);\n        return this.isValid() ? this[units + 's']() : NaN;\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this.isValid() ? this._data[name] : NaN;\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds'),\n        seconds = makeGetter('seconds'),\n        minutes = makeGetter('minutes'),\n        hours = makeGetter('hours'),\n        days = makeGetter('days'),\n        months = makeGetter('months'),\n        years = makeGetter('years');\n\n    function weeks() {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round,\n        thresholds = {\n            ss: 44, // a few seconds to seconds\n            s: 45, // seconds to minute\n            m: 45, // minutes to hour\n            h: 22, // hours to day\n            d: 26, // days to month/week\n            w: null, // weeks to month\n            M: 11, // months to year\n        };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime$1(posNegDuration, withoutSuffix, thresholds, locale) {\n        var duration = createDuration(posNegDuration).abs(),\n            seconds = round(duration.as('s')),\n            minutes = round(duration.as('m')),\n            hours = round(duration.as('h')),\n            days = round(duration.as('d')),\n            months = round(duration.as('M')),\n            weeks = round(duration.as('w')),\n            years = round(duration.as('y')),\n            a =\n                (seconds <= thresholds.ss && ['s', seconds]) ||\n                (seconds < thresholds.s && ['ss', seconds]) ||\n                (minutes <= 1 && ['m']) ||\n                (minutes < thresholds.m && ['mm', minutes]) ||\n                (hours <= 1 && ['h']) ||\n                (hours < thresholds.h && ['hh', hours]) ||\n                (days <= 1 && ['d']) ||\n                (days < thresholds.d && ['dd', days]);\n\n        if (thresholds.w != null) {\n            a =\n                a ||\n                (weeks <= 1 && ['w']) ||\n                (weeks < thresholds.w && ['ww', weeks]);\n        }\n        a = a ||\n            (months <= 1 && ['M']) ||\n            (months < thresholds.M && ['MM', months]) ||\n            (years <= 1 && ['y']) || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set the rounding function for relative time strings\n    function getSetRelativeTimeRounding(roundingFunction) {\n        if (roundingFunction === undefined) {\n            return round;\n        }\n        if (typeof roundingFunction === 'function') {\n            round = roundingFunction;\n            return true;\n        }\n        return false;\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function getSetRelativeTimeThreshold(threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        if (threshold === 's') {\n            thresholds.ss = limit - 1;\n        }\n        return true;\n    }\n\n    function humanize(argWithSuffix, argThresholds) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var withSuffix = false,\n            th = thresholds,\n            locale,\n            output;\n\n        if (typeof argWithSuffix === 'object') {\n            argThresholds = argWithSuffix;\n            argWithSuffix = false;\n        }\n        if (typeof argWithSuffix === 'boolean') {\n            withSuffix = argWithSuffix;\n        }\n        if (typeof argThresholds === 'object') {\n            th = Object.assign({}, thresholds, argThresholds);\n            if (argThresholds.s != null && argThresholds.ss == null) {\n                th.ss = argThresholds.s - 1;\n            }\n        }\n\n        locale = this.localeData();\n        output = relativeTime$1(this, !withSuffix, th, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var abs$1 = Math.abs;\n\n    function sign(x) {\n        return (x > 0) - (x < 0) || +x;\n    }\n\n    function toISOString$1() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var seconds = abs$1(this._milliseconds) / 1000,\n            days = abs$1(this._days),\n            months = abs$1(this._months),\n            minutes,\n            hours,\n            years,\n            s,\n            total = this.asSeconds(),\n            totalSign,\n            ymSign,\n            daysSign,\n            hmsSign;\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes = absFloor(seconds / 60);\n        hours = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n\n        totalSign = total < 0 ? '-' : '';\n        ymSign = sign(this._months) !== sign(total) ? '-' : '';\n        daysSign = sign(this._days) !== sign(total) ? '-' : '';\n        hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n        return (\n            totalSign +\n            'P' +\n            (years ? ymSign + years + 'Y' : '') +\n            (months ? ymSign + months + 'M' : '') +\n            (days ? daysSign + days + 'D' : '') +\n            (hours || minutes || seconds ? 'T' : '') +\n            (hours ? hmsSign + hours + 'H' : '') +\n            (minutes ? hmsSign + minutes + 'M' : '') +\n            (seconds ? hmsSign + s + 'S' : '')\n        );\n    }\n\n    var proto$2 = Duration.prototype;\n\n    proto$2.isValid = isValid$1;\n    proto$2.abs = abs;\n    proto$2.add = add$1;\n    proto$2.subtract = subtract$1;\n    proto$2.as = as;\n    proto$2.asMilliseconds = asMilliseconds;\n    proto$2.asSeconds = asSeconds;\n    proto$2.asMinutes = asMinutes;\n    proto$2.asHours = asHours;\n    proto$2.asDays = asDays;\n    proto$2.asWeeks = asWeeks;\n    proto$2.asMonths = asMonths;\n    proto$2.asQuarters = asQuarters;\n    proto$2.asYears = asYears;\n    proto$2.valueOf = valueOf$1;\n    proto$2._bubble = bubble;\n    proto$2.clone = clone$1;\n    proto$2.get = get$2;\n    proto$2.milliseconds = milliseconds;\n    proto$2.seconds = seconds;\n    proto$2.minutes = minutes;\n    proto$2.hours = hours;\n    proto$2.days = days;\n    proto$2.weeks = weeks;\n    proto$2.months = months;\n    proto$2.years = years;\n    proto$2.humanize = humanize;\n    proto$2.toISOString = toISOString$1;\n    proto$2.toString = toISOString$1;\n    proto$2.toJSON = toISOString$1;\n    proto$2.locale = locale;\n    proto$2.localeData = localeData;\n\n    proto$2.toIsoString = deprecate(\n        'toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',\n        toISOString$1\n    );\n    proto$2.lang = lang;\n\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    //! moment.js\n\n    hooks.version = '2.29.4';\n\n    setHookCallback(createLocal);\n\n    hooks.fn = proto;\n    hooks.min = min;\n    hooks.max = max;\n    hooks.now = now;\n    hooks.utc = createUTC;\n    hooks.unix = createUnix;\n    hooks.months = listMonths;\n    hooks.isDate = isDate;\n    hooks.locale = getSetGlobalLocale;\n    hooks.invalid = createInvalid;\n    hooks.duration = createDuration;\n    hooks.isMoment = isMoment;\n    hooks.weekdays = listWeekdays;\n    hooks.parseZone = createInZone;\n    hooks.localeData = getLocale;\n    hooks.isDuration = isDuration;\n    hooks.monthsShort = listMonthsShort;\n    hooks.weekdaysMin = listWeekdaysMin;\n    hooks.defineLocale = defineLocale;\n    hooks.updateLocale = updateLocale;\n    hooks.locales = listLocales;\n    hooks.weekdaysShort = listWeekdaysShort;\n    hooks.normalizeUnits = normalizeUnits;\n    hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n    hooks.calendarFormat = getCalendarFormat;\n    hooks.prototype = proto;\n\n    // currently HTML5 input type only supports 24-hour formats\n    hooks.HTML5_FMT = {\n        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm', // <input type=\"datetime-local\" />\n        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss', // <input type=\"datetime-local\" step=\"1\" />\n        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS', // <input type=\"datetime-local\" step=\"0.001\" />\n        DATE: 'YYYY-MM-DD', // <input type=\"date\" />\n        TIME: 'HH:mm', // <input type=\"time\" />\n        TIME_SECONDS: 'HH:mm:ss', // <input type=\"time\" step=\"1\" />\n        TIME_MS: 'HH:mm:ss.SSS', // <input type=\"time\" step=\"0.001\" />\n        WEEK: 'GGGG-[W]WW', // <input type=\"week\" />\n        MONTH: 'YYYY-MM', // <input type=\"month\" />\n    };\n\n    return hooks;\n\n})));\n","import React, { FunctionComponent, ReactElement, useEffect } from 'react';\nimport moment from 'moment/moment';\nimport { UseFormGetValues, useFieldArray, useFormContext } from 'react-hook-form';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { Alert, Label } from '@navikt/ds-react';\nimport { VerticalSpacer, FlexColumn, FlexContainer, FlexRow, AvsnittSkiller } from '@navikt/ft-ui-komponenter';\nimport {\n  dateAfterOrEqual,\n  dateBeforeOrEqual,\n  dateRangesNotOverlapping,\n  hasValidDate,\n  hasValidDecimal,\n  hasValidFodselsnummer,\n  hasValidInteger,\n  maxLengthOrFodselsnr,\n  maxValue,\n  required,\n} from '@navikt/ft-form-validators';\nimport { CheckboxField, Datepicker, InputField, SelectField, PeriodFieldArray } from '@navikt/ft-form-hooks';\nimport { KodeverkMedNavn } from '@navikt/ft-types';\nimport { ISO_DATE_FORMAT } from '@navikt/ft-utils';\n\nimport { arbeidskategori } from '@navikt/fp-kodeverk';\n\nimport { gyldigeUttakperioder } from './RenderPermisjonPeriodeFieldArray';\n\nimport styles from './renderGraderingPeriodeFieldArray.module.css';\n\nexport const TIDSROM_PERMISJON_FORM_NAME_PREFIX = 'tidsromPermisjon';\nexport const GRADERING_PERIODE_FIELD_ARRAY_NAME = 'graderingPeriode';\n\nconst maxLength9OrFodselsnr = maxLengthOrFodselsnr(9);\n\ntype GraderingPeriode = {\n  periodeFom: string;\n  periodeTom: string;\n  periodeForGradering: string;\n  prosentandelArbeid: string;\n  skalGraderes: boolean;\n  arbeidsgiverIdentifikator?: string;\n  arbeidskategoriType?: string;\n  flerbarnsdager?: boolean;\n  harSamtidigUttak?: boolean;\n  samtidigUttaksprosent?: string;\n};\n\nexport type FormValues = GraderingPeriode[];\n\nconst getOverlappingValidator =\n  (\n    getValues: UseFormGetValues<{\n      [TIDSROM_PERMISJON_FORM_NAME_PREFIX]: { [GRADERING_PERIODE_FIELD_ARRAY_NAME]: FormValues };\n    }>,\n  ) =>\n  () => {\n    const perioder = getValues(`${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.${GRADERING_PERIODE_FIELD_ARRAY_NAME}`);\n    const periodeMap = perioder\n      .filter(({ periodeFom, periodeTom }) => periodeFom !== '' && periodeTom !== '')\n      .map(({ periodeFom, periodeTom }) => [periodeFom, periodeTom]);\n    return periodeMap.length > 0 ? dateRangesNotOverlapping(periodeMap) : undefined;\n  };\n\nconst getValiderFørEllerEtter =\n  (\n    getValues: UseFormGetValues<{ tidsromPermisjon: { [GRADERING_PERIODE_FIELD_ARRAY_NAME]: FormValues } }>,\n    index: number,\n    sjekkFør: boolean,\n  ) =>\n  () => {\n    const fomVerdi = getValues(\n      `${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.${GRADERING_PERIODE_FIELD_ARRAY_NAME}.${index}.periodeFom`,\n    );\n    const tomVerdi = getValues(\n      `${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.${GRADERING_PERIODE_FIELD_ARRAY_NAME}.${index}.periodeTom`,\n    );\n\n    if (!tomVerdi || !fomVerdi) {\n      return null;\n    }\n\n    return sjekkFør ? dateBeforeOrEqual(tomVerdi)(fomVerdi) : dateAfterOrEqual(fomVerdi)(tomVerdi);\n  };\n\nconst getValiderArbeidsgiverIdNårRequired =\n  (\n    getValues: UseFormGetValues<{ tidsromPermisjon: { [GRADERING_PERIODE_FIELD_ARRAY_NAME]: FormValues } }>,\n    index: number,\n  ) =>\n  (arbeidsgiverIdentifikator: string) => {\n    const arbeidsgiverIdentifikatorRequired =\n      getValues(\n        `${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.${GRADERING_PERIODE_FIELD_ARRAY_NAME}.${index}.arbeidskategoriType`,\n      ) === arbeidskategori.ARBEIDSTAKER;\n    return arbeidsgiverIdentifikatorRequired ? required(arbeidsgiverIdentifikator) : undefined;\n  };\n\nconst validerAtArbeidsgiverIdErGyldig = (arbeidsgiverIdentifikator: string) => {\n  if (!arbeidsgiverIdentifikator) {\n    return undefined;\n  }\n  return arbeidsgiverIdentifikator.length === 11\n    ? hasValidFodselsnummer(arbeidsgiverIdentifikator)\n    : maxLength9OrFodselsnr(arbeidsgiverIdentifikator);\n};\n\nconst defaultGraderingPeriode: GraderingPeriode = {\n  periodeFom: '',\n  periodeTom: '',\n  periodeForGradering: '',\n  prosentandelArbeid: '',\n  skalGraderes: false,\n};\n\nexport const gyldigArbeidskategori = [\n  arbeidskategori.ARBEIDSTAKER,\n  arbeidskategori.SELVSTENDIG_NAERINGSDRIVENDE,\n  arbeidskategori.FRILANSER,\n];\n\nconst maxValue100 = maxValue(100);\n\nconst mapKvoter = (typer: KodeverkMedNavn[]): ReactElement[] =>\n  typer\n    .filter(({ kode }) => gyldigeUttakperioder.includes(kode))\n    .map(({ kode, navn }) => (\n      <option value={kode} key={kode}>\n        {navn}\n      </option>\n    ));\n\nconst mapArbeidskategori = (typer: KodeverkMedNavn[]): ReactElement[] =>\n  typer\n    .filter(({ kode }) => gyldigArbeidskategori.includes(kode))\n    .map(({ kode, navn }) => (\n      <option value={kode} key={kode}>\n        {navn}\n      </option>\n    ));\n\ninterface OwnProps {\n  graderingKvoter: KodeverkMedNavn[];\n  readOnly: boolean;\n  arbeidskategoriTyper: KodeverkMedNavn[];\n}\n\n/**\n * RenderGraderingPeriodeFieldArray\n *\n * Viser inputfelter for dato for bestemmelse av graderingperiode.\n */\nconst RenderGraderingPeriodeFieldArray: FunctionComponent<OwnProps> = ({\n  graderingKvoter,\n  readOnly,\n  arbeidskategoriTyper,\n}) => {\n  const intl = useIntl();\n\n  const {\n    watch,\n    control,\n    getValues,\n    trigger,\n    formState: { isSubmitted },\n  } = useFormContext<{\n    [TIDSROM_PERMISJON_FORM_NAME_PREFIX]: {\n      [GRADERING_PERIODE_FIELD_ARRAY_NAME]: FormValues;\n    };\n  }>();\n\n  const { fields, remove, append } = useFieldArray({\n    control,\n    name: `${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.${GRADERING_PERIODE_FIELD_ARRAY_NAME}`,\n  });\n\n  const graderingValues = watch(`${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.${GRADERING_PERIODE_FIELD_ARRAY_NAME}`);\n\n  useEffect(() => {\n    if (fields.length === 0) {\n      append(defaultGraderingPeriode);\n    }\n  }, []);\n\n  return (\n    <PeriodFieldArray\n      fields={fields}\n      emptyPeriodTemplate={defaultGraderingPeriode}\n      bodyText={intl.formatMessage({ id: 'Registrering.Permisjon.Gradering.LeggTilPeriode' })}\n      readOnly={readOnly}\n      remove={remove}\n      append={append}\n    >\n      {(field, index, getRemoveButton) => {\n        const { harSamtidigUttak, periodeFom } = graderingValues[index];\n        const periodeFomForTidlig = periodeFom && moment(periodeFom, ISO_DATE_FORMAT).isBefore(moment('2019-01-01'));\n        const namePart1 = `${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.${GRADERING_PERIODE_FIELD_ARRAY_NAME}.${index}`;\n        return (\n          <div key={field.id} className={index !== fields.length - 1 ? styles.notLastRow : ''}>\n            {index > 0 && (\n              <>\n                <AvsnittSkiller />\n                <VerticalSpacer sixteenPx />\n              </>\n            )}\n            <FlexContainer wrap>\n              <FlexRow>\n                <FlexColumn>\n                  <SelectField\n                    name={`${namePart1}.periodeForGradering`}\n                    selectValues={mapKvoter(graderingKvoter)}\n                    label={intl.formatMessage({ id: 'Registrering.Permisjon.Gradering.Periode' })}\n                    validate={[required]}\n                  />\n                </FlexColumn>\n                <FlexColumn>\n                  <Datepicker\n                    label={intl.formatMessage({ id: 'Registrering.Permisjon.periodeFom' })}\n                    name={`${namePart1}.periodeFom`}\n                    validate={[\n                      required,\n                      hasValidDate,\n                      getValiderFørEllerEtter(getValues, index, true),\n                      getOverlappingValidator(getValues),\n                    ]}\n                    onChange={() => (isSubmitted ? trigger() : undefined)}\n                  />\n                </FlexColumn>\n                <FlexColumn>\n                  <Datepicker\n                    label={intl.formatMessage({ id: 'Registrering.Permisjon.periodeTom' })}\n                    name={`${namePart1}.periodeTom`}\n                    validate={[\n                      required,\n                      hasValidDate,\n                      getValiderFørEllerEtter(getValues, index, false),\n                      getOverlappingValidator(getValues),\n                    ]}\n                    onChange={() => (isSubmitted ? trigger() : undefined)}\n                  />\n                </FlexColumn>\n                <FlexColumn className={styles.prosentHeader}>\n                  <InputField\n                    label={<FormattedMessage id=\"Registrering.Permisjon.Gradering.Prosentandel\" />}\n                    name={`${namePart1}.prosentandelArbeid`}\n                    validate={[required, hasValidDecimal, maxValue100]}\n                    normalizeOnBlur={value => (Number.isNaN(value) ? value : parseFloat(value.toString()).toFixed(2))}\n                  />\n                </FlexColumn>\n                <FlexColumn>\n                  <InputField\n                    label={intl.formatMessage({ id: 'Registrering.Permisjon.Orgnr' })}\n                    name={`${namePart1}.arbeidsgiverIdentifikator`}\n                    validate={[\n                      getValiderArbeidsgiverIdNårRequired(getValues, index),\n                      hasValidInteger,\n                      validerAtArbeidsgiverIdErGyldig,\n                    ]}\n                  />\n                </FlexColumn>\n              </FlexRow>\n              <VerticalSpacer eightPx />\n              <FlexRow>\n                <FlexColumn>\n                  <SelectField\n                    label={intl.formatMessage({ id: 'Registrering.Permisjon.ArbeidskategoriLabel' })}\n                    name={`${namePart1}.arbeidskategoriType`}\n                    selectValues={mapArbeidskategori(arbeidskategoriTyper)}\n                    validate={[required]}\n                    onChange={() => (isSubmitted ? trigger() : undefined)}\n                  />\n                </FlexColumn>\n                <FlexColumn>\n                  <div className={styles.graderesHeader}>\n                    <Label size=\"small\">\n                      <FormattedMessage id=\"Registrering.Permisjon.Gradering.SkalGraderes\" />\n                    </Label>\n                  </div>\n                  <CheckboxField name={`${namePart1}.skalGraderes`} label=\" \" />\n                </FlexColumn>\n                <FlexColumn>\n                  <div className={styles.smalHeader}>\n                    <Label size=\"small\">\n                      <FormattedMessage id=\"Registrering.Permisjon.Flerbarnsdager\" />\n                    </Label>\n                    <CheckboxField readOnly={readOnly} name={`${namePart1}.flerbarnsdager`} label=\" \" />\n                  </div>\n                </FlexColumn>\n                <FlexColumn>\n                  <div className={styles.smalHeader}>\n                    <Label size=\"small\">\n                      <FormattedMessage id=\"Registrering.Permisjon.HarSamtidigUttak\" />\n                    </Label>\n                  </div>\n                  <CheckboxField name={`${namePart1}.harSamtidigUttak`} label=\"\" />\n                </FlexColumn>\n                <FlexColumn>\n                  {harSamtidigUttak && (\n                    <InputField\n                      name={`${namePart1}.samtidigUttaksprosent`}\n                      validate={[required, hasValidDecimal, maxValue100]}\n                      label={intl.formatMessage({ id: 'Registrering.Permisjon.SamtidigUttaksprosent' })}\n                    />\n                  )}\n                </FlexColumn>\n                {getRemoveButton && <FlexColumn className={styles.placeRemoveButton}>{getRemoveButton()}</FlexColumn>}\n              </FlexRow>\n              {periodeFomForTidlig && (\n                <div>\n                  <FlexRow wrap>\n                    <Alert size=\"small\" variant=\"warning\">\n                      <FormattedMessage id=\"Registrering.Permisjon.PeriodeFomForTidlig\" />\n                    </Alert>\n                  </FlexRow>\n                  <VerticalSpacer eightPx />\n                </div>\n              )}\n            </FlexContainer>\n          </div>\n        );\n      }}\n    </PeriodFieldArray>\n  );\n};\n\nexport default RenderGraderingPeriodeFieldArray;\n","import React, { FunctionComponent } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Label } from '@navikt/ds-react';\nimport { CheckboxField } from '@navikt/ft-form-hooks';\nimport { VerticalSpacer } from '@navikt/ft-ui-komponenter';\nimport { KodeverkType, arbeidskategori } from '@navikt/fp-kodeverk';\nimport { AlleKodeverk } from '@navikt/fp-types';\n\nimport { useFormContext } from 'react-hook-form';\nimport RenderGraderingPeriodeFieldArray, {\n  TIDSROM_PERMISJON_FORM_NAME_PREFIX,\n  GRADERING_PERIODE_FIELD_ARRAY_NAME,\n  FormValues as GraderingPeriodeFormValues,\n} from './RenderGraderingPeriodeFieldArray';\n\nexport type FormValues = {\n  skalGradere?: boolean;\n  [GRADERING_PERIODE_FIELD_ARRAY_NAME]?: GraderingPeriodeFormValues;\n};\n\ninterface OwnProps {\n  readOnly: boolean;\n  alleKodeverk: AlleKodeverk;\n}\n\ninterface StaticFunctions {\n  buildInitialValues: () => any;\n  transformValues: (formValues: FormValues) => any;\n}\n\n/**\n * PermisjonGraderingPanel\n *\n * Viser panel for gradering\n * Komponenten har inputfelter og må derfor rendres som etterkommer av form-komponent\n */\nconst PermisjonGraderingPanel: FunctionComponent<OwnProps> & StaticFunctions = ({ readOnly, alleKodeverk }) => {\n  const graderingKvoter = alleKodeverk[KodeverkType.UTTAK_PERIODE_TYPE];\n  const arbeidskategoriTyper = alleKodeverk[KodeverkType.ARBEIDSKATEGORI];\n\n  const { watch } = useFormContext<{ [TIDSROM_PERMISJON_FORM_NAME_PREFIX]: FormValues }>();\n  const skalGradere = watch(`${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.skalGradere`) || false;\n\n  return (\n    <div>\n      <Label size=\"small\">\n        <FormattedMessage id=\"Registrering.Permisjon.Gradering.Title\" />\n      </Label>\n      <VerticalSpacer sixteenPx />\n      <CheckboxField\n        readOnly={readOnly}\n        name={`${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.skalGradere`}\n        label={<FormattedMessage id=\"Registrering.Permisjon.Gradering.GraderUttaket\" />}\n      />\n      {skalGradere && (\n        <RenderGraderingPeriodeFieldArray\n          graderingKvoter={graderingKvoter}\n          arbeidskategoriTyper={arbeidskategoriTyper}\n          readOnly={readOnly}\n        />\n      )}\n    </div>\n  );\n};\n\nPermisjonGraderingPanel.transformValues = (formValues: FormValues) => {\n  const perioder = formValues[GRADERING_PERIODE_FIELD_ARRAY_NAME];\n  if (!perioder) {\n    return [];\n  }\n  return perioder.map(periode => {\n    if (periode.arbeidskategoriType) {\n      return {\n        ...periode,\n        erArbeidstaker: periode.arbeidskategoriType === arbeidskategori.ARBEIDSTAKER,\n        erFrilanser: periode.arbeidskategoriType === arbeidskategori.FRILANSER,\n        erSelvstNæringsdrivende: periode.arbeidskategoriType === arbeidskategori.SELVSTENDIG_NAERINGSDRIVENDE,\n      };\n    }\n    return periode;\n  });\n};\n\nPermisjonGraderingPanel.buildInitialValues = () => ({\n  [GRADERING_PERIODE_FIELD_ARRAY_NAME]: [{}],\n  skalGradere: false,\n});\n\nexport default PermisjonGraderingPanel;\n","import React, { FunctionComponent, ReactElement, useEffect } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { UseFormGetValues, useFieldArray, useFormContext } from 'react-hook-form';\nimport { FlexColumn, FlexContainer, FlexRow } from '@navikt/ft-ui-komponenter';\nimport { Datepicker, SelectField, PeriodFieldArray } from '@navikt/ft-form-hooks';\nimport {\n  required,\n  hasValidDate,\n  dateRangesNotOverlapping,\n  dateAfterOrEqual,\n  dateBeforeOrEqual,\n} from '@navikt/ft-form-validators';\n\nexport const TIDSROM_PERMISJON_FORM_NAME_PREFIX = 'tidsromPermisjon';\nexport const OVERFORING_PERIODE_FIELD_ARRAY_NAME = 'overforingsperioder';\n\ntype Periode = {\n  periodeFom: string;\n  periodeTom: string;\n  overforingArsak: string;\n};\n\nexport type FormValues = Periode[];\n\nconst getOverlappingValidator =\n  (\n    getValues: UseFormGetValues<{\n      [TIDSROM_PERMISJON_FORM_NAME_PREFIX]: { [OVERFORING_PERIODE_FIELD_ARRAY_NAME]: FormValues };\n    }>,\n  ) =>\n  () => {\n    const perioder = getValues(`${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.${OVERFORING_PERIODE_FIELD_ARRAY_NAME}`);\n    const periodeMap = perioder\n      .filter(({ periodeFom, periodeTom }) => periodeFom !== '' && periodeTom !== '')\n      .map(({ periodeFom, periodeTom }) => [periodeFom, periodeTom]);\n    return periodeMap.length > 0 ? dateRangesNotOverlapping(periodeMap) : undefined;\n  };\n\nconst defaultOverforingPeriode: Periode = {\n  periodeFom: '',\n  periodeTom: '',\n  overforingArsak: '',\n};\n\ninterface OwnProps {\n  selectValues: ReactElement[];\n  readOnly: boolean;\n}\n\n/**\n * RenderOverforingAvKvoterFieldArray\n *\n * Viser inputfelter for dato for bestemmelse av overføring.\n */\nconst RenderOverforingAvKvoterFieldArray: FunctionComponent<OwnProps> = ({ selectValues, readOnly }) => {\n  const intl = useIntl();\n\n  const {\n    control,\n    getValues,\n    trigger,\n    formState: { isSubmitted },\n  } = useFormContext<{\n    [TIDSROM_PERMISJON_FORM_NAME_PREFIX]: {\n      [OVERFORING_PERIODE_FIELD_ARRAY_NAME]: FormValues;\n    };\n  }>();\n\n  const { fields, remove, append } = useFieldArray({\n    control,\n    name: `${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.${OVERFORING_PERIODE_FIELD_ARRAY_NAME}`,\n  });\n\n  useEffect(() => {\n    if (fields.length === 0) {\n      append(defaultOverforingPeriode);\n    }\n  }, []);\n\n  const fieldArrayName = `${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.${OVERFORING_PERIODE_FIELD_ARRAY_NAME}`;\n  return (\n    <PeriodFieldArray\n      fields={fields}\n      emptyPeriodTemplate={defaultOverforingPeriode}\n      bodyText={intl.formatMessage({ id: 'Registrering.Permisjon.Utsettelse.LeggTilPeriode' })}\n      readOnly={readOnly}\n      append={append}\n      remove={remove}\n    >\n      {(field, index, getRemoveButton) => (\n        <FlexContainer wrap key={field.id}>\n          <FlexRow>\n            <FlexColumn>\n              <SelectField\n                name={`${fieldArrayName}.${index}.overforingArsak`}\n                label={\n                  index === 0\n                    ? intl.formatMessage({ id: 'Registrering.Permisjon.OverforingAvKvote.Arsak.AngiArsak' })\n                    : ''\n                }\n                selectValues={selectValues}\n                validate={[required]}\n                readOnly={readOnly}\n              />\n            </FlexColumn>\n            <>\n              <FlexColumn>\n                <Datepicker\n                  isReadOnly={readOnly}\n                  name={`${fieldArrayName}.${index}.periodeFom`}\n                  validate={[\n                    required,\n                    hasValidDate,\n                    () => {\n                      const fomVerdi = getValues(\n                        `${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.${OVERFORING_PERIODE_FIELD_ARRAY_NAME}.${index}.periodeFom`,\n                      );\n                      const tomVerdi = getValues(\n                        `${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.${OVERFORING_PERIODE_FIELD_ARRAY_NAME}.${index}.periodeTom`,\n                      );\n                      return tomVerdi && fomVerdi ? dateBeforeOrEqual(tomVerdi)(fomVerdi) : null;\n                    },\n                    getOverlappingValidator(getValues),\n                  ]}\n                  label={index === 0 ? <FormattedMessage id=\"Registrering.Permisjon.OverforingAvKvote.fomDato\" /> : ''}\n                  onChange={() => (isSubmitted ? trigger() : undefined)}\n                />\n              </FlexColumn>\n              <FlexColumn>\n                <Datepicker\n                  isReadOnly={readOnly}\n                  name={`${fieldArrayName}.${index}.periodeTom`}\n                  validate={[\n                    required,\n                    hasValidDate,\n                    () => {\n                      const fomVerdi = getValues(\n                        `${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.${OVERFORING_PERIODE_FIELD_ARRAY_NAME}.${index}.periodeFom`,\n                      );\n                      const tomVerdi = getValues(\n                        `${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.${OVERFORING_PERIODE_FIELD_ARRAY_NAME}.${index}.periodeTom`,\n                      );\n                      return tomVerdi && fomVerdi ? dateAfterOrEqual(fomVerdi)(tomVerdi) : null;\n                    },\n                    getOverlappingValidator(getValues),\n                  ]}\n                  label={index === 0 ? <FormattedMessage id=\"Registrering.Permisjon.OverforingAvKvote.tomDato\" /> : ''}\n                  onChange={() => (isSubmitted ? trigger() : undefined)}\n                />\n              </FlexColumn>\n              {getRemoveButton && <FlexColumn>{getRemoveButton()}</FlexColumn>}\n            </>\n          </FlexRow>\n        </FlexContainer>\n      )}\n    </PeriodFieldArray>\n  );\n};\n\nexport default RenderOverforingAvKvoterFieldArray;\n","import React, { FunctionComponent, ReactElement } from 'react';\nimport { FormattedMessage, IntlShape, useIntl } from 'react-intl';\nimport { Label } from '@navikt/ds-react';\nimport { VerticalSpacer } from '@navikt/ft-ui-komponenter';\nimport { CheckboxField } from '@navikt/ft-form-hooks';\nimport { KodeverkType } from '@navikt/ft-kodeverk';\nimport { overforingArsak, foreldreType as ForeldreType } from '@navikt/fp-kodeverk';\nimport { AlleKodeverk, KodeverkMedNavn } from '@navikt/fp-types';\n\nimport { useFormContext } from 'react-hook-form';\nimport RenderOverforingAvKvoterFieldArray, {\n  FormValues as KvoterPerioderFormValues,\n  TIDSROM_PERMISJON_FORM_NAME_PREFIX,\n  OVERFORING_PERIODE_FIELD_ARRAY_NAME,\n} from './RenderOverforingAvKvoterFieldArray';\n\nconst getText = (intl: IntlShape, kode: string, navn: string): string => {\n  if (kode === overforingArsak.INSTITUSJONSOPPHOLD_ANNEN_FORELDER) {\n    return intl.formatMessage({ id: 'Registrering.Permisjon.OverforingAvKvote.Arsak.MorErInnlagt' });\n  }\n  if (kode === overforingArsak.SYKDOM_ANNEN_FORELDER) {\n    return intl.formatMessage({ id: 'Registrering.Permisjon.OverforingAvKvote.Arsak.MorErSyk' });\n  }\n  return navn;\n};\n\nconst mapArsaker = (\n  arsaker: KodeverkMedNavn[],\n  sokerErMor: boolean,\n  erEndringssøknad: boolean,\n  intl: IntlShape,\n): ReactElement[] =>\n  arsaker\n    .filter(\n      ({ kode }) =>\n        erEndringssøknad || (kode !== overforingArsak.ALENEOMSORG && kode !== overforingArsak.IKKE_RETT_ANNEN_FORELDER),\n    )\n    .map(({ kode, navn }) =>\n      !sokerErMor ? (\n        <option value={kode} key={kode}>\n          {getText(intl, kode, navn)}\n        </option>\n      ) : (\n        <option value={kode} key={kode}>\n          {navn}\n        </option>\n      ),\n    );\n\nexport type FormValues = {\n  skalOvertaKvote: boolean;\n  [OVERFORING_PERIODE_FIELD_ARRAY_NAME]?: KvoterPerioderFormValues;\n};\n\ninterface OwnProps {\n  foreldreType: string;\n  readOnly: boolean;\n  alleKodeverk: AlleKodeverk;\n  erEndringssøknad: boolean;\n}\n\ninterface StaticFunctions {\n  buildInitialValues: () => any;\n}\n\n/**\n * PermisjonOverforingAvKvoterPanel\n *\n * Komponenten vises som del av skjermbildet for registrering av papirsøknad dersom søknad gjelder foreldrepenger.\n * Komponenten har inputfelter og må derfor rendres som etterkommer av form-komponent.\n */\nconst PermisjonOverforingAvKvoterPanel: FunctionComponent<OwnProps> & StaticFunctions = ({\n  foreldreType,\n  alleKodeverk,\n  readOnly,\n  erEndringssøknad,\n}) => {\n  const intl = useIntl();\n\n  const overtaKvoteReasons = alleKodeverk[KodeverkType.OVERFOERING_AARSAK_TYPE];\n  const selectValues = mapArsaker(overtaKvoteReasons, foreldreType === ForeldreType.MOR, erEndringssøknad, intl);\n\n  const { watch } = useFormContext<{ [TIDSROM_PERMISJON_FORM_NAME_PREFIX]: FormValues }>();\n  const skalOvertaKvote = watch(`${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.skalOvertaKvote`) || false;\n\n  return (\n    <>\n      <Label size=\"small\">\n        <FormattedMessage id=\"Registrering.Permisjon.OverforingAvKvote.OvertaKvoten\" />\n      </Label>\n      <VerticalSpacer sixteenPx />\n      <CheckboxField\n        readOnly={readOnly}\n        name={`${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.skalOvertaKvote`}\n        label={<FormattedMessage id=\"Registrering.Permisjon.OverforingAvKvote.OvertaKvote\" />}\n      />\n      {skalOvertaKvote && <RenderOverforingAvKvoterFieldArray selectValues={selectValues} readOnly={readOnly} />}\n    </>\n  );\n};\n\nPermisjonOverforingAvKvoterPanel.buildInitialValues = () => ({\n  skalOvertaKvote: false,\n  overforingsperioder: [{}],\n});\n\nexport default PermisjonOverforingAvKvoterPanel;\n","import React, { FunctionComponent, ReactElement, useEffect } from 'react';\nimport { UseFormGetValues, useFieldArray, useFormContext } from 'react-hook-form';\nimport { useIntl } from 'react-intl';\nimport { FlexColumn, FlexContainer, FlexRow } from '@navikt/ft-ui-komponenter';\nimport { Datepicker, SelectField, PeriodFieldArray } from '@navikt/ft-form-hooks';\nimport {\n  dateAfterOrEqual,\n  dateBeforeOrEqual,\n  dateRangesNotOverlapping,\n  hasValidDate,\n  required,\n} from '@navikt/ft-form-validators';\nimport { KodeverkMedNavn } from '@navikt/fp-types';\nimport { oppholdArsakType } from '@navikt/fp-kodeverk';\n\nimport styles from './renderOppholdPeriodeFieldArray.module.css';\n\nexport const TIDSROM_PERMISJON_FORM_NAME_PREFIX = 'tidsromPermisjon';\nexport const OPPHOLD_PERIODE_FIELD_ARRAY_NAME = 'oppholdPerioder';\n\ntype Periode = {\n  periodeFom: string;\n  periodeTom: string;\n  årsak: string;\n};\n\nexport type FormValues = Periode[];\n\nconst getOverlappingValidator =\n  (\n    getValues: UseFormGetValues<{\n      [TIDSROM_PERMISJON_FORM_NAME_PREFIX]: { [OPPHOLD_PERIODE_FIELD_ARRAY_NAME]: FormValues };\n    }>,\n  ) =>\n  () => {\n    const perioder = getValues(`${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.${OPPHOLD_PERIODE_FIELD_ARRAY_NAME}`);\n    const periodeMap = perioder\n      .filter(({ periodeFom, periodeTom }) => periodeFom !== '' && periodeTom !== '')\n      .map(({ periodeFom, periodeTom }) => [periodeFom, periodeTom]);\n    return periodeMap.length > 0 ? dateRangesNotOverlapping(periodeMap) : undefined;\n  };\n\nconst defaultOppholdPeriode: Periode = {\n  periodeFom: '',\n  periodeTom: '',\n  årsak: '',\n};\n\nconst gyldigeÅrsaker = [\n  oppholdArsakType.UTTAK_MØDREKVOTE_ANNEN_FORELDER,\n  oppholdArsakType.UTTAK_FEDREKVOTE_ANNEN_FORELDER,\n  oppholdArsakType.UTTAK_FELLESP_ANNEN_FORELDER,\n  oppholdArsakType.UTTAK_FORELDREPENGER_ANNEN_FORELDER,\n];\n\nconst mapTyper = (typer: KodeverkMedNavn[]): ReactElement[] =>\n  typer\n    .filter(({ kode }) => gyldigeÅrsaker.includes(kode))\n    .map(({ kode, navn }) => (\n      <option value={kode} key={kode}>\n        {navn}\n      </option>\n    ));\n\ninterface OwnProps {\n  oppholdsReasons: KodeverkMedNavn[];\n  readOnly: boolean;\n}\n\n/**\n * RenderOppholdPeriodeFieldArray\n *\n * Viser inputfelter for dato for bestemmelse av oppholdsperiode.\n */\nconst RenderOppholdPeriodeFieldArray: FunctionComponent<OwnProps> = ({ oppholdsReasons, readOnly }) => {\n  const intl = useIntl();\n\n  const {\n    control,\n    getValues,\n    trigger,\n    formState: { isSubmitted },\n  } = useFormContext<{\n    [TIDSROM_PERMISJON_FORM_NAME_PREFIX]: {\n      [OPPHOLD_PERIODE_FIELD_ARRAY_NAME]: FormValues;\n    };\n  }>();\n\n  const { fields, remove, append } = useFieldArray({\n    control,\n    name: `${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.${OPPHOLD_PERIODE_FIELD_ARRAY_NAME}`,\n  });\n\n  useEffect(() => {\n    if (fields.length === 0) {\n      append(defaultOppholdPeriode);\n    }\n  }, []);\n\n  return (\n    <PeriodFieldArray\n      fields={fields}\n      emptyPeriodTemplate={defaultOppholdPeriode}\n      bodyText={intl.formatMessage({ id: 'Registrering.Permisjon.Opphold.LeggTilPeriode' })}\n      readOnly={readOnly}\n      append={append}\n      remove={remove}\n    >\n      {(field, index, getRemoveButton) => (\n        <div key={field.id} className={index !== fields.length - 1 ? styles.notLastRow : ''}>\n          <FlexContainer wrap>\n            <FlexRow>\n              <FlexColumn>\n                <Datepicker\n                  name={`${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.${OPPHOLD_PERIODE_FIELD_ARRAY_NAME}.${index}.periodeFom`}\n                  label={index === 0 ? intl.formatMessage({ id: 'Registrering.Permisjon.periodeFom' }) : ''}\n                  validate={[\n                    required,\n                    hasValidDate,\n                    () => {\n                      const fomVerdi = getValues(\n                        `${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.${OPPHOLD_PERIODE_FIELD_ARRAY_NAME}.${index}.periodeFom`,\n                      );\n                      const tomVerdi = getValues(\n                        `${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.${OPPHOLD_PERIODE_FIELD_ARRAY_NAME}.${index}.periodeTom`,\n                      );\n                      return tomVerdi && fomVerdi ? dateBeforeOrEqual(tomVerdi)(fomVerdi) : null;\n                    },\n                    getOverlappingValidator(getValues),\n                  ]}\n                  onChange={() => (isSubmitted ? trigger() : undefined)}\n                />\n              </FlexColumn>\n              <FlexColumn>\n                <Datepicker\n                  name={`${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.${OPPHOLD_PERIODE_FIELD_ARRAY_NAME}.${index}.periodeTom`}\n                  label={index === 0 ? intl.formatMessage({ id: 'Registrering.Permisjon.periodeTom' }) : ''}\n                  validate={[\n                    required,\n                    hasValidDate,\n                    () => {\n                      const fomVerdi = getValues(\n                        `${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.${OPPHOLD_PERIODE_FIELD_ARRAY_NAME}.${index}.periodeFom`,\n                      );\n                      const tomVerdi = getValues(\n                        `${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.${OPPHOLD_PERIODE_FIELD_ARRAY_NAME}.${index}.periodeTom`,\n                      );\n                      return tomVerdi && fomVerdi ? dateAfterOrEqual(fomVerdi)(tomVerdi) : null;\n                    },\n                    getOverlappingValidator(getValues),\n                  ]}\n                  onChange={() => (isSubmitted ? trigger() : undefined)}\n                />\n              </FlexColumn>\n              <FlexColumn>\n                <SelectField\n                  name={`${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.${OPPHOLD_PERIODE_FIELD_ARRAY_NAME}.${index}.årsak`}\n                  label={index === 0 ? intl.formatMessage({ id: 'Registrering.Permisjon.Opphold.Arsak' }) : ''}\n                  selectValues={mapTyper(oppholdsReasons)}\n                  validate={[required]}\n                />\n              </FlexColumn>\n              {getRemoveButton && <FlexColumn>{getRemoveButton()}</FlexColumn>}\n            </FlexRow>\n          </FlexContainer>\n        </div>\n      )}\n    </PeriodFieldArray>\n  );\n};\n\nexport default RenderOppholdPeriodeFieldArray;\n","import React, { FunctionComponent } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Label } from '@navikt/ds-react';\nimport { CheckboxField } from '@navikt/ft-form-hooks';\nimport { VerticalSpacer } from '@navikt/ft-ui-komponenter';\n\nimport { KodeverkType } from '@navikt/fp-kodeverk';\nimport { AlleKodeverk } from '@navikt/fp-types';\n\nimport { useFormContext } from 'react-hook-form';\nimport RenderOppholdPeriodeFieldArray, {\n  OPPHOLD_PERIODE_FIELD_ARRAY_NAME,\n  TIDSROM_PERMISJON_FORM_NAME_PREFIX,\n  FormValues as PeriodeFormValues,\n} from './RenderOppholdPeriodeFieldArray';\n\nexport type FormValues = {\n  skalHaOpphold?: boolean;\n  [OPPHOLD_PERIODE_FIELD_ARRAY_NAME]?: PeriodeFormValues;\n};\n\ninterface OwnProps {\n  readOnly: boolean;\n  alleKodeverk: AlleKodeverk;\n}\n\ninterface StaticFunctions {\n  buildInitialValues: () => any;\n}\n\n/**\n * PermisjonOppholdPanel\n *\n * Viser panel for utsettelse\n * Komponenten har inputfelter og må derfor rendres som etterkommer av form-komponent.\n */\nconst PermisjonOppholdPanel: FunctionComponent<OwnProps> & StaticFunctions = ({ readOnly, alleKodeverk }) => {\n  const oppholdsReasons = alleKodeverk[KodeverkType.OPPHOLD_ARSAK];\n\n  const { watch } = useFormContext<{ [TIDSROM_PERMISJON_FORM_NAME_PREFIX]: FormValues }>();\n  const skalHaOpphold = watch(`${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.skalHaOpphold`) || false;\n\n  return (\n    <div>\n      <Label size=\"small\">\n        <FormattedMessage id=\"Registrering.Permisjon.Opphold.Title\" />\n      </Label>\n      <VerticalSpacer sixteenPx />\n      <CheckboxField\n        readOnly={readOnly}\n        name={`${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.skalHaOpphold`}\n        label={<FormattedMessage id=\"Registrering.Permisjon.Opphold.OppholdUttaket\" />}\n      />\n      {skalHaOpphold && <RenderOppholdPeriodeFieldArray oppholdsReasons={oppholdsReasons} readOnly={readOnly} />}\n    </div>\n  );\n};\n\nPermisjonOppholdPanel.buildInitialValues = () => ({\n  [OPPHOLD_PERIODE_FIELD_ARRAY_NAME]: [{}],\n  skalHaOpphold: false,\n});\n\nexport default PermisjonOppholdPanel;\n","import React, { FunctionComponent, useEffect } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { UseFormGetValues, useFormContext } from 'react-hook-form';\nimport { Label, Heading, ErrorMessage } from '@navikt/ds-react';\nimport { BorderBox, VerticalSpacer } from '@navikt/ft-ui-komponenter';\nimport { CheckboxField } from '@navikt/ft-form-hooks';\n\nimport { AlleKodeverk } from '@navikt/fp-types';\nimport { foreldreType as ForeldreType } from '@navikt/fp-kodeverk';\n\nimport PermisjonUtsettelsePanel, { FormValues as FormValuesUtsettelse } from './PermisjonUtsettelsePanel';\nimport PermisjonGraderingPanel, { FormValues as FormValuesGradering } from './PermisjonGraderingPanel';\nimport { GRADERING_PERIODE_FIELD_ARRAY_NAME } from './RenderGraderingPeriodeFieldArray';\nimport PermisjonOverforingAvKvoterPanel, {\n  FormValues as FormValuesOverforing,\n} from './PermisjonOverforingAvKvoterPanel';\nimport RenderPermisjonPeriodeFieldArray, {\n  PERMISJON_PERIODE_FIELD_ARRAY_NAME,\n  FormValues as FormValuesPermisjon,\n} from './RenderPermisjonPeriodeFieldArray';\nimport PermisjonOppholdPanel, { FormValues as FormValuesOpphold } from './PermisjonOppholdPanel';\nimport { UTSETTELSE_PERIODE_FIELD_ARRAY_NAME } from './RenderUtsettelsePeriodeFieldArray';\nimport { OVERFORING_PERIODE_FIELD_ARRAY_NAME } from './RenderOverforingAvKvoterFieldArray';\nimport { OPPHOLD_PERIODE_FIELD_ARRAY_NAME } from './RenderOppholdPeriodeFieldArray';\n\nimport styles from './permisjonPanel.module.css';\n\nexport const TIDSROM_PERMISJON_FORM_NAME_PREFIX = 'tidsromPermisjon';\n\ntype VirtuellFeilType = {\n  notRegisteredInput?: string;\n};\n\ntype TidsromPermisjon = {\n  fulltUttak: boolean;\n  [PERMISJON_PERIODE_FIELD_ARRAY_NAME]?: FormValuesPermisjon[];\n} & FormValuesUtsettelse &\n  FormValuesOpphold &\n  FormValuesOverforing &\n  FormValuesGradering &\n  VirtuellFeilType;\n\nexport type FormValues = {\n  [TIDSROM_PERMISJON_FORM_NAME_PREFIX]?: TidsromPermisjon;\n};\n\nconst getIsRequired = (getValues: UseFormGetValues<FormValues>) => {\n  const fulltUttak = getValues(`${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.fulltUttak`) || false;\n  const skalGradere = getValues(`${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.skalGradere`) || false;\n  const skalUtsette = getValues(`${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.skalUtsette`) || false;\n  const skalOvertaKvote = getValues(`${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.skalOvertaKvote`) || false;\n  return !fulltUttak && !skalGradere && !skalUtsette && !skalOvertaKvote;\n};\n\ninterface OwnProps {\n  foreldreType: string;\n  readOnly: boolean;\n  alleKodeverk: AlleKodeverk;\n  erEndringssøknad: boolean;\n}\n\ninterface StaticFunctions {\n  buildInitialValues: () => any;\n  transformValues: (values: FormValues) => any;\n}\n\n/**\n * PermisjonPanel\n *\n * Viser permisjonspanel for mor eller far/medmor\n */\nconst PermisjonPanel: FunctionComponent<OwnProps> & StaticFunctions = ({\n  foreldreType,\n  readOnly,\n  alleKodeverk,\n  erEndringssøknad,\n}) => {\n  const intl = useIntl();\n\n  const { watch, setError, clearErrors, getValues, formState } = useFormContext<FormValues>();\n  const fulltUttak = watch(`${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.fulltUttak`) || false;\n\n  const isError = getIsRequired(getValues);\n  useEffect(() => {\n    if (isError) {\n      setError(`${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.notRegisteredInput`, {\n        type: 'custom',\n        message: intl.formatMessage({ id: 'PermisjonPanel.MinstEnPeriodeRequired' }),\n      });\n    }\n    if (!isError) {\n      clearErrors(`${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.notRegisteredInput`);\n    }\n  }, [isError]);\n\n  return (\n    <BorderBox>\n      <div className={styles.flexContainer}>\n        <Heading size=\"small\">\n          <FormattedMessage id=\"Registrering.Permisjon.Title\" />\n        </Heading>\n        <VerticalSpacer sixteenPx />\n        <VerticalSpacer eightPx />\n        <Label size=\"small\">\n          <FormattedMessage id=\"Registrering.Permisjon.FulltUttak\" />\n        </Label>\n        <VerticalSpacer eightPx />\n        <CheckboxField\n          readOnly={readOnly}\n          name={`${TIDSROM_PERMISJON_FORM_NAME_PREFIX}.fulltUttak`}\n          label={<FormattedMessage id=\"Registrering.Permisjon.FulltUttak\" />}\n        />\n        {fulltUttak && (\n          <RenderPermisjonPeriodeFieldArray\n            sokerErMor={foreldreType === ForeldreType.MOR}\n            readOnly={readOnly}\n            alleKodeverk={alleKodeverk}\n          />\n        )}\n        <VerticalSpacer twentyPx />\n        <PermisjonOverforingAvKvoterPanel\n          readOnly={readOnly}\n          foreldreType={foreldreType}\n          alleKodeverk={alleKodeverk}\n          erEndringssøknad={erEndringssøknad}\n        />\n        <VerticalSpacer twentyPx />\n        <PermisjonUtsettelsePanel readOnly={readOnly} alleKodeverk={alleKodeverk} />\n        <VerticalSpacer twentyPx />\n        <PermisjonGraderingPanel readOnly={readOnly} alleKodeverk={alleKodeverk} />\n        <VerticalSpacer twentyPx />\n        <PermisjonOppholdPanel readOnly={readOnly} alleKodeverk={alleKodeverk} />\n        {formState.isSubmitted && formState.errors[TIDSROM_PERMISJON_FORM_NAME_PREFIX]?.notRegisteredInput?.message && (\n          <ErrorMessage>\n            {formState.errors[TIDSROM_PERMISJON_FORM_NAME_PREFIX]?.notRegisteredInput?.message}\n          </ErrorMessage>\n        )}\n      </div>\n    </BorderBox>\n  );\n};\n\nPermisjonPanel.transformValues = (values: FormValues) => {\n  const permisjonValues = values[TIDSROM_PERMISJON_FORM_NAME_PREFIX]!;\n  const newValues = permisjonValues;\n  const permisjonsdata = permisjonValues[PERMISJON_PERIODE_FIELD_ARRAY_NAME];\n  if (values.tidsromPermisjon?.fulltUttak && permisjonsdata) {\n    newValues[PERMISJON_PERIODE_FIELD_ARRAY_NAME] = RenderPermisjonPeriodeFieldArray.transformValues(permisjonsdata);\n  }\n  const graderingdata = permisjonValues[GRADERING_PERIODE_FIELD_ARRAY_NAME];\n  if (values.tidsromPermisjon?.skalGradere && graderingdata) {\n    newValues[GRADERING_PERIODE_FIELD_ARRAY_NAME] = PermisjonGraderingPanel.transformValues(permisjonValues);\n  }\n\n  if (!values.tidsromPermisjon?.fulltUttak) {\n    newValues[PERMISJON_PERIODE_FIELD_ARRAY_NAME] = undefined;\n  }\n  if (!values.tidsromPermisjon?.skalGradere) {\n    newValues[GRADERING_PERIODE_FIELD_ARRAY_NAME] = undefined;\n  }\n  if (!values.tidsromPermisjon?.skalUtsette) {\n    newValues[UTSETTELSE_PERIODE_FIELD_ARRAY_NAME] = undefined;\n  }\n  if (!values.tidsromPermisjon?.skalOvertaKvote) {\n    newValues[OVERFORING_PERIODE_FIELD_ARRAY_NAME] = undefined;\n  }\n  if (!values.tidsromPermisjon?.skalHaOpphold) {\n    newValues[OPPHOLD_PERIODE_FIELD_ARRAY_NAME] = undefined;\n  }\n\n  return newValues;\n};\n\nPermisjonPanel.buildInitialValues = () => ({\n  [TIDSROM_PERMISJON_FORM_NAME_PREFIX]: {\n    ...PermisjonUtsettelsePanel.buildInitialValues(),\n    ...PermisjonGraderingPanel.buildInitialValues(),\n    ...PermisjonOverforingAvKvoterPanel.buildInitialValues(),\n    ...PermisjonOppholdPanel.buildInitialValues(),\n    [PERMISJON_PERIODE_FIELD_ARRAY_NAME]: [{}],\n    fulltUttak: false,\n  },\n});\n\nexport default PermisjonPanel;\n","import React, { FunctionComponent } from 'react';\nimport { RawIntlProvider } from 'react-intl';\n\nimport { createIntl } from '@navikt/ft-utils';\n\nimport { AlleKodeverk } from '@navikt/fp-types';\n\nimport PermisjonPanel, { FormValues } from './components/PermisjonPanel';\nimport messages from '../../i18n/nb_NO.json';\n\nconst intl = createIntl(messages);\n\ninterface OwnProps {\n  foreldreType: string;\n  readOnly: boolean;\n  alleKodeverk: AlleKodeverk;\n  erEndringssøknad: boolean;\n}\n\ninterface StaticFunctions {\n  buildInitialValues: () => any;\n  transformValues: (values: FormValues) => any;\n}\n\nconst PermisjonIndex: FunctionComponent<OwnProps> & StaticFunctions = ({\n  foreldreType,\n  readOnly,\n  alleKodeverk,\n  erEndringssøknad,\n}) => (\n  <RawIntlProvider value={intl}>\n    <PermisjonPanel\n      readOnly={readOnly}\n      foreldreType={foreldreType}\n      alleKodeverk={alleKodeverk}\n      erEndringssøknad={erEndringssøknad}\n    />\n  </RawIntlProvider>\n);\n\nPermisjonIndex.transformValues = PermisjonPanel.transformValues;\n\nPermisjonIndex.buildInitialValues = PermisjonPanel.buildInitialValues;\n\nexport default PermisjonIndex;\n","import { notNull } from '@navikt/ft-utils';\nimport { FagsakYtelseType } from '@navikt/ft-kodeverk';\n\nimport { familieHendelseType } from '@navikt/fp-kodeverk';\n\nclass SoknadData {\n  fagsakYtelseType: string;\n\n  familieHendelseType: string;\n\n  foreldreType: string;\n\n  constructor(selectedFagsakYtelseType: string, selectedFamilieHendelseType: any, selectedForeldreType: string) {\n    this.fagsakYtelseType = notNull(selectedFagsakYtelseType);\n    if (selectedFagsakYtelseType === FagsakYtelseType.SVANGERSKAPSPENGER) {\n      this.familieHendelseType = familieHendelseType.FODSEL;\n    } else {\n      this.familieHendelseType = notNull(selectedFamilieHendelseType);\n    }\n    this.foreldreType = notNull(selectedForeldreType);\n  }\n\n  getFagsakYtelseType(): string {\n    return this.fagsakYtelseType;\n  }\n\n  getFamilieHendelseType(): string {\n    return this.familieHendelseType;\n  }\n\n  getForeldreType(): string {\n    return this.foreldreType;\n  }\n}\n\nexport default SoknadData;\n","import React, { FunctionComponent } from 'react';\nimport { createIntl } from '@navikt/ft-utils';\nimport { Heading } from '@navikt/ds-react';\nimport { BorderBox, FlexColumn, FlexContainer, FlexRow, VerticalSpacer } from '@navikt/ft-ui-komponenter';\nimport { Datepicker } from '@navikt/ft-form-hooks';\nimport { dateBeforeOrEqualToToday, hasValidDate, required } from '@navikt/ft-form-validators';\n\nimport messages from '../../i18n/nb_NO.json';\n\nconst intl = createIntl(messages);\n\nexport type FormValues = {\n  termindato?: string;\n  foedselsDato?: string;\n};\n\ninterface OwnProps {\n  readOnly: boolean;\n}\n\n/*\n * TerminFodselSvpPanel\n *\n * Form som brukes for registrere termin og fødsel i papirsøknad.\n */\nconst TerminFodselSvpPanel: FunctionComponent<OwnProps> = ({ readOnly }) => (\n  <BorderBox>\n    <Heading size=\"small\">{intl.formatMessage({ id: 'TerminFodselSvpPanel.TerminOgFodsel' })}</Heading>\n    <VerticalSpacer sixteenPx />\n    <FlexContainer>\n      <FlexRow>\n        <FlexColumn>\n          <Datepicker\n            name=\"termindato\"\n            label={intl.formatMessage({ id: 'TerminFodselSvpPanel.Termindato' })}\n            isReadOnly={readOnly}\n            validate={[required, hasValidDate]}\n          />\n        </FlexColumn>\n        <FlexColumn>\n          <Datepicker\n            name=\"foedselsDato\"\n            label={intl.formatMessage({ id: 'TerminFodselSvpPanel.Fodselsdato' })}\n            isReadOnly={readOnly}\n            validate={[hasValidDate, dateBeforeOrEqualToToday]}\n          />\n        </FlexColumn>\n      </FlexRow>\n    </FlexContainer>\n  </BorderBox>\n);\n\nexport default TerminFodselSvpPanel;\n","import React, { FunctionComponent, useEffect } from 'react';\nimport { useIntl } from 'react-intl';\nimport { FlexColumn, FlexContainer, FlexRow, VerticalSpacer } from '@navikt/ft-ui-komponenter';\nimport { required, maxValue } from '@navikt/ft-form-validators';\nimport { Datepicker, InputField, SelectField, PeriodFieldArray } from '@navikt/ft-form-hooks';\n\nimport { tilretteleggingType } from '@navikt/fp-kodeverk';\n\nimport { useFieldArray, useFormContext } from 'react-hook-form';\nimport styles from './behovForTilretteleggingFieldArray.module.css';\n\nconst maxValue3 = maxValue(100);\n\nexport const behovForTilretteleggingFieldArrayName = 'tilretteleggingArbeidsgiver';\nexport const selvstendigNaringsdrivendeFieldArrayName = 'tilretteleggingSelvstendigNaringsdrivende';\nexport const frilansFieldArrayName = 'tilretteleggingFrilans';\n\ntype FormValues = {\n  tilretteleggingType: string;\n  dato: string;\n  stillingsprosent: string;\n};\n\nconst defaultTilrettelegging: FormValues = {\n  tilretteleggingType: '',\n  dato: '',\n  stillingsprosent: '',\n};\n\ninterface OwnProps {\n  readOnly: boolean;\n  name: string;\n}\n\n/**\n * BehovForTilrettteleggingFieldArray\n *\n * Viser inputfelter for tilrettelegging av arbeidsforhold for selvstendig næringsdrivende eller frilans.\n */\nconst BehovForTilretteleggingFieldArray: FunctionComponent<OwnProps> = ({ readOnly, name }) => {\n  const intl = useIntl();\n\n  const { control } = useFormContext();\n  const { fields, remove, append } = useFieldArray({\n    control,\n    name,\n  });\n\n  useEffect(() => {\n    if (fields.length === 0) {\n      append(defaultTilrettelegging);\n    }\n  }, []);\n\n  return (\n    <PeriodFieldArray\n      fields={fields}\n      emptyPeriodTemplate={defaultTilrettelegging}\n      bodyText={intl.formatMessage({ id: 'BehovForTilrettteleggingFieldArray.LeggTilTilretteleggingsbehov' })}\n      readOnly={readOnly}\n      append={append}\n      remove={remove}\n    >\n      {(field, index, getRemoveButton) => (\n        <div key={field.id} className={index !== fields.length - 1 ? styles.notLastRow : ''}>\n          <VerticalSpacer sixteenPx />\n          <FlexContainer>\n            <FlexRow>\n              <FlexColumn>\n                <SelectField\n                  readOnly={readOnly}\n                  name={`${name}.${index}.tilretteleggingType`}\n                  label={\n                    index === 0\n                      ? intl.formatMessage({ id: 'BehovForTilrettteleggingFieldArray.BehovForTilrettelegging' })\n                      : ''\n                  }\n                  validate={[required]}\n                  selectValues={[\n                    <option\n                      value={tilretteleggingType.HEL_TILRETTELEGGING}\n                      key={tilretteleggingType.HEL_TILRETTELEGGING}\n                    >\n                      {intl.formatMessage({ id: 'BehovForTilrettteleggingFieldArray.KanGjennomfores' })}\n                    </option>,\n                    <option\n                      value={tilretteleggingType.DELVIS_TILRETTELEGGING}\n                      key={tilretteleggingType.DELVIS_TILRETTELEGGING}\n                    >\n                      {intl.formatMessage({ id: 'BehovForTilrettteleggingFieldArray.RedusertArbeid' })}\n                    </option>,\n                    <option\n                      value={tilretteleggingType.INGEN_TILRETTELEGGING}\n                      key={tilretteleggingType.INGEN_TILRETTELEGGING}\n                    >\n                      {intl.formatMessage({ id: 'BehovForTilrettteleggingFieldArray.KanIkkeGjennomfores' })}\n                    </option>,\n                  ]}\n                />\n              </FlexColumn>\n              <FlexColumn>\n                <Datepicker\n                  isReadOnly={readOnly}\n                  name={`${name}.${index}.dato`}\n                  label={index === 0 ? intl.formatMessage({ id: 'BehovForTilrettteleggingFieldArray.FraDato' }) : ''}\n                  validate={[required]}\n                />\n              </FlexColumn>\n              <FlexColumn>\n                <InputField\n                  readOnly={readOnly}\n                  name={`${name}.${index}.stillingsprosent`}\n                  label={\n                    index === 0 ? intl.formatMessage({ id: 'BehovForTilrettteleggingFieldArray.Stillingsprosent' }) : ''\n                  }\n                  validate={[required, maxValue3]}\n                  maxLength={99}\n                />\n              </FlexColumn>\n              {getRemoveButton && <FlexColumn>{getRemoveButton()}</FlexColumn>}\n            </FlexRow>\n          </FlexContainer>\n        </div>\n      )}\n    </PeriodFieldArray>\n  );\n};\n\nexport default BehovForTilretteleggingFieldArray;\n","import React, { FunctionComponent } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { Button } from '@navikt/ds-react';\nimport { VerticalSpacer, FlexColumn, FlexContainer, FlexRow } from '@navikt/ft-ui-komponenter';\nimport { Datepicker, InputField } from '@navikt/ft-form-hooks';\nimport { required, hasValidOrgNumberOrFodselsnr, hasNoWhiteSpace } from '@navikt/ft-form-validators';\n\nimport { useFieldArray, useFormContext } from 'react-hook-form';\nimport BehovForTilretteleggingFieldArray, {\n  behovForTilretteleggingFieldArrayName,\n} from './BehovForTilretteleggingFieldArray';\n\nconst TILRETTELEGGING_NAME_PREFIX = 'tilretteleggingArbeidsforhold';\n\nconst tilretteleggingForArbeidsgiverFieldArrayName = 'tilretteleggingForArbeidsgiver';\n\ntype FormValues = {\n  organisasjonsnummer: string;\n  behovsdato: string;\n};\n\nconst defaultTilrettelegging: FormValues = {\n  organisasjonsnummer: '',\n  behovsdato: '',\n};\n\ninterface OwnProps {\n  readOnly: boolean;\n}\n\n/*\n * TilretteleggingForArbeidsgiverFieldArray\n *\n * Form som brukes for registrere om det er behov for tilrettelegging for arbeidsgiver.\n */\nconst TilretteleggingForArbeidsgiverFieldArray: FunctionComponent<OwnProps> = ({ readOnly }) => {\n  const intl = useIntl();\n\n  const { control } = useFormContext<{\n    [TILRETTELEGGING_NAME_PREFIX]: { [tilretteleggingForArbeidsgiverFieldArrayName]: FormValues[] };\n  }>();\n  const { fields, append } = useFieldArray({\n    control,\n    name: `${TILRETTELEGGING_NAME_PREFIX}.${tilretteleggingForArbeidsgiverFieldArrayName}`,\n  });\n\n  const leggTilArbeidsgiver = () => {\n    append(defaultTilrettelegging);\n  };\n\n  const namePart1 = `${TILRETTELEGGING_NAME_PREFIX}.${tilretteleggingForArbeidsgiverFieldArrayName}`;\n  return (\n    <>\n      {fields.map((field, index: number) => (\n        <div key={field.id}>\n          <FlexContainer>\n            <FlexRow>\n              <FlexColumn>\n                <InputField\n                  readOnly={readOnly}\n                  name={`${namePart1}.${index}.organisasjonsnummer`}\n                  label={intl.formatMessage({ id: 'TilretteleggingForArbeidsgiverFieldArray.OrgNr' })}\n                  validate={[\n                    required,\n                    // TODO verdi her bør vel vera string?\n                    (value: number) => hasNoWhiteSpace(value.toString()),\n                    hasValidOrgNumberOrFodselsnr,\n                  ]}\n                  maxLength={99}\n                />\n              </FlexColumn>\n              <FlexColumn>\n                <Datepicker\n                  name={`${namePart1}.${index}.behovsdato`}\n                  label={intl.formatMessage({ id: 'TilretteleggingForArbeidsgiverFieldArray.TilretteleggingFra' })}\n                  validate={[required]}\n                  isReadOnly={readOnly}\n                />\n              </FlexColumn>\n            </FlexRow>\n          </FlexContainer>\n          <VerticalSpacer sixteenPx />\n          <BehovForTilretteleggingFieldArray\n            name={`${namePart1}.${index}.${behovForTilretteleggingFieldArrayName}`}\n            readOnly={readOnly}\n          />\n          {fields.length > index + 1 && (\n            <>\n              <hr />\n              <VerticalSpacer sixteenPx />\n            </>\n          )}\n          {fields.length === index + 1 && (\n            <Button size=\"small\" variant=\"secondary\" onClick={leggTilArbeidsgiver} type=\"button\">\n              <FormattedMessage id=\"TilretteleggingForArbeidsgiverFieldArray.LeggTilArbeidsgiver\" />\n            </Button>\n          )}\n        </div>\n      ))}\n    </>\n  );\n};\n\nexport default TilretteleggingForArbeidsgiverFieldArray;\n","import React, { FunctionComponent, useEffect } from 'react';\nimport { RawIntlProvider, FormattedMessage } from 'react-intl';\nimport { ErrorMessage, Heading } from '@navikt/ds-react';\nimport { RadioGroupPanel, Datepicker } from '@navikt/ft-form-hooks';\nimport { BorderBox, ArrowBox, VerticalSpacer } from '@navikt/ft-ui-komponenter';\nimport { required } from '@navikt/ft-form-validators';\nimport { createIntl } from '@navikt/ft-utils';\n\nimport { useFormContext } from 'react-hook-form';\nimport BehovForTilretteleggingFieldArray, {\n  frilansFieldArrayName,\n  selvstendigNaringsdrivendeFieldArrayName,\n} from './BehovForTilretteleggingFieldArray';\nimport TilretteleggingForArbeidsgiverFieldArray from './TilretteleggingForArbeidsgiverFieldArray';\nimport messages from '../../i18n/nb_NO.json';\n\nconst intl = createIntl(messages);\n\nconst tilretteleggingForArbeidsgiverFieldArrayName = 'tilretteleggingForArbeidsgiver';\nconst TILRETTELEGGING_NAME_PREFIX = 'tilretteleggingArbeidsforhold';\n\nexport type Tilrettelegging = {\n  tilretteleggingType: string;\n  fomDato: string;\n  stillingsprosent?: string;\n};\n\ntype VirtuellFeilType = {\n  notRegisteredInput?: boolean;\n};\n\nexport type FormValues = {\n  [TILRETTELEGGING_NAME_PREFIX]: {\n    [tilretteleggingForArbeidsgiverFieldArrayName]?: {\n      behovsdato?: string;\n      organisasjonsnummer?: string;\n      tilretteleggingArbeidsgiver?: Tilrettelegging[];\n    }[];\n    sokForArbeidsgiver?: boolean;\n    sokForFrilans?: boolean;\n    behovsdatoFrilans?: string;\n    tilretteleggingFrilans?: Tilrettelegging[];\n    sokForSelvstendigNaringsdrivende?: boolean;\n    behovsdatoSN?: string;\n    tilretteleggingSelvstendigNaringsdrivende?: Tilrettelegging[];\n  } & VirtuellFeilType;\n};\n\ninterface OwnProps {\n  readOnly: boolean;\n}\n\ninterface StaticFunctions {\n  buildInitialValues: () => FormValues;\n}\n\n/*\n * BehovForTilretteleggingPanel\n *\n * Form som brukes for registrere om det er behov for tilrettelegging.\n */\nconst BehovForTilretteleggingPanel: FunctionComponent<OwnProps> & StaticFunctions = ({ readOnly }) => {\n  const { watch, setError, clearErrors, formState } = useFormContext<FormValues>();\n\n  const sokForSelvstendigNaringsdrivende = watch(`${TILRETTELEGGING_NAME_PREFIX}.sokForSelvstendigNaringsdrivende`);\n  const sokForFrilans = watch(`${TILRETTELEGGING_NAME_PREFIX}.sokForFrilans`);\n  const sokForArbeidsgiver = watch(`${TILRETTELEGGING_NAME_PREFIX}.sokForArbeidsgiver`);\n\n  const isError = !sokForSelvstendigNaringsdrivende && !sokForFrilans && !sokForArbeidsgiver;\n  useEffect(() => {\n    if (isError) {\n      setError(`${TILRETTELEGGING_NAME_PREFIX}.notRegisteredInput`, {\n        type: 'custom',\n        message: intl.formatMessage({ id: 'BehovForTilretteleggingPanel.MinstEnMaaVereJa' }),\n      });\n    }\n    if (!isError) {\n      clearErrors(`${TILRETTELEGGING_NAME_PREFIX}.notRegisteredInput`);\n    }\n  }, [isError]);\n\n  return (\n    <RawIntlProvider value={intl}>\n      <BorderBox>\n        <Heading size=\"small\">\n          <FormattedMessage id=\"BehovForTilretteleggingPanel.BehovForTilrettelegging\" />\n        </Heading>\n        <VerticalSpacer sixteenPx />\n        {formState.isSubmitted && formState.errors[TILRETTELEGGING_NAME_PREFIX]?.notRegisteredInput?.message && (\n          <ErrorMessage>{formState.errors[TILRETTELEGGING_NAME_PREFIX]?.notRegisteredInput?.message}</ErrorMessage>\n        )}\n        <RadioGroupPanel\n          name={`${TILRETTELEGGING_NAME_PREFIX}.sokForSelvstendigNaringsdrivende`}\n          label={<FormattedMessage id=\"BehovForTilretteleggingPanel.SokForSelvstendigNaringsdrivende\" />}\n          validate={[required]}\n          isReadOnly={readOnly}\n          isTrueOrFalseSelection\n          isHorizontal\n          radios={[\n            {\n              label: intl.formatMessage({ id: 'BehovForTilretteleggingPanel.Ja' }),\n              value: 'true',\n            },\n            {\n              label: intl.formatMessage({ id: 'BehovForTilretteleggingPanel.Nei' }),\n              value: 'false',\n            },\n          ]}\n        />\n        <VerticalSpacer sixteenPx />\n        {sokForSelvstendigNaringsdrivende && (\n          <ArrowBox>\n            <Datepicker\n              name={`${TILRETTELEGGING_NAME_PREFIX}.behovsdatoSN`}\n              label={intl.formatMessage({ id: 'BehovForTilretteleggingPanel.TilretteleggingFra' })}\n              validate={[required]}\n              isReadOnly={readOnly}\n            />\n            <BehovForTilretteleggingFieldArray\n              name={`${TILRETTELEGGING_NAME_PREFIX}.${selvstendigNaringsdrivendeFieldArrayName}`}\n              readOnly={readOnly}\n            />\n          </ArrowBox>\n        )}\n        <RadioGroupPanel\n          name={`${TILRETTELEGGING_NAME_PREFIX}.sokForFrilans`}\n          label={<FormattedMessage id=\"BehovForTilretteleggingPanel.SokForFrilans\" />}\n          validate={[required]}\n          isReadOnly={readOnly}\n          isTrueOrFalseSelection\n          isHorizontal\n          radios={[\n            {\n              label: intl.formatMessage({ id: 'BehovForTilretteleggingPanel.Ja' }),\n              value: 'true',\n            },\n            {\n              label: intl.formatMessage({ id: 'BehovForTilretteleggingPanel.Nei' }),\n              value: 'false',\n            },\n          ]}\n        />\n        <VerticalSpacer sixteenPx />\n        {sokForFrilans && (\n          <ArrowBox>\n            <Datepicker\n              name={`${TILRETTELEGGING_NAME_PREFIX}.behovsdatoFrilans`}\n              label={intl.formatMessage({ id: 'BehovForTilretteleggingPanel.TilretteleggingFra' })}\n              validate={[required]}\n              isReadOnly={readOnly}\n            />\n            <BehovForTilretteleggingFieldArray\n              name={`${TILRETTELEGGING_NAME_PREFIX}.${frilansFieldArrayName}`}\n              readOnly={readOnly}\n            />\n          </ArrowBox>\n        )}\n        <RadioGroupPanel\n          name={`${TILRETTELEGGING_NAME_PREFIX}.sokForArbeidsgiver`}\n          label={<FormattedMessage id=\"BehovForTilretteleggingPanel.SokForArbeidsgiver\" />}\n          validate={[required]}\n          isReadOnly={readOnly}\n          isTrueOrFalseSelection\n          isHorizontal\n          radios={[\n            {\n              label: intl.formatMessage({ id: 'BehovForTilretteleggingPanel.Ja' }),\n              value: 'true',\n            },\n            {\n              label: intl.formatMessage({ id: 'BehovForTilretteleggingPanel.Nei' }),\n              value: 'false',\n            },\n          ]}\n        />\n        <VerticalSpacer sixteenPx />\n        {sokForArbeidsgiver && (\n          <ArrowBox>\n            <TilretteleggingForArbeidsgiverFieldArray readOnly={readOnly} />\n          </ArrowBox>\n        )}\n      </BorderBox>\n    </RawIntlProvider>\n  );\n};\n\nBehovForTilretteleggingPanel.buildInitialValues = (): FormValues => ({\n  [TILRETTELEGGING_NAME_PREFIX]: {\n    [tilretteleggingForArbeidsgiverFieldArrayName]: [{}],\n  },\n});\n\nexport default BehovForTilretteleggingPanel;\n","import React, { FunctionComponent } from 'react';\nimport { AlleKodeverk } from '@navikt/fp-types';\nimport {\n  SprakPapirsoknadIndex,\n  RettigheterPapirsoknadIndex,\n  OppholdINorgePapirsoknadIndex,\n  OppholdINorgeFormValues,\n  OmsorgOgAdopsjonPapirsoknadIndex,\n  OmsorgOgAdopsjonFormValues,\n  SoknadData,\n  OmsorgOgAdopsjonTransformedFormValues,\n} from '@navikt/fp-papirsoknad-ui-komponenter';\nimport { familieHendelseType } from '@navikt/fp-kodeverk';\n\nimport { HStack } from '@navikt/ds-react';\nimport styles from './registreringAdopsjonOgOmsorgGrid.module.css';\n\nconst OMSORG_FORM_NAME_PREFIX = 'omsorg';\n\nexport type FormValues = {\n  rettigheter?: string;\n  foedselsDato?: string;\n  [OMSORG_FORM_NAME_PREFIX]?: OmsorgOgAdopsjonFormValues;\n} & OppholdINorgeFormValues;\n\nexport type TransformedFormValues = Omit<FormValues, 'omsorg'> & {\n  [OMSORG_FORM_NAME_PREFIX]?: OmsorgOgAdopsjonTransformedFormValues;\n};\n\ninterface OwnProps {\n  readOnly: boolean;\n  soknadData: SoknadData;\n  alleKodeverk: AlleKodeverk;\n  fodselsdato?: string | string[];\n  mottattDato?: string;\n}\n\ninterface StaticFunctions {\n  buildInitialValues: () => FormValues;\n  transformValues: (values: FormValues) => TransformedFormValues;\n}\n\n/*\n * RegistreringAdopsjonOgOmsorgGrid\n *\n * Form som brukes ved adopsjon for tilleggsopplysninger.\n */\nconst RegistreringAdopsjonOgOmsorgGrid: FunctionComponent<OwnProps> & StaticFunctions = ({\n  readOnly,\n  soknadData,\n  alleKodeverk,\n  fodselsdato,\n  mottattDato,\n}) => (\n  <HStack justify=\"space-between\">\n    <div className={styles.col}>\n      <RettigheterPapirsoknadIndex readOnly={readOnly} soknadData={soknadData} />\n      <OppholdINorgePapirsoknadIndex\n        readOnly={readOnly}\n        alleKodeverk={alleKodeverk}\n        erAdopsjon={soknadData.getFamilieHendelseType() !== familieHendelseType.ADOPSJON}\n        mottattDato={mottattDato}\n      />\n      <SprakPapirsoknadIndex readOnly={readOnly} />\n    </div>\n    <div className={styles.col}>\n      <OmsorgOgAdopsjonPapirsoknadIndex\n        readOnly={readOnly}\n        familieHendelseType={soknadData.getFamilieHendelseType()}\n        isForeldrepengerFagsak={false}\n        fodselsdato={fodselsdato}\n      />\n    </div>\n  </HStack>\n);\n\nRegistreringAdopsjonOgOmsorgGrid.transformValues = (values: FormValues): TransformedFormValues => ({\n  ...OppholdINorgePapirsoknadIndex.transformValues(values),\n  [OMSORG_FORM_NAME_PREFIX]: OmsorgOgAdopsjonPapirsoknadIndex.transformValues(values[OMSORG_FORM_NAME_PREFIX]!),\n});\n\nRegistreringAdopsjonOgOmsorgGrid.buildInitialValues = () => ({\n  [OMSORG_FORM_NAME_PREFIX]: {},\n  ...OppholdINorgePapirsoknadIndex.buildInitialValues(),\n});\n\nexport default RegistreringAdopsjonOgOmsorgGrid;\n","import React, { FunctionComponent } from 'react';\n\nimport { AlleKodeverk } from '@navikt/fp-types';\nimport { familieHendelseType, foreldreType } from '@navikt/fp-kodeverk';\nimport {\n  SprakPapirsoknadIndex,\n  RettigheterPapirsoknadIndex,\n  OppholdINorgePapirsoknadIndex,\n  OppholdINorgeFormValues,\n  FodselPapirsoknadIndex,\n  FodselFormValues,\n  OmsorgOgAdopsjonPapirsoknadIndex,\n  OmsorgOgAdopsjonFormValues,\n  SoknadData,\n  OmsorgOgAdopsjonTransformedFormValues,\n} from '@navikt/fp-papirsoknad-ui-komponenter';\nimport { HStack } from '@navikt/ds-react';\n\nimport styles from './registreringFodselGrid.module.css';\n\nconst OMSORG_FORM_NAME_PREFIX = 'omsorg';\n\nexport type FormValues = {\n  rettigheter?: string;\n  foedselsData?: string;\n  [OMSORG_FORM_NAME_PREFIX]?: OmsorgOgAdopsjonFormValues;\n} & OppholdINorgeFormValues &\n  FodselFormValues;\n\nexport type TransformedFormValues = Omit<FormValues, 'omsorg'> & {\n  [OMSORG_FORM_NAME_PREFIX]?: OmsorgOgAdopsjonTransformedFormValues;\n};\n\ninterface StaticFunctions {\n  buildInitialValues: () => FormValues;\n  transformValues: (values: FormValues) => TransformedFormValues;\n}\n\ninterface OwnProps {\n  readOnly: boolean;\n  soknadData: SoknadData;\n  alleKodeverk: AlleKodeverk;\n  fodselsdato?: string;\n  mottattDato?: string;\n}\n\nconst RegistreringFodselGrid: FunctionComponent<OwnProps> & StaticFunctions = ({\n  readOnly,\n  soknadData,\n  alleKodeverk,\n  fodselsdato,\n  mottattDato,\n}) => (\n  <HStack justify=\"space-between\">\n    <div className={styles.col}>\n      {soknadData.getForeldreType() !== foreldreType.MOR && (\n        <RettigheterPapirsoknadIndex readOnly={readOnly} soknadData={soknadData} />\n      )}\n      <OppholdINorgePapirsoknadIndex\n        readOnly={readOnly}\n        erAdopsjon={soknadData.getFamilieHendelseType() !== familieHendelseType.ADOPSJON}\n        alleKodeverk={alleKodeverk}\n        mottattDato={mottattDato}\n      />\n      <SprakPapirsoknadIndex readOnly={readOnly} />\n    </div>\n    <div className={styles.col}>\n      {soknadData.getForeldreType() !== foreldreType.MOR && (\n        <OmsorgOgAdopsjonPapirsoknadIndex\n          readOnly={readOnly}\n          familieHendelseType={soknadData.getFamilieHendelseType()}\n          isForeldrepengerFagsak={false}\n          fodselsdato={fodselsdato}\n        />\n      )}\n      <FodselPapirsoknadIndex readOnly={readOnly} />\n    </div>\n  </HStack>\n);\n\nRegistreringFodselGrid.transformValues = values => ({\n  ...OppholdINorgePapirsoknadIndex.transformValues(values),\n  [OMSORG_FORM_NAME_PREFIX]: OmsorgOgAdopsjonPapirsoknadIndex.transformValues(values[OMSORG_FORM_NAME_PREFIX]!),\n});\n\nRegistreringFodselGrid.buildInitialValues = () => ({\n  ...OppholdINorgePapirsoknadIndex.buildInitialValues(),\n  [OMSORG_FORM_NAME_PREFIX]: {},\n});\n\nexport default RegistreringFodselGrid;\n","import React, { FunctionComponent } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Form } from '@navikt/ft-form-hooks';\nimport { omitOne } from '@navikt/ft-utils';\n\nimport { AlleKodeverk } from '@navikt/fp-types';\nimport { familieHendelseType } from '@navikt/fp-kodeverk';\nimport {\n  SoknadData,\n  MottattDatoPapirsoknadIndex,\n  LagreSoknadPapirsoknadIndex,\n  rettighet,\n  MottattDatoFormValues,\n} from '@navikt/fp-papirsoknad-ui-komponenter';\n\nimport RegistreringAdopsjonOgOmsorgGrid, { FormValues as FormValuesAdopsjon } from './RegistreringAdopsjonOgOmsorgGrid';\nimport RegistreringFodselGrid, { FormValues as FormValuesFodsel } from './RegistreringFodselGrid';\n\nexport const ENGANGSSTONAD_FORM_NAME = 'EngangsstonadForm';\n\ntype FormValues = MottattDatoFormValues & (FormValuesFodsel | FormValuesAdopsjon);\n\nconst buildInitialValues = (erFødsel: boolean, erAdopsjon: boolean): FormValues => {\n  if (erFødsel) {\n    return RegistreringFodselGrid.buildInitialValues();\n  }\n  if (erAdopsjon) {\n    return RegistreringAdopsjonOgOmsorgGrid.buildInitialValues();\n  }\n  return {};\n};\n\nconst transformValues = (values: FormValues, erFødsel: boolean, erAdopsjon: boolean) => {\n  let formValues = values;\n  if (values.rettigheter === rettighet.IKKE_RELEVANT) {\n    formValues = omitOne(values, 'rettigheter');\n  }\n  return {\n    ...formValues,\n    ...(erFødsel ? RegistreringFodselGrid.transformValues(formValues) : {}),\n    ...(erAdopsjon ? RegistreringAdopsjonOgOmsorgGrid.transformValues(formValues) : {}),\n  };\n};\n\ninterface OwnProps {\n  readOnly: boolean;\n  soknadData: SoknadData;\n  alleKodeverk: AlleKodeverk;\n  onSubmitUfullstendigsoknad: () => Promise<any>;\n  onSubmit: (values: any) => Promise<any>;\n}\n\nconst EngangsstonadForm: FunctionComponent<OwnProps> = ({\n  readOnly,\n  soknadData,\n  alleKodeverk,\n  onSubmitUfullstendigsoknad,\n  onSubmit,\n}) => {\n  const erFødsel = soknadData.getFamilieHendelseType() === familieHendelseType.FODSEL;\n  const erAdopsjon = soknadData.getFamilieHendelseType() === familieHendelseType.ADOPSJON;\n\n  const formMethods = useForm<FormValues>({\n    defaultValues: buildInitialValues(erFødsel, erAdopsjon),\n  });\n\n  const fodselsdato = formMethods.watch('foedselsDato');\n  const mottattDato = formMethods.watch('mottattDato');\n\n  return (\n    <Form\n      formMethods={formMethods}\n      onSubmit={(values: FormValues) => onSubmit(transformValues(values, erFødsel, erAdopsjon))}\n    >\n      <MottattDatoPapirsoknadIndex readOnly={readOnly} />\n      {erFødsel && (\n        <RegistreringFodselGrid\n          soknadData={soknadData}\n          readOnly={readOnly}\n          alleKodeverk={alleKodeverk}\n          fodselsdato={fodselsdato}\n          mottattDato={mottattDato}\n        />\n      )}\n      {erAdopsjon && (\n        <RegistreringAdopsjonOgOmsorgGrid\n          soknadData={soknadData}\n          readOnly={readOnly}\n          alleKodeverk={alleKodeverk}\n          fodselsdato={fodselsdato}\n          mottattDato={mottattDato}\n        />\n      )}\n      <LagreSoknadPapirsoknadIndex\n        readOnly={readOnly}\n        submitting={formMethods.formState.isSubmitting}\n        onSubmitUfullstendigsoknad={onSubmitUfullstendigsoknad}\n      />\n    </Form>\n  );\n};\n\nexport default EngangsstonadForm;\n","import React, { FunctionComponent } from 'react';\nimport { AlleKodeverk } from '@navikt/fp-types';\nimport { SoknadData } from '@navikt/fp-papirsoknad-ui-komponenter';\n\nimport EngangsstonadForm from './components/EngangsstonadForm';\n\ninterface OwnProps {\n  onSubmitUfullstendigsoknad: () => Promise<any>;\n  onSubmit: (values: any) => Promise<any>;\n  readOnly: boolean;\n  soknadData: SoknadData;\n  alleKodeverk: AlleKodeverk;\n}\n\nconst EngangsstonadPapirsoknadIndex: FunctionComponent<OwnProps> = ({\n  onSubmitUfullstendigsoknad,\n  onSubmit,\n  readOnly,\n  soknadData,\n  alleKodeverk,\n}) => (\n  <EngangsstonadForm\n    onSubmitUfullstendigsoknad={onSubmitUfullstendigsoknad}\n    onSubmit={onSubmit}\n    readOnly={readOnly}\n    soknadData={soknadData}\n    alleKodeverk={alleKodeverk}\n  />\n);\n\nexport default EngangsstonadPapirsoknadIndex;\n","import React, { FunctionComponent, useMemo } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Form } from '@navikt/ft-form-hooks';\nimport { KodeverkMedNavn } from '@navikt/ft-types';\nimport { omitOne } from '@navikt/ft-utils';\n\nimport { AlleKodeverk } from '@navikt/fp-types';\nimport { foreldreType, KodeverkType, familieHendelseType } from '@navikt/fp-kodeverk';\nimport {\n  SoknadData,\n  MottattDatoPapirsoknadIndex,\n  FrilansPapirsoknadIndex,\n  FrilansFormValues,\n  OppholdINorgePapirsoknadIndex,\n  OppholdINorgeFormValues,\n  SprakPapirsoknadIndex,\n  LagreSoknadPapirsoknadIndex,\n  VirksomhetPapirsoknadIndex,\n  OmsorgOgAdopsjonPapirsoknadIndex,\n  OmsorgOgAdopsjonFormValues,\n  InntektsgivendeArbeidPapirsoknadIndex,\n  IArbeidFormValues,\n  AndreYtelserPapirsoknadIndex,\n  AndreYtelserFormValue,\n  RettigheterPapirsoknadIndex,\n  AnnenForelderPapirsoknadIndex,\n  AnnenForelderFormValues,\n  FodselPapirsoknadIndex,\n  BekreftelsePanel,\n  DekningsgradIndex,\n  PermisjonRettigheterPanel,\n  PermisjonIndex,\n  FormValuesPermisjon,\n  PermRettigheterFormValues,\n  MottattDatoFormValues,\n  VirksomhetFormValues,\n  DekningsgradFormValues,\n  FodselFormValues,\n  ANDRE_YTELSER_FORM_NAME_PREFIX,\n  rettighet,\n  TIDSROM_PERMISJON_FORM_NAME_PREFIX,\n} from '@navikt/fp-papirsoknad-ui-komponenter';\n\nconst ANNEN_FORELDER_FORM_NAME_PREFIX = 'annenForelder';\nconst OMSORG_FORM_NAME_PREFIX = 'omsorg';\nconst FRILANS_NAME_PREFIX = 'frilans';\n\ntype FormValues = {\n  rettigheter?: string;\n  [OMSORG_FORM_NAME_PREFIX]: OmsorgOgAdopsjonFormValues;\n  [ANNEN_FORELDER_FORM_NAME_PREFIX]?: AnnenForelderFormValues;\n  [FRILANS_NAME_PREFIX]: FrilansFormValues;\n} & AndreYtelserFormValue &\n  FodselFormValues &\n  IArbeidFormValues &\n  OppholdINorgeFormValues &\n  FormValuesPermisjon &\n  PermRettigheterFormValues &\n  MottattDatoFormValues &\n  VirksomhetFormValues &\n  DekningsgradFormValues;\n\nconst buildInitialValues = (andreYtelser: KodeverkMedNavn[]): FormValues => ({\n  [FRILANS_NAME_PREFIX]: FrilansPapirsoknadIndex.buildInitialValues(),\n  ...AndreYtelserPapirsoknadIndex.buildInitialValues(andreYtelser),\n  ...InntektsgivendeArbeidPapirsoknadIndex.buildInitialValues(),\n  [OMSORG_FORM_NAME_PREFIX]: {},\n  ...OppholdINorgePapirsoknadIndex.buildInitialValues(),\n  ...PermisjonIndex.buildInitialValues(),\n});\n\nconst transformValues = (values: FormValues, andreYtelserKodeverk: KodeverkMedNavn[]) => {\n  let formValues = values;\n  if (values.rettigheter === rettighet.IKKE_RELEVANT) {\n    formValues = omitOne(values, 'rettigheter');\n  }\n  return {\n    ...OppholdINorgePapirsoknadIndex.transformValues(formValues),\n    [OMSORG_FORM_NAME_PREFIX]: OmsorgOgAdopsjonPapirsoknadIndex.transformValues(formValues[OMSORG_FORM_NAME_PREFIX]),\n    [ANDRE_YTELSER_FORM_NAME_PREFIX]: AndreYtelserPapirsoknadIndex.transformValues(formValues, andreYtelserKodeverk),\n    [TIDSROM_PERMISJON_FORM_NAME_PREFIX]: PermisjonIndex.transformValues(formValues),\n    [FRILANS_NAME_PREFIX]: FrilansPapirsoknadIndex.transformValues(formValues[FRILANS_NAME_PREFIX]),\n  };\n};\n\ninterface OwnProps {\n  readOnly: boolean;\n  soknadData: SoknadData;\n  alleKodeverk: AlleKodeverk;\n  fagsakPersonnummer: string;\n  onSubmit: (values: any) => Promise<any>;\n  onSubmitUfullstendigsoknad: () => Promise<any>;\n  erEndringssøknad: boolean;\n}\n\n/**\n * ForeldrepengerForm\n *\n * Form-komponent for registrering av papirsøknad for foreldrepenger.\n */\nconst ForeldrepengerForm: FunctionComponent<OwnProps> = ({\n  readOnly,\n  soknadData,\n  alleKodeverk,\n  onSubmit,\n  onSubmitUfullstendigsoknad,\n  fagsakPersonnummer,\n  erEndringssøknad,\n}) => {\n  const formMethods = useForm<FormValues>({\n    defaultValues: useMemo(() => buildInitialValues(alleKodeverk[KodeverkType.ARBEID_TYPE]), []),\n  });\n\n  const andreYtelserKodeverk = alleKodeverk[KodeverkType.ARBEID_TYPE];\n\n  const sokerHarAleneomsorg = formMethods.watch('sokerHarAleneomsorg');\n  const denAndreForelderenHarRettPaForeldrepenger = formMethods.watch('denAndreForelderenHarRettPaForeldrepenger');\n  const annenForelderInformertRequired = !sokerHarAleneomsorg && denAndreForelderenHarRettPaForeldrepenger !== false;\n\n  const fodselsdato = formMethods.watch('foedselsDato');\n  const mottattDato = formMethods.watch('mottattDato');\n\n  return (\n    <Form\n      formMethods={formMethods}\n      onSubmit={(values: FormValues) => onSubmit(transformValues(values, andreYtelserKodeverk))}\n    >\n      <MottattDatoPapirsoknadIndex readOnly={readOnly} />\n      <OppholdINorgePapirsoknadIndex\n        readOnly={readOnly}\n        erAdopsjon={soknadData.getFamilieHendelseType() !== familieHendelseType.ADOPSJON}\n        alleKodeverk={alleKodeverk}\n        mottattDato={mottattDato}\n      />\n      <InntektsgivendeArbeidPapirsoknadIndex readOnly={readOnly} alleKodeverk={alleKodeverk} />\n      <VirksomhetPapirsoknadIndex readOnly={readOnly} alleKodeverk={alleKodeverk} />\n      <FrilansPapirsoknadIndex readOnly={readOnly} />\n      <AndreYtelserPapirsoknadIndex readOnly={readOnly} alleKodeverk={alleKodeverk} />\n      <DekningsgradIndex readOnly={readOnly} />\n      {soknadData.getFamilieHendelseType() === familieHendelseType.FODSEL && (\n        <FodselPapirsoknadIndex readOnly={readOnly} erForeldrepenger />\n      )}\n      <RettigheterPapirsoknadIndex readOnly={readOnly} soknadData={soknadData} />\n      <OmsorgOgAdopsjonPapirsoknadIndex\n        readOnly={readOnly}\n        familieHendelseType={soknadData.getFamilieHendelseType()}\n        fodselsdato={fodselsdato}\n        isForeldrepengerFagsak\n      />\n      <AnnenForelderPapirsoknadIndex\n        readOnly={readOnly}\n        permisjonRettigheterPanel={\n          <PermisjonRettigheterPanel\n            readOnly={readOnly}\n            denAndreForelderenHarRettPaForeldrepenger={denAndreForelderenHarRettPaForeldrepenger}\n            sokerErMor={soknadData.getForeldreType() === foreldreType.MOR}\n          />\n        }\n        alleKodeverk={alleKodeverk}\n        fagsakPersonnummer={fagsakPersonnummer}\n      />\n      <PermisjonIndex\n        foreldreType={soknadData.getForeldreType()}\n        readOnly={readOnly}\n        alleKodeverk={alleKodeverk}\n        erEndringssøknad={erEndringssøknad}\n      />\n      <BekreftelsePanel annenForelderInformertRequired={annenForelderInformertRequired} readOnly={readOnly} />\n      <SprakPapirsoknadIndex readOnly={readOnly} />\n      <LagreSoknadPapirsoknadIndex\n        readOnly={readOnly}\n        onSubmitUfullstendigsoknad={onSubmitUfullstendigsoknad}\n        submitting={formMethods.formState.isSubmitting}\n      />\n    </Form>\n  );\n};\n\nexport default ForeldrepengerForm;\n","import React, { FunctionComponent } from 'react';\n\nimport { AlleKodeverk } from '@navikt/fp-types';\nimport { SoknadData } from '@navikt/fp-papirsoknad-ui-komponenter';\n\nimport ForeldrepengerForm from './components/ForeldrepengerForm';\n\ninterface OwnProps {\n  onSubmitUfullstendigsoknad: () => Promise<any>;\n  onSubmit: (values: any) => Promise<any>;\n  readOnly: boolean;\n  soknadData: SoknadData;\n  alleKodeverk: AlleKodeverk;\n  fagsakPersonnummer: string;\n  erEndringssøknad: boolean;\n}\n\nconst ForeldrepengerPapirsoknadIndex: FunctionComponent<OwnProps> = ({\n  onSubmitUfullstendigsoknad,\n  onSubmit,\n  readOnly,\n  soknadData,\n  alleKodeverk,\n  fagsakPersonnummer,\n  erEndringssøknad,\n}) => (\n  <ForeldrepengerForm\n    onSubmitUfullstendigsoknad={onSubmitUfullstendigsoknad}\n    onSubmit={onSubmit}\n    readOnly={readOnly}\n    soknadData={soknadData}\n    alleKodeverk={alleKodeverk}\n    fagsakPersonnummer={fagsakPersonnummer}\n    erEndringssøknad={erEndringssøknad}\n  />\n);\n\nexport default ForeldrepengerPapirsoknadIndex;\n","import React, { FunctionComponent, useMemo } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Form } from '@navikt/ft-form-hooks';\nimport { AlleKodeverk, KodeverkMedNavn } from '@navikt/fp-types';\n\nimport {\n  SoknadData,\n  MottattDatoPapirsoknadIndex,\n  FrilansPapirsoknadIndex,\n  FrilansFormValues,\n  OppholdINorgePapirsoknadIndex,\n  OppholdINorgeFormValues,\n  SprakPapirsoknadIndex,\n  LagreSoknadPapirsoknadIndex,\n  VirksomhetPapirsoknadIndex,\n  InntektsgivendeArbeidPapirsoknadIndex,\n  IArbeidFormValues,\n  AndreYtelserPapirsoknadIndex,\n  AndreYtelserFormValue,\n  BehovForTilretteleggingPanel,\n  BehovForTilretteleggingFormValues,\n  TerminFodselSvpPanel,\n  TerminFodselSvpFormValues,\n  Tilrettelegging,\n  MottattDatoFormValues,\n  ANDRE_YTELSER_FORM_NAME_PREFIX,\n} from '@navikt/fp-papirsoknad-ui-komponenter';\nimport { familieHendelseType, KodeverkType } from '@navikt/fp-kodeverk';\n\nconst FRILANS_NAME_PREFIX = 'frilans';\n\ntype FormValues = {\n  rettigheter?: string;\n  [FRILANS_NAME_PREFIX]: FrilansFormValues;\n} & AndreYtelserFormValue &\n  IArbeidFormValues &\n  OppholdINorgeFormValues &\n  BehovForTilretteleggingFormValues &\n  TerminFodselSvpFormValues &\n  MottattDatoFormValues;\n\nconst buildInitialValues = (andreYtelser: KodeverkMedNavn[]): FormValues => ({\n  ...AndreYtelserPapirsoknadIndex.buildInitialValues(andreYtelser),\n  ...InntektsgivendeArbeidPapirsoknadIndex.buildInitialValues(),\n  ...OppholdINorgePapirsoknadIndex.buildInitialValues(),\n  ...BehovForTilretteleggingPanel.buildInitialValues(),\n  [FRILANS_NAME_PREFIX]: FrilansPapirsoknadIndex.buildInitialValues(),\n});\n\ntype TilretteleggingArbeidsforhold = {\n  '@type': string;\n  behovsdato?: string;\n  organisasjonsnummer?: string;\n  tilrettelegginger?: Tilrettelegging[];\n};\n\nconst transformTilretteleggingsArbeidsforhold = (formValues: FormValues): TilretteleggingArbeidsforhold[] => {\n  let transformerteVerdier = [] as TilretteleggingArbeidsforhold[];\n\n  const { tilretteleggingArbeidsforhold } = formValues;\n\n  if (\n    tilretteleggingArbeidsforhold?.sokForArbeidsgiver &&\n    tilretteleggingArbeidsforhold?.tilretteleggingForArbeidsgiver\n  ) {\n    transformerteVerdier = transformerteVerdier.concat(\n      tilretteleggingArbeidsforhold.tilretteleggingForArbeidsgiver.map(ta => ({\n        '@type': 'VI',\n        behovsdato: ta.behovsdato,\n        organisasjonsnummer: ta.organisasjonsnummer,\n        tilrettelegginger: ta.tilretteleggingArbeidsgiver,\n      })),\n    );\n  }\n  if (tilretteleggingArbeidsforhold?.sokForFrilans) {\n    transformerteVerdier.push({\n      '@type': 'FR',\n      behovsdato: tilretteleggingArbeidsforhold.behovsdatoFrilans,\n      tilrettelegginger: tilretteleggingArbeidsforhold.tilretteleggingFrilans,\n    });\n  }\n  if (tilretteleggingArbeidsforhold?.sokForSelvstendigNaringsdrivende) {\n    transformerteVerdier.push({\n      '@type': 'SN',\n      behovsdato: tilretteleggingArbeidsforhold.behovsdatoSN,\n      tilrettelegginger: tilretteleggingArbeidsforhold.tilretteleggingSelvstendigNaringsdrivende,\n    });\n  }\n\n  return transformerteVerdier;\n};\n\nconst transformValues = (formValues: FormValues, andreYtelserKodeverk: KodeverkMedNavn[]): any => ({\n  ...OppholdINorgePapirsoknadIndex.transformValues(formValues),\n  foedselsDato: formValues.foedselsDato,\n  tilretteleggingArbeidsforhold: transformTilretteleggingsArbeidsforhold(formValues),\n  [FRILANS_NAME_PREFIX]: FrilansPapirsoknadIndex.transformValues(formValues[FRILANS_NAME_PREFIX]),\n  [ANDRE_YTELSER_FORM_NAME_PREFIX]: AndreYtelserPapirsoknadIndex.transformValues(formValues, andreYtelserKodeverk),\n});\n\ninterface OwnProps {\n  readOnly: boolean;\n  soknadData: SoknadData;\n  alleKodeverk: AlleKodeverk;\n  onSubmit: (values: any) => Promise<any>;\n  onSubmitUfullstendigsoknad: () => Promise<any>;\n}\n\n/**\n * SvangerskapspengerForm\n *\n * Form-komponent for registrering av papirsøknad for svangerskapspenger.\n */\nconst SvangerskapspengerForm: FunctionComponent<OwnProps> = ({\n  readOnly,\n  soknadData,\n  alleKodeverk,\n  onSubmit,\n  onSubmitUfullstendigsoknad,\n}) => {\n  const formMethods = useForm<FormValues>({\n    defaultValues: useMemo(() => buildInitialValues(alleKodeverk[KodeverkType.ARBEID_TYPE]), []),\n  });\n\n  const andreYtelserKodeverk = alleKodeverk[KodeverkType.ARBEID_TYPE];\n\n  const mottattDato = formMethods.watch('mottattDato');\n\n  return (\n    <Form\n      formMethods={formMethods}\n      onSubmit={(values: FormValues) => onSubmit(transformValues(values, andreYtelserKodeverk))}\n    >\n      <MottattDatoPapirsoknadIndex readOnly={readOnly} />\n      <OppholdINorgePapirsoknadIndex\n        readOnly={readOnly}\n        alleKodeverk={alleKodeverk}\n        erAdopsjon={soknadData.getFamilieHendelseType() !== familieHendelseType.ADOPSJON}\n        mottattDato={mottattDato}\n      />\n      <InntektsgivendeArbeidPapirsoknadIndex readOnly={readOnly} alleKodeverk={alleKodeverk} />\n      <VirksomhetPapirsoknadIndex readOnly={readOnly} alleKodeverk={alleKodeverk} />\n      <FrilansPapirsoknadIndex readOnly={readOnly} />\n      <AndreYtelserPapirsoknadIndex readOnly={readOnly} kunMiliterEllerSiviltjeneste alleKodeverk={alleKodeverk} />\n      <TerminFodselSvpPanel readOnly={readOnly} />\n      <BehovForTilretteleggingPanel readOnly={readOnly} />\n      <SprakPapirsoknadIndex readOnly={readOnly} />\n      <LagreSoknadPapirsoknadIndex\n        readOnly={readOnly}\n        onSubmitUfullstendigsoknad={onSubmitUfullstendigsoknad}\n        submitting={formMethods.formState.isSubmitting}\n      />\n    </Form>\n  );\n};\n\nexport default SvangerskapspengerForm;\n","import React, { FunctionComponent } from 'react';\nimport { RawIntlProvider } from 'react-intl';\nimport { createIntl } from '@navikt/ft-utils';\n\nimport { AlleKodeverk } from '@navikt/fp-types';\nimport { SoknadData } from '@navikt/fp-papirsoknad-ui-komponenter';\n\nimport SvangerskapspengerForm from './components/SvangerskapspengerForm';\nimport messages from '../../i18n/nb_NO.json';\n\nconst intl = createIntl(messages);\n\ninterface OwnProps {\n  onSubmitUfullstendigsoknad: () => Promise<any>;\n  onSubmit: (values: any) => Promise<any>;\n  readOnly: boolean;\n  soknadData: SoknadData;\n  alleKodeverk: AlleKodeverk;\n}\n\nconst SvangerskapspengerPapirsoknadIndex: FunctionComponent<OwnProps> = ({\n  onSubmitUfullstendigsoknad,\n  onSubmit,\n  readOnly,\n  soknadData,\n  alleKodeverk,\n}) => (\n  <RawIntlProvider value={intl}>\n    <SvangerskapspengerForm\n      onSubmitUfullstendigsoknad={onSubmitUfullstendigsoknad}\n      onSubmit={onSubmit}\n      readOnly={readOnly}\n      soknadData={soknadData}\n      alleKodeverk={alleKodeverk}\n    />\n  </RawIntlProvider>\n);\n\nexport default SvangerskapspengerPapirsoknadIndex;\n","import React, { useCallback, FunctionComponent, useMemo } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { FormattedMessage } from 'react-intl';\nimport { Detail, Heading, Button } from '@navikt/ds-react';\nimport { Form, RadioGroupPanel } from '@navikt/ft-form-hooks';\nimport { familieHendelseType, fagsakYtelseType as FagsakYtelseType, KodeverkType } from '@navikt/fp-kodeverk';\nimport { ariaCheck, required } from '@navikt/ft-form-validators';\nimport { BorderBox, FlexColumn, FlexContainer, FlexRow, VerticalSpacer } from '@navikt/ft-ui-komponenter';\nimport { AlleKodeverk } from '@navikt/fp-types';\nimport { SoknadData } from '@navikt/fp-papirsoknad-ui-komponenter';\n\nimport styles from './soknadTypePickerForm.module.css';\n\nexport const SøknadTyper = [familieHendelseType.ADOPSJON, familieHendelseType.FODSEL];\n\ninterface FormValues {\n  fagsakYtelseType?: string;\n  familieHendelseType?: string;\n  foreldreType?: string;\n}\n\ninterface OwnProps {\n  setSoknadData: (soknadData: SoknadData) => void;\n  fagsakYtelseType: string;\n  alleKodeverk: AlleKodeverk;\n}\n\n/**\n * SoknadTypePickerForm\n *\n * Toppkomponent for registrering av papirsøknad der søknadstype, tema og søker/foreldretype blir valgt.\n */\nconst SoknadTypePickerForm: FunctionComponent<OwnProps> = ({ setSoknadData, fagsakYtelseType, alleKodeverk }) => {\n  const defaultValues = useMemo<FormValues>(\n    () => ({\n      fagsakYtelseType,\n      familieHendelseType: undefined,\n      foreldreType: undefined,\n    }),\n    [fagsakYtelseType],\n  );\n\n  const formMethods = useForm<FormValues>({\n    defaultValues,\n  });\n\n  const selectedFagsakYtelseType = formMethods.watch('fagsakYtelseType');\n\n  const onSubmit = useCallback(\n    (values: FormValues) =>\n      setSoknadData(new SoknadData(values.fagsakYtelseType!, values.familieHendelseType, values.foreldreType!)),\n    [setSoknadData],\n  );\n\n  const fagsakYtelseTyper = alleKodeverk[KodeverkType.FAGSAK_YTELSE];\n  const familieHendelseTyper = alleKodeverk[KodeverkType.FAMILIE_HENDELSE_TYPE];\n  const foreldreTyper = alleKodeverk[KodeverkType.FORELDRE_TYPE];\n\n  return (\n    <Form formMethods={formMethods} onSubmit={onSubmit}>\n      <BorderBox className={styles.container}>\n        <Heading size=\"small\">\n          <FormattedMessage id=\"Registrering.Omsoknaden.Title\" />\n        </Heading>\n        <VerticalSpacer sixteenPx />\n        <FlexContainer>\n          <FlexRow>\n            <FlexColumn className={styles.colWidth}>\n              <Detail>\n                <FormattedMessage id=\"Registrering.Omsoknaden.soknadstype\" />\n              </Detail>\n              <VerticalSpacer fourPx />\n              <RadioGroupPanel\n                name=\"fagsakYtelseType\"\n                validate={[required]}\n                radios={fagsakYtelseTyper.map(fyt => ({\n                  label: fyt.navn,\n                  value: fyt.kode,\n                  disabled: !!fagsakYtelseType,\n                }))}\n              />\n            </FlexColumn>\n            <FlexColumn className={styles.colWidth}>\n              <Detail>\n                <FormattedMessage id=\"Registrering.Omsoknaden.Tema\" />\n              </Detail>\n              <VerticalSpacer fourPx />\n              <RadioGroupPanel\n                name=\"familieHendelseType\"\n                validate={selectedFagsakYtelseType === FagsakYtelseType.SVANGERSKAPSPENGER ? [] : [required]}\n                radios={familieHendelseTyper\n                  .filter(({ kode }) => SøknadTyper.includes(kode))\n                  .map(bmt => ({\n                    label: bmt.navn,\n                    value: bmt.kode,\n                    disabled: selectedFagsakYtelseType === FagsakYtelseType.SVANGERSKAPSPENGER,\n                  }))}\n              />\n            </FlexColumn>\n            <FlexColumn className={styles.colWidth}>\n              <Detail>\n                <FormattedMessage id=\"Registrering.Omsoknaden.Soker\" />\n              </Detail>\n              <VerticalSpacer fourPx />\n              <RadioGroupPanel\n                name=\"foreldreType\"\n                validate={[required]}\n                radios={foreldreTyper.map(ft => ({\n                  label: ft.navn,\n                  value: ft.kode,\n                }))}\n              />\n            </FlexColumn>\n          </FlexRow>\n        </FlexContainer>\n        <VerticalSpacer thirtyTwoPx />\n        <div className={styles.pushRight}>\n          <Button\n            size=\"small\"\n            variant=\"primary\"\n            onClick={ariaCheck}\n            disabled={formMethods.formState.isSubmitting || formMethods.formState.isSubmitted}\n          >\n            <FormattedMessage id=\"Registrering.Omsoknaden.VisSkjema\" />\n          </Button>\n        </div>\n      </BorderBox>\n    </Form>\n  );\n};\n\nexport default SoknadTypePickerForm;\n","import React, { FunctionComponent, useCallback, useState } from 'react';\nimport { FormattedMessage, RawIntlProvider } from 'react-intl';\nimport { Heading, Panel } from '@navikt/ds-react';\nimport { createIntl } from '@navikt/ft-utils';\nimport { FagsakYtelseType } from '@navikt/ft-kodeverk';\nimport { AksjonspunktHelpTextHTML, VerticalSpacer } from '@navikt/ft-ui-komponenter';\n\nimport { SoknadData } from '@navikt/fp-papirsoknad-ui-komponenter';\nimport { AlleKodeverk, Fagsak } from '@navikt/fp-types';\n\nimport EngangsstonadPapirsoknadIndex from './engangsstonad/EngangsstonadPapirsoknadIndex';\nimport ForeldrepengerPapirsoknadIndex from './foreldrepenger/ForeldrepengerPapirsoknadIndex';\nimport SvangerskapspengerPapirsoknadIndex from './svangerskapspenger/SvangerskapspengerPapirsoknadIndex';\nimport SoknadTypePickerForm from './SoknadTypePickerForm';\nimport messages from '../i18n/nb_NO.json';\n\nimport styles from './registrerPapirsoknadPanel.module.css';\n\nconst intl = createIntl(messages);\n\ninterface OwnProps {\n  fagsak: Fagsak;\n  kodeverk: AlleKodeverk;\n  readOnly: boolean;\n  lagreUfullstendig: (fagsakYtelseType: string, familieHendelseType: string, foreldreType: string) => Promise<any>;\n  lagreFullstendig: (\n    formValues: any,\n    fagsakYtelseType: string,\n    familieHendelseType: string,\n    foreldreType: string,\n  ) => Promise<any>;\n  erEndringssøknad: boolean;\n}\n\nconst RegistrerPapirsoknadPanel: FunctionComponent<OwnProps> = ({\n  fagsak,\n  kodeverk,\n  readOnly,\n  lagreUfullstendig,\n  lagreFullstendig,\n  erEndringssøknad,\n}) => {\n  const [soknadData, setSoknadData] = useState<SoknadData>();\n\n  const lagre = useCallback(\n    (formValues: any) => {\n      if (soknadData) {\n        lagreFullstendig(\n          formValues,\n          soknadData.fagsakYtelseType,\n          soknadData.familieHendelseType,\n          soknadData.foreldreType,\n        );\n      }\n      return Promise.resolve();\n    },\n    [soknadData],\n  );\n  const lagreOgAvslutt = useCallback(() => {\n    if (soknadData) {\n      lagreUfullstendig(soknadData.fagsakYtelseType, soknadData.familieHendelseType, soknadData.foreldreType);\n    }\n    return Promise.resolve();\n  }, [soknadData]);\n\n  return (\n    <RawIntlProvider value={intl}>\n      <Panel className={styles.panel}>\n        <Heading size=\"small\">\n          <FormattedMessage id=\"Registrering.RegistrereSoknad\" />\n        </Heading>\n        <VerticalSpacer sixteenPx />\n        {!readOnly && (\n          <AksjonspunktHelpTextHTML>\n            <FormattedMessage key=\"regOpplysninger\" id=\"Registrering.RegistrerAlleOpplysninger\" />\n          </AksjonspunktHelpTextHTML>\n        )}\n        <VerticalSpacer sixteenPx />\n        <VerticalSpacer sixteenPx />\n        <SoknadTypePickerForm\n          setSoknadData={setSoknadData}\n          fagsakYtelseType={fagsak.fagsakYtelseType}\n          alleKodeverk={kodeverk}\n        />\n        {soknadData && soknadData.getFagsakYtelseType() === FagsakYtelseType.ENGANGSSTONAD && (\n          <EngangsstonadPapirsoknadIndex\n            onSubmitUfullstendigsoknad={lagreOgAvslutt}\n            onSubmit={lagre}\n            readOnly={readOnly}\n            soknadData={soknadData}\n            alleKodeverk={kodeverk}\n          />\n        )}\n        {soknadData && soknadData.getFagsakYtelseType() === FagsakYtelseType.FORELDREPENGER && (\n          <ForeldrepengerPapirsoknadIndex\n            onSubmitUfullstendigsoknad={lagreOgAvslutt}\n            onSubmit={lagre}\n            readOnly={readOnly}\n            soknadData={soknadData}\n            alleKodeverk={kodeverk}\n            fagsakPersonnummer={fagsak.bruker.fødselsnummer}\n            erEndringssøknad={erEndringssøknad}\n          />\n        )}\n        {soknadData && soknadData.getFagsakYtelseType() === FagsakYtelseType.SVANGERSKAPSPENGER && (\n          <SvangerskapspengerPapirsoknadIndex\n            onSubmitUfullstendigsoknad={lagreOgAvslutt}\n            onSubmit={lagre}\n            readOnly={readOnly}\n            soknadData={soknadData}\n            alleKodeverk={kodeverk}\n          />\n        )}\n      </Panel>\n    </RawIntlProvider>\n  );\n};\n\nexport default RegistrerPapirsoknadPanel;\n","import React, { FunctionComponent } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Alert, Button, Modal } from '@navikt/ds-react';\nimport { createIntl } from '@navikt/ft-utils';\n\nimport messages from '../../i18n/nb_NO.json';\nimport styles from './soknadRegistrertModal.module.css';\n\nconst intl = createIntl(messages);\n\ninterface OwnProps {\n  isOpen?: boolean;\n}\n\n/**\n * SoknadRegistrertModal\n *\n * Informasjonsmodal som vises til saksbehandler når en papirsøknad har blitt registrert.\n */\nconst SoknadRegistrertModal: FunctionComponent<OwnProps> = ({ isOpen = false }) => (\n  <Modal\n    className={styles.modalStyle}\n    open={isOpen}\n    aria-label={intl.formatMessage({ id: 'SoknadRegistrertModal.ContentLabel' })}\n    onClose={() => undefined}\n  >\n    <Modal.Body>\n      <Alert size=\"small\" variant=\"success\" className={styles.alertStyle}>\n        <div className={styles.left}>\n          <p className={styles.reduceMargin}>{intl.formatMessage({ id: 'SoknadRegistrertModal.InfoTextOne' })}</p>\n          <p className={styles.reduceMargin}>{intl.formatMessage({ id: 'SoknadRegistrertModal.InfoTextTwo' })}</p>\n        </div>\n        <div className={styles.right}>\n          <Link to=\"/\">\n            <Button size=\"small\" variant=\"primary\">\n              {intl.formatMessage({ id: 'SoknadRegistrertModal.OkButtonText' })}\n            </Button>\n          </Link>\n        </div>\n      </Alert>\n    </Modal.Body>\n  </Modal>\n);\n\nexport default SoknadRegistrertModal;\n","import React, { FunctionComponent, useState, useCallback, useMemo } from 'react';\nimport { Aksjonspunkt } from '@navikt/ft-types';\nimport { LoadingPanel } from '@navikt/ft-ui-komponenter';\n\nimport { AksjonspunktCode } from '@navikt/fp-kodeverk';\nimport { AlleKodeverk, Behandling, AksessRettigheter, Fagsak } from '@navikt/fp-types';\nimport { AsyncPollingStatus } from '@navikt/fp-rest-api';\nimport { RegistrerPapirsoknadPanel, SoknadRegistrertModal } from '@navikt/fp-papirsoknad';\n\nimport { useNavigate } from 'react-router';\nimport BehandlingPaVent from '../felles/modaler/paVent/BehandlingPaVent';\n\nconst getAktivtPapirsoknadApKode = (aksjonspunkter: Aksjonspunkt[]): string =>\n  aksjonspunkter\n    .map(ap => ap.definisjon)\n    .filter(\n      kode =>\n        kode === AksjonspunktCode.REGISTRER_PAPIRSOKNAD_ENGANGSSTONAD ||\n        kode === AksjonspunktCode.REGISTRER_PAPIRSOKNAD_FORELDREPENGER ||\n        kode === AksjonspunktCode.REGISTRER_PAPIR_ENDRINGSØKNAD_FORELDREPENGER ||\n        kode === AksjonspunktCode.REGISTRER_PAPIRSOKNAD_SVANGERSKAPSPENGER,\n    )[0];\n\nconst lagLagreFunksjon =\n  (\n    behandling: Behandling,\n    fagsak: Fagsak,\n    lagreAksjonspunkt: (params?: any, keepData?: boolean) => Promise<Behandling | undefined>,\n    setAksjonspunktLagret: (erApLagret: boolean) => void,\n  ) =>\n  (formValues: any, fagsakYtelseType: string, familieHendelseType: string, foreldreType: string) => {\n    const manuellRegistreringDtoList = [\n      {\n        '@type': getAktivtPapirsoknadApKode(behandling.aksjonspunkt),\n        tema: familieHendelseType,\n        soknadstype: fagsakYtelseType,\n        soker: foreldreType,\n        ...formValues,\n      },\n    ];\n\n    const params = {\n      saksnummer: fagsak.saksnummer,\n      behandlingUuid: behandling.uuid,\n      behandlingVersjon: behandling.versjon,\n      bekreftedeAksjonspunktDtoer: manuellRegistreringDtoList,\n    };\n    return lagreAksjonspunkt(params).then(returnertBehandling => {\n      if (returnertBehandling?.taskStatus?.status !== AsyncPollingStatus.HALTED) {\n        setAksjonspunktLagret(true);\n      }\n    });\n  };\n\ninterface OwnProps {\n  fagsak: Fagsak;\n  behandling: Behandling;\n  kodeverk: AlleKodeverk;\n  rettigheter: AksessRettigheter;\n  lagreAksjonspunkt: (params?: any, keepData?: boolean) => Promise<Behandling | undefined>;\n}\n\n/**\n * RegisterPapirsoknad\n *\n * Har ansvar for å sette opp skjemaet for registrering av papirsøknad for engangsstønad eller foreldrepenger.\n * Komponenten tilpasser skjemaet til valgt søknadstype (engagnsstønad eller foreldrepenger), valgt søknadtema (fødsel, adopsjon eller omsorg)\n * og valgt foreldretype (mor, far/medmor eller tredjepart).\n */\nconst RegistrerPapirsoknad: FunctionComponent<OwnProps> = ({\n  fagsak,\n  behandling,\n  kodeverk,\n  rettigheter,\n  lagreAksjonspunkt,\n}) => {\n  const [erAksjonspunktLagret, setAksjonspunktLagret] = useState(false);\n  const readOnly = !rettigheter.writeAccess.isEnabled || behandling.behandlingPaaVent;\n\n  const lagre = useMemo(\n    () => lagLagreFunksjon(behandling, fagsak, lagreAksjonspunkt, setAksjonspunktLagret),\n    [behandling, fagsak, lagreAksjonspunkt, setAksjonspunktLagret],\n  );\n  const lagreUfullstendig = useCallback(\n    (fagsakYtelseType: string, familieHendelseType: string, foreldreType: string) =>\n      lagre({ ufullstendigSoeknad: true }, fagsakYtelseType, familieHendelseType, foreldreType),\n    [lagre],\n  );\n\n  const navigate = useNavigate();\n  const opneSokeside = useCallback(() => {\n    navigate('/');\n  }, []);\n\n  if (!behandling.aksjonspunkt) {\n    return <LoadingPanel />;\n  }\n\n  const erEndringssøknad = behandling.aksjonspunkt.some(\n    ap => ap.definisjon === AksjonspunktCode.REGISTRER_PAPIR_ENDRINGSØKNAD_FORELDREPENGER,\n  );\n\n  return (\n    <>\n      <BehandlingPaVent behandling={behandling} kodeverk={kodeverk} opneSokeside={opneSokeside} />\n      <SoknadRegistrertModal isOpen={erAksjonspunktLagret} />\n      <RegistrerPapirsoknadPanel\n        fagsak={fagsak}\n        kodeverk={kodeverk}\n        readOnly={readOnly}\n        lagreUfullstendig={lagreUfullstendig}\n        lagreFullstendig={lagre}\n        erEndringssøknad={erEndringssøknad}\n      />\n    </>\n  );\n};\n\nexport default RegistrerPapirsoknad;\n","import React, { FunctionComponent, useEffect } from 'react';\nimport { AksessRettigheter, AlleKodeverk, Behandling, Fagsak } from '@navikt/fp-types';\n\nimport RegistrerPapirsoknad from './RegistrerPapirsoknad';\nimport { BehandlingApiKeys, restBehandlingApiHooks } from '../../data/behandlingContextApi';\n\nconst useSetBehandlingVedEndring = (setBehandling: (behandling: Behandling) => void, behandling?: Behandling): void => {\n  useEffect(() => {\n    if (behandling) {\n      setBehandling(behandling);\n    }\n  }, [behandling]);\n};\n\ntype OwnProps = {\n  behandling: Behandling;\n  setBehandling: (behandling: Behandling) => void;\n  kodeverk: AlleKodeverk;\n  fagsak: Fagsak;\n  rettigheter: AksessRettigheter;\n};\n\nconst BehandlingPapirsoknadIndex: FunctionComponent<OwnProps> = ({\n  behandling,\n  setBehandling,\n  kodeverk,\n  fagsak,\n  rettigheter,\n}) => {\n  const { startRequest: lagreAksjonspunkter, data: apBehandlingRes } = restBehandlingApiHooks.useRestApiRunner(\n    BehandlingApiKeys.SAVE_AKSJONSPUNKT,\n  );\n  useSetBehandlingVedEndring(setBehandling, apBehandlingRes);\n\n  return (\n    <RegistrerPapirsoknad\n      behandling={behandling}\n      fagsak={fagsak}\n      kodeverk={kodeverk}\n      rettigheter={rettigheter}\n      lagreAksjonspunkt={lagreAksjonspunkter}\n    />\n  );\n};\n\nexport default BehandlingPapirsoknadIndex;\n"],"names":["arbeidskategori","arbeidType","foreldreType","kanIkkeOppgiAnnenForelderArsaker","naringsvirksomhetType","overforingArsak","ANDRE_YTELSER_NAME_PREFIX","ANDRE_YTELSER_PERIODE_SUFFIX","getValue","getValues","fieldName","RenderAndreYtelserPerioderFieldArray","readOnly","name","intl","useIntl","control","trigger","isSubmitted","useFormContext","fields","remove","append","useFieldArray","jsx","PeriodFieldArray","field","index","getRemoveButton","namePart1","jsxs","styles","FlexContainer","FlexRow","FlexColumn","Datepicker","required","hasValidDate","fomVerdi","tomVerdi","dateBeforeOrEqual","dateAfterOrEqual","VerticalSpacer","values","ytelseType","ytelsePeriode","removeArbeidstyper","andreYtelser","kunMiliterEllerSiviltjeneste","ay","AndreYtelserPanel","alleKodeverk","watch","selectedYtelser","KodeverkType","filtrerteArbeidstyper","useMemo","BorderBox","Heading","FormattedMessage","ytelseFieldName","React","CheckboxField","Fragment","ArrowBox","ytelseInitialValues","ytelsePeriodeFieldName","ytelseValues","newValues","ytelsePerioderFieldName","ytelsePerioder","tv","createIntl","messages","AndreYtelserPapirsoknadIndex","RawIntlProvider","ANNEN_FORELDER_NAME_PREFIX","KAN_IKKE_OPPGI_NAME_PREFIX","filtrerLandOgLagOptions","landkoder","kode","Landkode","navn","AnnenForelderPanel","permisjonRettigheterPanel","fagsakPersonnummer","formatMessage","kanIkkeOppgiAnnenForelder","kanIkkeOppgiBegrunnelse","sorterteLand","a","InputField","value","hasValidFodselsnummerFormat","hasValidFodselsnummer","foedselsnummer","sammeFodselsnummerSomSokerMessage","RadioGroupPanel","kanIkkeOppgiAnnenForelderArsak","SelectField","AnnenForelderPapirsoknadIndex","validateMinValue1","minValue","validateMaxValue9","maxValue","getToday","moment","getEarliestTerminDato","getLatestTerminbekreftelseDato","termindato","earliestTerminDato","actualTermindato","ISO_DATE_FORMAT","today","validateTermin","terminbekreftelseDato","TerminFodselDatoPanel","erForeldrepenger","erBarnetFodt","hasValidInteger","dateBeforeOrEqualToToday","Alert","Label","FodselPapirsoknadIndex","FRILANS_NAME_PREFIX","FrilansPerioderFieldArray","sortFomDates","perioder","p","periodeFom1","periodeFom2","defaultFrilansPeriode","maxLength50","maxLength","getValiderAtFomDatoErFørFørstePeriode","sorterteFomDatoer","FrilansOppdragForFamilieFieldArray","FrilansOppdragForFamiliePanel","harHattOppdragForFamilie","FrilansPanel","Detail","formValues","FrilansPapirsoknadIndex","INNTEKTSGIVENDE_ARBEID_FIELD_ARRAY_NAME","defaultInntektsgivendeArbeid","countrySelectValues","countryCodes","RenderInntektsgivendeArbeidFieldArray","sortedCountriesByName","b","InntektsgivendeArbeidPanel","InntektsgivendeArbeidPapirsoknadIndex","LukkPapirSoknadModal","showModal","handleSubmit","cancelEvent","Modal","ExclamationmarkTriangleFillIcon","BodyShort","Link","Button","maxLength1500","LagreSoknadPanel","submitting","onSubmitUfullstendigsoknad","showLukkSoknadModal","setShowLukkSoknadModal","useState","ufullstendigSoeknad","toggleLukkPapirsoknadModal","useCallback","TextAreaField","hasValidText","ariaCheck","LukkPapirsoknadModal","LagreSoknadPapirsoknadIndex","MottattDatoPanel","MottattDatoPapirsoknadIndex","MAX_ANTALL_BARN","minAntall","maxAntall","OMSORG_NAME_PREFIX","getValideringMotAnnenFødselsdato","fodselsdato","fDato","isDatesEqual","OmsorgOgAdopsjonPanel","familieHendelseType","isForeldrepengerFagsak","fodselsdatoer","antallBarnState","antallBarn","useEffect","i","fht","parsedValue","f","OmsorgOgAdopsjonPapirsoknadIndex","classNames","classnames","defaultUtenlandsOpphold","getOverlappingValidator","periodeMap","periodeFom","periodeTom","dateRangesNotOverlapping","getValiderFørEllerEtter","sjekkFør","UtenlandsOppholdField","erTidligereOpphold","mottattDato","land","AvsnittSkiller","OppholdINorgePanel","erAdopsjon","harTidligereOppholdUtenlands","harFremtidigeOppholdUtenlands","OppholdINorgePapirsoknadIndex","rettighet","RettigheterPanel","soknadData","options","RettigheterPapirsoknadIndex","sprakvalg","SprakPanel","SprakPapirsoknadIndex","VirksomhetIdentifikasjonPanel","virksomhetRegistrertINorge","hasValidOrgNumber","tomDato","fom","validPeriodeFomTom","VirksomhetRegnskapPanel","harRegnskapsforer","VirksomhetStartetEndretPanel","setError","clearErrors","formState","varigEndretEllerStartetSisteFireAr","harVarigEndring","erNyoppstartet","erNyIArbeidslivet","isError","_b","_a","ErrorMessage","_d","_c","VirksomhetRelasjonPanel","TYPE_VIRKSOMHET_PREFIX","naringsvirksomhetTypeOrder","compare","arg1","arg2","VirksomhetTypeNaringPanel","virksomhetTyper","naringvirksomhetTyper","t","checkboxVerdier","v","isRequiredMessage","nv","Fragment2","RegistrerVirksomhetModalForm","closeEvent","onSubmit","virksomhet","formMethods","useForm","Form","EGEN_VIRKSOMHET_NAME_PREFIX","RegistrerVirksomhetPanel","virksomhetIndex","setVirksomhetIndex","update","visModal","lukkModal","leggTilVirksomhet","justertVirksomhet","XMarkIcon","e","PlusCircleIcon","EgenVirksomhetPanel","harArbeidetIEgenVirksomhet","VirksomhetPapirsoknadIndex","DekningsgradIndex","BekreftelsePanel","annenForelderInformertRequired","PermisjonRettigheterPanel","sokerErMor","sokerHarAleneomsorg","annenForelderHarRett","annenForelderRettEØS","maxValue100","TIDSROM_PERMISJON_FORM_NAME_PREFIX","PERMISJON_PERIODE_FIELD_ARRAY_NAME","gyldigeUttakperioder","uttakPeriodeType","mapPeriodeTyper","typer","mapAktiviteter","aktiviteter","PERIODS_WITH_NO_MORS_AKTIVITET","getLabel","erForsteRad","text","erPeriodeFormFør01012019","getValiderFomOgTomVerdi","erFør","RenderPermisjonPeriodeFieldArray","periodeTyper","morsAktivitetTyper","periode","periodeFomForTidlig","visEllerSkulOverskriftStyle","skalDisableMorsAktivitet","hasValidDecimal","UTSETTELSE_PERIODE_FIELD_ARRAY_NAME","defaultUtsettelsePeriode","getValiderFomTomRekkefølge","mapTyper","mapKvoter","RenderUtsettelsePeriodeFieldArray","utsettelseReasons","utsettelseKvoter","triggerValidationOnChange","fieldArrayName","erArbeidstaker","PermisjonUtsettelsePanel","skalUtsette","global","factory","module","this","hookCallback","hooks","setHookCallback","callback","isArray","input","isObject","hasOwnProp","isObjectEmpty","obj","k","isUndefined","isNumber","isDate","map","arr","fn","res","arrLen","extend","createUTC","format","locale","strict","createLocalOrUTC","defaultParsingFlags","getParsingFlags","m","some","fun","len","isValid","flags","parsedParts","isNowValid","createInvalid","momentProperties","updateInProgress","copyConfig","to","from","prop","val","momentPropertiesLen","Moment","config","isMoment","warn","msg","deprecate","firstTime","args","arg","key","argLen","deprecations","deprecateSimple","isFunction","set","mergeConfigs","parentConfig","childConfig","Locale","keys","defaultCalendar","calendar","mom","now","output","zeroFill","number","targetLength","forceSign","absNumber","zerosToFill","sign","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","func","removeFormattingTokens","makeFormatFunction","array","length","formatMoment","expandFormat","replaceLongDateFormatTokens","defaultLongDateFormat","longDateFormat","formatUpper","tok","defaultInvalidDate","invalidDate","defaultOrdinal","defaultDayOfMonthOrdinalParse","defaultRelativeTime","relativeTime","withoutSuffix","string","isFuture","pastFuture","diff","aliases","addUnitAlias","unit","shorthand","lowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedInput","normalizedProp","priorities","addUnitPriority","priority","getPrioritizedUnits","unitsObj","u","isLeapYear","year","absFloor","toInt","argumentForCoercion","coercedNumber","makeGetSet","keepTime","set$1","get","daysInMonth","stringGet","stringSet","prioritized","prioritizedLen","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchTimestamp","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","localeData","getParseRegexForToken","unescapeFormat","s","regexEscape","matched","p1","p2","p3","p4","tokens","addParseToken","tokenLen","addWeekParseToken","addTimeToArrayFromToken","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","mod","n","x","indexOf","o","month","modMonth","defaultLocaleMonths","defaultLocaleMonthsShort","MONTHS_IN_FORMAT","defaultMonthsShortRegex","defaultMonthsRegex","localeMonths","localeMonthsShort","handleStrictParse","monthName","ii","llc","localeMonthsParse","setMonth","dayOfMonth","getSetMonth","getDaysInMonth","monthsShortRegex","computeMonthsParse","monthsRegex","cmpLenRev","shortPieces","longPieces","mixedPieces","y","daysInYear","getSetYear","getIsLeapYear","createDate","d","h","M","ms","date","createUTCDate","firstWeekOffset","dow","doy","fwd","fwdlw","dayOfYearFromWeeks","week","weekday","localWeekday","weekOffset","dayOfYear","resYear","resDayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","localeWeek","defaultLocaleWeek","localeFirstDayOfWeek","localeFirstDayOfYear","getSetWeek","getSetISOWeek","parseWeekday","parseIsoWeekday","shiftWeekdays","ws","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","localeWeekdays","weekdays","localeWeekdaysShort","localeWeekdaysMin","handleStrictParse$1","weekdayName","localeWeekdaysParse","getSetDayOfWeek","day","getSetLocaleDayOfWeek","getSetISODayOfWeek","weekdaysRegex","computeWeekdaysParse","weekdaysShortRegex","weekdaysMinRegex","minPieces","minp","shortp","longp","hFormat","kFormat","meridiem","lowercase","matchMeridiem","kInput","pos","pos1","pos2","localeIsPM","defaultLocaleMeridiemParse","getSetHour","localeMeridiem","hours","minutes","isLower","baseConfig","locales","localeFamilies","globalLocale","commonPrefix","arr1","arr2","minl","normalizeLocale","chooseLocale","names","j","next","split","loadLocale","isLocaleNameSane","oldLocale","aliasedRequire","require","getSetGlobalLocale","data","getLocale","defineLocale","updateLocale","tmpLocale","listLocales","checkOverflow","overflow","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","rfc2822","obsOffsets","configFromISO","l","match","allowTime","dateFormat","timeFormat","tzFormat","isoDatesLen","isoTimesLen","configFromStringAndFormat","extractFromRFC2822Strings","yearStr","monthStr","dayStr","hourStr","minuteStr","secondStr","result","untruncateYear","preprocessRFC2822","checkWeekday","weekdayStr","parsedInput","weekdayProvided","weekdayActual","calculateOffset","obsOffset","militaryOffset","numOffset","hm","configFromRFC2822","parsedArray","configFromString","defaults","c","currentDateArray","nowValue","configFromArray","currentDate","expectedWeekday","yearToUse","dayOfYearFromWeekInfo","w","weekYear","temp","weekdayOverflow","curWeek","createLocal","skipped","stringLength","totalParsedInputLength","era","meridiemFixWrap","hour","isPm","configFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","validFormatFound","bestFormatIsValid","configfLen","configFromObject","dayOrDate","createFromConfig","prepareConfig","configFromInput","isUTC","prototypeMin","other","prototypeMax","pickBy","moments","min","max","ordering","isDurationValid","unitHasDecimal","orderLen","isValid$1","createInvalid$1","createDuration","Duration","duration","years","quarters","months","weeks","days","seconds","milliseconds","isDuration","absRound","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","offset","separator","offsetFromString","chunkOffset","matcher","matches","chunk","parts","cloneWithOffset","model","getDateOffset","getSetOffset","keepLocalTime","keepMinutes","localAdjust","addSubtract","getSetZone","setOffsetToUTC","setOffsetToLocal","setOffsetToParsedOffset","tZone","hasAlignedHourOffset","isDaylightSavingTime","isDaylightSavingTimeShifted","isLocal","isUtcOffset","isUtc","aspNetRegex","isoRegex","ret","diffRes","parseIso","momentsDifference","inp","positiveMomentsDifference","base","createAdder","direction","period","dur","tmp","isAdding","updateOffset","add","subtract","isString","isMomentInput","isNumberOrStringArray","isMomentInputObject","objectTest","propertyTest","properties","property","propertyLen","arrayTest","dataTypeTest","item","isCalendarSpec","getCalendarFormat","myMoment","calendar$1","time","formats","sod","clone","isAfter","localInput","isBefore","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","asFloat","that","zoneDelta","monthDiff","wholeMonthDiff","anchor","anchor2","adjust","toString","toISOString","keepOffset","utc","inspect","zone","prefix","datetime","suffix","inputString","fromNow","toNow","newLocaleData","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","startOf","startOfDate","endOf","valueOf","unix","toDate","toArray","toObject","toJSON","isValid$2","parsingFlags","invalidAt","creationData","matchEraAbbr","matchEraName","matchEraNarrow","matchEraYearOrdinal","localeEras","eras","localeErasParse","eraName","abbr","narrow","localeErasConvertYear","dir","getEraName","getEraNarrow","getEraAbbr","getEraYear","erasNameRegex","computeErasParse","erasAbbrRegex","erasNarrowRegex","abbrPieces","namePieces","narrowPieces","addWeekYearFormatToken","getter","getSetWeekYear","getSetWeekYearHelper","getSetISOWeekYear","getISOWeeksInYear","getISOWeeksInISOWeekYear","getWeeksInYear","weekInfo","getWeeksInWeekYear","weeksTarget","setWeekAll","dayOfYearData","getSetQuarter","getSetDayOfMonth","getSetDayOfYear","getSetMinute","getSetSecond","getSetMillisecond","parseMs","getZoneAbbr","getZoneName","proto","createUnix","createInZone","preParsePostFormat","proto$1","get$1","setter","listMonthsImpl","out","listWeekdaysImpl","localeSorted","shift","listMonths","listMonthsShort","listWeekdays","listWeekdaysShort","listWeekdaysMin","mathAbs","abs","addSubtract$1","add$1","subtract$1","absCeil","bubble","monthsFromDays","monthsToDays","daysToMonths","as","valueOf$1","makeAs","alias","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","clone$1","get$2","makeGetter","round","thresholds","substituteTimeAgo","relativeTime$1","posNegDuration","getSetRelativeTimeRounding","roundingFunction","getSetRelativeTimeThreshold","threshold","limit","humanize","argWithSuffix","argThresholds","withSuffix","th","abs$1","toISOString$1","total","totalSign","ymSign","daysSign","hmsSign","proto$2","GRADERING_PERIODE_FIELD_ARRAY_NAME","maxLength9OrFodselsnr","maxLengthOrFodselsnr","getValiderArbeidsgiverIdNårRequired","arbeidsgiverIdentifikator","validerAtArbeidsgiverIdErGyldig","defaultGraderingPeriode","gyldigArbeidskategori","mapArbeidskategori","RenderGraderingPeriodeFieldArray","graderingKvoter","arbeidskategoriTyper","graderingValues","harSamtidigUttak","PermisjonGraderingPanel","skalGradere","OVERFORING_PERIODE_FIELD_ARRAY_NAME","defaultOverforingPeriode","RenderOverforingAvKvoterFieldArray","selectValues","getText","mapArsaker","arsaker","erEndringssøknad","PermisjonOverforingAvKvoterPanel","overtaKvoteReasons","ForeldreType","skalOvertaKvote","OPPHOLD_PERIODE_FIELD_ARRAY_NAME","defaultOppholdPeriode","gyldigeÅrsaker","oppholdArsakType","RenderOppholdPeriodeFieldArray","oppholdsReasons","PermisjonOppholdPanel","skalHaOpphold","getIsRequired","fulltUttak","PermisjonPanel","permisjonValues","permisjonsdata","graderingdata","_e","_f","_g","PermisjonIndex","SoknadData","selectedFagsakYtelseType","selectedFamilieHendelseType","selectedForeldreType","__publicField","notNull","FagsakYtelseType","TerminFodselSvpPanel","maxValue3","behovForTilretteleggingFieldArrayName","selvstendigNaringsdrivendeFieldArrayName","frilansFieldArrayName","defaultTilrettelegging","BehovForTilretteleggingFieldArray","tilretteleggingType","TILRETTELEGGING_NAME_PREFIX","tilretteleggingForArbeidsgiverFieldArrayName","TilretteleggingForArbeidsgiverFieldArray","leggTilArbeidsgiver","hasNoWhiteSpace","hasValidOrgNumberOrFodselsnr","BehovForTilretteleggingPanel","sokForSelvstendigNaringsdrivende","sokForFrilans","sokForArbeidsgiver","OMSORG_FORM_NAME_PREFIX","RegistreringAdopsjonOgOmsorgGrid","HStack","RegistreringFodselGrid","buildInitialValues","erFødsel","transformValues","omitOne","EngangsstonadForm","EngangsstonadPapirsoknadIndex","andreYtelserKodeverk","ANDRE_YTELSER_FORM_NAME_PREFIX","ForeldrepengerForm","denAndreForelderenHarRettPaForeldrepenger","ForeldrepengerPapirsoknadIndex","transformTilretteleggingsArbeidsforhold","transformerteVerdier","tilretteleggingArbeidsforhold","ta","SvangerskapspengerForm","SvangerskapspengerPapirsoknadIndex","SøknadTyper","SoknadTypePickerForm","setSoknadData","fagsakYtelseType","defaultValues","fagsakYtelseTyper","familieHendelseTyper","foreldreTyper","fyt","bmt","ft","RegistrerPapirsoknadPanel","fagsak","kodeverk","lagreUfullstendig","lagreFullstendig","lagre","lagreOgAvslutt","Panel","AksjonspunktHelpTextHTML","SoknadRegistrertModal","isOpen","getAktivtPapirsoknadApKode","aksjonspunkter","ap","AksjonspunktCode","lagLagreFunksjon","behandling","lagreAksjonspunkt","setAksjonspunktLagret","manuellRegistreringDtoList","params","returnertBehandling","AsyncPollingStatus","RegistrerPapirsoknad","rettigheter","erAksjonspunktLagret","navigate","useNavigate","opneSokeside","LoadingPanel","BehandlingPaVent","useSetBehandlingVedEndring","setBehandling","BehandlingPapirsoknadIndex","lagreAksjonspunkter","apBehandlingRes","restBehandlingApiHooks","BehandlingApiKeys"],"mappings":"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","x_google_ignoreList":[50]}